{
	"id": "5965824a631af37864f564666596bdac",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/contracts/presets/ERC1155PresetMinterPauser.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"../access/AccessControl.sol\";\nimport \"../GSN/Context.sol\";\nimport \"../token/ERC1155/ERC1155.sol\";\nimport \"../token/ERC1155/ERC1155Burnable.sol\";\nimport \"../token/ERC1155/ERC1155Pausable.sol\";\n\n/**\n * @dev {ERC1155} token, including:\n *\n *  - ability for holders to burn (destroy) their tokens\n *  - a minter role that allows for token minting (creation)\n *  - a pauser role that allows to stop all token transfers\n *\n * This contract uses {AccessControl} to lock permissioned functions using the\n * different roles - head to its documentation for details.\n *\n * The account that deploys the contract will be granted the minter and pauser\n * roles, as well as the default admin role, which will let it grant both minter\n * and pauser roles to other accounts.\n */\ncontract ERC1155PresetMinterPauser is Context, AccessControl, ERC1155Burnable, ERC1155Pausable {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n\n    /**\n     * @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE`, and `PAUSER_ROLE` to the account that\n     * deploys the contract.\n     */\n    constructor(string memory uri) public ERC1155(uri) {\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n\n        _setupRole(MINTER_ROLE, _msgSender());\n        _setupRole(PAUSER_ROLE, _msgSender());\n    }\n\n    /**\n     * @dev Creates `amount` new tokens for `to`, of token type `id`.\n     *\n     * See {ERC1155-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `MINTER_ROLE`.\n     */\n    function mint(address to, uint256 id, uint256 amount, bytes memory data) public virtual {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC1155PresetMinterPauser: must have minter role to mint\");\n\n        _mint(to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] variant of {mint}.\n     */\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) public virtual {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC1155PresetMinterPauser: must have minter role to mint\");\n\n        _mintBatch(to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Pauses all token transfers.\n     *\n     * See {ERC1155Pausable} and {Pausable-_pause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function pause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC1155PresetMinterPauser: must have pauser role to pause\");\n        _pause();\n    }\n\n    /**\n     * @dev Unpauses all token transfers.\n     *\n     * See {ERC1155Pausable} and {Pausable-_unpause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function unpause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC1155PresetMinterPauser: must have pauser role to unpause\");\n        _unpause();\n    }\n\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    )\n        internal virtual override(ERC1155, ERC1155Pausable)\n    {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n    }\n}\n"
			},
			"contracts/contracts/token/ERC1155/ERC1155Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"./ERC1155.sol\";\nimport \"../../utils/Pausable.sol\";\n\n/**\n * @dev ERC1155 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * _Available since v3.1._\n */\nabstract contract ERC1155Pausable is ERC1155, Pausable {\n    /**\n     * @dev See {ERC1155-_beforeTokenTransfer}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    )\n        internal virtual override\n    {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        require(!paused(), \"ERC1155Pausable: token transfer while paused\");\n    }\n}\n"
			},
			"contracts/contracts/token/ERC1155/ERC1155Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"./ERC1155.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n *\n * _Available since v3.1._\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(address account, uint256 id, uint256 value) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }\n}\n"
			},
			"contracts/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155MetadataURI.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"../../GSN/Context.sol\";\nimport \"../../introspection/ERC165.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n *\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using SafeMath for uint256;\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping (uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping (address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /*\n     *     bytes4(keccak256('balanceOf(address,uint256)')) == 0x00fdd58e\n     *     bytes4(keccak256('balanceOfBatch(address[],uint256[])')) == 0x4e1273f4\n     *     bytes4(keccak256('setApprovalForAll(address,bool)')) == 0xa22cb465\n     *     bytes4(keccak256('isApprovedForAll(address,address)')) == 0xe985e9c5\n     *     bytes4(keccak256('safeTransferFrom(address,address,uint256,uint256,bytes)')) == 0xf242432a\n     *     bytes4(keccak256('safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)')) == 0x2eb2c2d6\n     *\n     *     => 0x00fdd58e ^ 0x4e1273f4 ^ 0xa22cb465 ^\n     *        0xe985e9c5 ^ 0xf242432a ^ 0x2eb2c2d6 == 0xd9b67a26\n     */\n    bytes4 private constant _INTERFACE_ID_ERC1155 = 0xd9b67a26;\n\n    /*\n     *     bytes4(keccak256('uri(uint256)')) == 0x0e89341c\n     */\n    bytes4 private constant _INTERFACE_ID_ERC1155_METADATA_URI = 0x0e89341c;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor (string memory uri) public {\n        _setURI(uri);\n\n        // register the supported interfaces to conform to ERC1155 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC1155);\n\n        // register the supported interfaces to conform to ERC1155MetadataURI via ERC165\n        _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) external view override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    )\n        public\n        view\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            require(accounts[i] != address(0), \"ERC1155: batch balance query for the zero address\");\n            batchBalances[i] = _balances[ids[i]][accounts[i]];\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(_msgSender() != operator, \"ERC1155: setting approval status for self\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    )\n        public\n        virtual\n        override\n    {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        _balances[id][from] = _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\");\n        _balances[id][to] = _balances[id][to].add(amount);\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    )\n        public\n        virtual\n        override\n    {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            _balances[id][from] = _balances[id][from].sub(\n                amount,\n                \"ERC1155: insufficient balance for transfer\"\n            );\n            _balances[id][to] = _balances[id][to].add(amount);\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address account, uint256 id, uint256 amount, bytes memory data) internal virtual {\n        require(account != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        _balances[id][account] = _balances[id][account].add(amount);\n        emit TransferSingle(operator, address(0), account, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] = amounts[i].add(_balances[ids[i]][to]);\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `account`\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(address account, uint256 id, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        _balances[id][account] = _balances[id][account].sub(\n            amount,\n            \"ERC1155: burn amount exceeds balance\"\n        );\n\n        emit TransferSingle(operator, account, address(0), id, amount);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(address account, uint256[] memory ids, uint256[] memory amounts) internal virtual {\n        require(account != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, account, address(0), ids, amounts, \"\");\n\n        for (uint i = 0; i < ids.length; i++) {\n            _balances[ids[i]][account] = _balances[ids[i]][account].sub(\n                amounts[i],\n                \"ERC1155: burn amount exceeds balance\"\n            );\n        }\n\n        emit TransferBatch(operator, account, address(0), ids, amounts);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    )\n        internal virtual\n    { }\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    )\n        private\n    {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver(to).onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    )\n        private\n    {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n"
			},
			"contracts/contracts/GSN/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			},
			"contracts/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"../utils/EnumerableSet.sol\";\nimport \"../utils/Address.sol\";\nimport \"../GSN/Context.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context {\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using Address for address;\n\n    struct RoleData {\n        EnumerableSet.AddressSet members;\n        bytes32 adminRole;\n    }\n\n    mapping (bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view returns (bool) {\n        return _roles[role].members.contains(account);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\n        return _roles[role].members.length();\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\n        return _roles[role].members.at(index);\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual {\n        require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to grant\");\n\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual {\n        require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to revoke\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        emit RoleAdminChanged(role, _roles[role].adminRole, adminRole);\n        _roles[role].adminRole = adminRole;\n    }\n\n    function _grantRole(bytes32 role, address account) private {\n        if (_roles[role].members.add(account)) {\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    function _revokeRole(bytes32 role, address account) private {\n        if (_roles[role].members.remove(account)) {\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"contracts/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"../GSN/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\ncontract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor () internal {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!_paused, \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(_paused, \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"contracts/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        return _functionCallWithValue(target, data, value, errorMessage);\n    }\n\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"contracts/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"contracts/contracts/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts may inherit from this and call {_registerInterface} to declare\n * their support of an interface.\n */\ncontract ERC165 is IERC165 {\n    /*\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\n     */\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\n\n    /**\n     * @dev Mapping of interface ids to whether or not it's supported.\n     */\n    mapping(bytes4 => bool) private _supportedInterfaces;\n\n    constructor () internal {\n        // Derived contracts need only register support for their own interfaces,\n        // we register support for ERC165 itself here\n        _registerInterface(_INTERFACE_ID_ERC165);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     *\n     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view override returns (bool) {\n        return _supportedInterfaces[interfaceId];\n    }\n\n    /**\n     * @dev Registers the contract as an implementer of the interface defined by\n     * `interfaceId`. Support of the actual ERC165 interface is automatic and\n     * registering its interface id is not required.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * Requirements:\n     *\n     * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).\n     */\n    function _registerInterface(bytes4 interfaceId) internal virtual {\n        require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\");\n        _supportedInterfaces[interfaceId] = true;\n    }\n}\n"
			},
			"contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"../../introspection/IERC165.sol\";\n\n/**\n * _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n\n    /**\n        @dev Handles the receipt of a single ERC1155 token type. This function is\n        called at the end of a `safeTransferFrom` after the balance has been updated.\n        To accept the transfer, this must return\n        `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n        (i.e. 0xf23a6e61, or its own function selector).\n        @param operator The address which initiated the transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param id The ID of the token being transferred\n        @param value The amount of tokens being transferred\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n    */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    )\n        external\n        returns(bytes4);\n\n    /**\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\n        is called at the end of a `safeBatchTransferFrom` after the balances have\n        been updated. To accept the transfer(s), this must return\n        `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n        (i.e. 0xbc197c81, or its own function selector).\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n    */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    )\n        external\n        returns(bytes4);\n}\n"
			},
			"contracts/contracts/token/ERC1155/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\nimport \"./IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"contracts/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.2;\n\nimport \"../../introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\n}\n"
			},
			"contracts/contracts/utils/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`\n * (`UintSet`) are supported.\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping (bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\n\n            bytes32 lastvalue = set._values[lastIndex];\n\n            // Move the last value to the index where the value to delete is\n            set._values[toDeleteIndex] = lastvalue;\n            // Update the index for the moved value\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        require(set._values.length > index, \"EnumerableSet: index out of bounds\");\n        return set._values[index];\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint256(_at(set._inner, index)));\n    }\n\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n}\n"
			},
			"contracts/contracts/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/contracts/GSN/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/GSN/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"contracts/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 45,
								"contract": "contracts/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)41_storage)"
							}
						],
						"types": {
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)41_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)41_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)2453_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 2452,
										"contract": "contracts/contracts/access/AccessControl.sol:AccessControl",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)2273_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)41_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 38,
										"contract": "contracts/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)2453_storage"
									},
									{
										"astId": 40,
										"contract": "contracts/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Set)2273_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 2268,
										"contract": "contracts/contracts/access/AccessControl.sol:AccessControl",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 2272,
										"contract": "contracts/contracts/access/AccessControl.sol:AccessControl",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts may inherit from this and call {_registerInterface} to declare their support of an interface.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
							}
						},
						"stateVariables": {
							"_supportedInterfaces": {
								"details": "Mapping of interface ids to whether or not it's supported."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts may inherit from this and call {_registerInterface} to declare their support of an interface.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"}},\"stateVariables\":{\"_supportedInterfaces\":{\"details\":\"Mapping of interface ids to whether or not it's supported.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xb046d18f9d09683ca1c0ed6d80c61da8a8a7d9b30bad70a17b898538683eff74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4728713afa6ae36cc9e92c7107c796a313add3ec20f813be2cde76c814486b2a\",\"dweb:/ipfs/QmUJBTXvYaGDF5PVnd5pUvYerc9DRXvqANDzgCzAp3FkkA\"]},\"contracts/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 319,
								"contract": "contracts/contracts/introspection/ERC165.sol:ERC165",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/math/SafeMath.sol\":622:5200  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/math/SafeMath.sol\":622:5200  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ea4fa47df9233680b28de2e5435ed72f73f4e294c1cc714b8ceceeb224dbbb0164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea4fa47df9233680b28de2e5435ed72f73f4e294c1cc714b8ceceeb224dbbb0164736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0x4F LOG4 PUSH30 0xF9233680B28DE2E5435ED72F73F4E294C1CC714B8CECEEB224DBBB016473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "622:4578:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea4fa47df9233680b28de2e5435ed72f73f4e294c1cc714b8ceceeb224dbbb0164736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0x4F LOG4 PUSH30 0xF9233680B28DE2E5435ED72F73F4E294C1CC714B8CECEEB224DBBB016473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "622:4578:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 622,
									"end": 5200,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ea4fa47df9233680b28de2e5435ed72f73f4e294c1cc714b8ceceeb224dbbb0164736f6c634300060c0033",
									".code": [
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 622,
											"end": 5200,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/presets/ERC1155PresetMinterPauser.sol": {
				"ERC1155PresetMinterPauser": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mintBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "{ERC1155} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE`, and `PAUSER_ROLE` to the account that deploys the contract."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"mint(address,uint256,uint256,bytes)": {
								"details": "Creates `amount` new tokens for `to`, of token type `id`. See {ERC1155-_mint}. Requirements: - the caller must have the `MINTER_ROLE`."
							},
							"mintBatch(address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] variant of {mint}."
							},
							"pause()": {
								"details": "Pauses all token transfers. See {ERC1155Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
							},
							"unpause()": {
								"details": "Unpauses all token transfers. See {ERC1155Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":828:3361  contract ERC1155PresetMinterPauser is Context, AccessControl, ERC1155Burnable, ERC1155Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1205:1412  constructor(string memory uri) public ERC1155(uri) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  pop\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1251:1254  uri */\n  dup3\n  swap2\n  pop\n    /* \"contracts/contracts/introspection/ERC165.sol\":751:791  _registerInterface(_INTERFACE_ID_ERC165) */\n  tag_15\n  swap1\n  pop\n  shl(0xe0, 0x01ffc9a7)\n    /* \"contracts/contracts/introspection/ERC165.sol\":751:769  _registerInterface */\n  tag_16\n    /* \"contracts/contracts/introspection/ERC165.sol\":751:791  _registerInterface(_INTERFACE_ID_ERC165) */\n  jump\t// in\ntag_15:\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2015:2027  _setURI(uri) */\n  tag_18\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2023:2026  uri */\n  dup2\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2015:2022  _setURI */\n  tag_19\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2015:2027  _setURI(uri) */\n  jump\t// in\ntag_18:\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2116:2157  _registerInterface(_INTERFACE_ID_ERC1155) */\n  tag_20\n  shl(0xe1, 0x6cdb3d13)\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2116:2134  _registerInterface */\n  tag_16\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2116:2157  _registerInterface(_INTERFACE_ID_ERC1155) */\n  jump\t// in\ntag_20:\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2257:2311  _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI) */\n  tag_21\n  shl(0xe2, 0x03a24d07)\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2257:2275  _registerInterface */\n  tag_16\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2257:2311  _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI) */\n  jump\t// in\ntag_21:\n  pop\n    /* \"contracts/contracts/utils/Pausable.sol\":923:930  _paused */\n  0x05\n    /* \"contracts/contracts/utils/Pausable.sol\":923:938  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1266:1310  _setupRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  tag_24\n    /* \"contracts/contracts/utils/Pausable.sol\":933:938  false */\n  0x00\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1297:1309  _msgSender() */\n  tag_25\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1297:1307  _msgSender */\n  tag_26\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1297:1309  _msgSender() */\n  jump\t// in\ntag_25:\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1266:1276  _setupRole */\n  tag_27\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1266:1310  _setupRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  jump\t// in\ntag_24:\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1321:1358  _setupRole(MINTER_ROLE, _msgSender()) */\n  tag_28\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":967:991  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1345:1357  _msgSender() */\n  tag_25\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1345:1355  _msgSender */\n  tag_26\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1345:1357  _msgSender() */\n  jump\t// in\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1321:1358  _setupRole(MINTER_ROLE, _msgSender()) */\ntag_28:\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1368:1405  _setupRole(PAUSER_ROLE, _msgSender()) */\n  tag_30\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1035:1059  keccak256(\"PAUSER_ROLE\") */\n  0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1392:1404  _msgSender() */\n  tag_25\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1392:1402  _msgSender */\n  tag_26\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1392:1404  _msgSender() */\n  jump\t// in\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1368:1405  _setupRole(PAUSER_ROLE, _msgSender()) */\ntag_30:\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1205:1412  constructor(string memory uri) public ERC1155(uri) {... */\n  pop\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":828:3361  contract ERC1155PresetMinterPauser is Context, AccessControl, ERC1155Burnable, ERC1155Pausable {... */\n  jump(tag_32)\n    /* \"contracts/contracts/introspection/ERC165.sol\":1482:1680  function _registerInterface(bytes4 interfaceId) internal virtual {... */\ntag_16:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"contracts/contracts/introspection/ERC165.sol\":1565:1590  interfaceId != 0xffffffff */\n  dup1\n  dup3\n  and\n  eq\n  iszero\n    /* \"contracts/contracts/introspection/ERC165.sol\":1557:1623  require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\") */\n  tag_34\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1c\n  0x24\n  dup3\n  add\n  mstore\n  0x4552433136353a20696e76616c696420696e7465726661636520696400000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_34:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"contracts/contracts/introspection/ERC165.sol\":1633:1666  _supportedInterfaces[interfaceId] */\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"contracts/contracts/introspection/ERC165.sol\":1669:1673  true */\n  0x01\n    /* \"contracts/contracts/introspection/ERC165.sol\":1633:1666  _supportedInterfaces[interfaceId] */\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"contracts/contracts/introspection/ERC165.sol\":1633:1673  _supportedInterfaces[interfaceId] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/contracts/introspection/ERC165.sol\":1482:1680  function _registerInterface(bytes4 interfaceId) internal virtual {... */\n  jump\t// out\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":7590:7676  function _setURI(string memory newuri) internal virtual {... */\ntag_19:\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":7656:7669  _uri = newuri */\n  dup1\n  mload\n  tag_36\n  swap1\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":7656:7660  _uri */\n  0x04\n  swap1\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":7656:7669  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  pop\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":7590:7676  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/contracts/GSN/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\ntag_26:\n    /* \"contracts/contracts/GSN/Context.sol\":677:687  msg.sender */\n  caller\n    /* \"contracts/contracts/GSN/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/contracts/access/AccessControl.sol\":6578:6688  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_27:\n    /* \"contracts/contracts/access/AccessControl.sol\":6656:6681  _grantRole(role, account) */\n  tag_36\n    /* \"contracts/contracts/access/AccessControl.sol\":6667:6671  role */\n  dup3\n    /* \"contracts/contracts/access/AccessControl.sol\":6673:6680  account */\n  dup3\n    /* \"contracts/contracts/access/AccessControl.sol\":7088:7094  _roles */\n  0x00\n    /* \"contracts/contracts/access/AccessControl.sol\":7088:7100  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"contracts/contracts/access/AccessControl.sol\":7088:7121  _roles[role].members.add(account) */\n  tag_43\n  swap2\n    /* \"contracts/contracts/access/AccessControl.sol\":7113:7120  account */\n  dup4\n  swap1\n    /* \"contracts/contracts/access/AccessControl.sol\":7088:7112  _roles[role].members.add */\n  tag_0_144\n  tag_44\n  dup3\n  shl\n  or\n    /* \"contracts/contracts/access/AccessControl.sol\":7088:7121  _roles[role].members.add(account) */\n  swap1\n  shr\n  jump\t// in\ntag_43:\n    /* \"contracts/contracts/access/AccessControl.sol\":7084:7193  if (_roles[role].members.add(account)) {... */\n  iszero\n  tag_36\n  jumpi\n    /* \"contracts/contracts/access/AccessControl.sol\":7169:7181  _msgSender() */\n  tag_46\n    /* \"contracts/contracts/access/AccessControl.sol\":7169:7179  _msgSender */\n  tag_26\n    /* \"contracts/contracts/access/AccessControl.sol\":7169:7181  _msgSender() */\n  jump\t// in\ntag_46:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/contracts/access/AccessControl.sol\":7142:7182  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"contracts/contracts/access/AccessControl.sol\":7160:7167  account */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/contracts/access/AccessControl.sol\":7142:7182  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"contracts/contracts/access/AccessControl.sol\":7154:7158  role */\n  dup4\n    /* \"contracts/contracts/access/AccessControl.sol\":7142:7182  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"contracts/contracts/access/AccessControl.sol\":7015:7199  function _grantRole(bytes32 role, address account) private {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":4864:5005  function add(AddressSet storage set, address value) internal returns (bool) {... */\ntag_44:\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":4934:4938  bool */\n  0x00\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":4957:4998  _add(set._inner, bytes32(uint256(value))) */\n  tag_48\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":4962:4965  set */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":4982:4996  uint256(value) */\n  dup5\n  and\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":4957:4961  _add */\n  tag_49\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":4957:4998  _add(set._inner, bytes32(uint256(value))) */\n  jump\t// in\ntag_48:\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":4950:4998  return _add(set._inner, bytes32(uint256(value))) */\n  swap1\n  pop\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":4864:5005  function add(AddressSet storage set, address value) internal returns (bool) {... */\ntag_47:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":1611:2015  function _add(Set storage set, bytes32 value) private returns (bool) {... */\ntag_49:\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":1674:1678  bool */\n  0x00\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":1695:1716  _contains(set, value) */\n  tag_51\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":1705:1708  set */\n  dup4\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":1710:1715  value */\n  dup4\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":1695:1704  _contains */\n  tag_52\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":1695:1716  _contains(set, value) */\n  jump\t// in\ntag_51:\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":1690:2009  if (!_contains(set, value)) {... */\n  tag_53\n  jumpi\n  pop\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":1732:1755  set._values.push(value) */\n  dup2\n  sload\n  0x01\n  dup2\n  dup2\n  add\n  dup5\n  sstore\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":1732:1743  set._values */\n  0x00\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":1732:1755  set._values.push(value) */\n  dup5\n  dup2\n  mstore\n  0x20\n  dup1\n  dup3\n  keccak256\n  swap1\n  swap4\n  add\n  dup5\n  swap1\n  sstore\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":1912:1930  set._values.length */\n  dup5\n  sload\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":1890:1909  set._indexes[value] */\n  dup5\n  dup3\n  mstore\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":1890:1902  set._indexes */\n  dup3\n  dup7\n  add\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":1890:1909  set._indexes[value] */\n  swap1\n  swap4\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":1890:1930  set._indexes[value] = set._values.length */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":1944:1955  return true */\n  jump(tag_47)\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":1690:2009  if (!_contains(set, value)) {... */\ntag_53:\n  pop\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":1993:1998  false */\n  0x00\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":1986:1998  return false */\n  jump(tag_47)\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":3776:3903  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\ntag_52:\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":3849:3853  bool */\n  0x00\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":3872:3891  set._indexes[value] */\n  swap1\n  dup2\n  mstore\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":3872:3884  set._indexes */\n  0x01\n  swap2\n  swap1\n  swap2\n  add\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":3872:3891  set._indexes[value] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":3872:3896  set._indexes[value] != 0 */\n  iszero\n  iszero\n  swap1\n    /* \"contracts/contracts/utils/EnumerableSet.sol\":3776:3903  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n  jump\t// out\n    /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":828:3361  contract ERC1155PresetMinterPauser is Context, AccessControl, ERC1155Burnable, ERC1155Pausable {... */\ntag_37:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_58\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_60)\ntag_58:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_60\n  jumpi\n  swap2\n  dup3\n  add\ntag_59:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_60\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_59)\ntag_60:\n  pop\n  tag_61\n  swap3\n  swap2\n  pop\n  tag_62\n  jump\t// in\ntag_61:\n  pop\n  swap1\n  jump\t// out\ntag_62:\ntag_63:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_61\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_63)\ntag_32:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":828:3361  contract ERC1155PresetMinterPauser is Context, AccessControl, ERC1155Burnable, ERC1155Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x731133e9\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xca15c873\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xe63ab1e9\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf5298aca\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xca15c873\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x731133e9\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9010d07c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6b20c454\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1f7fdffa\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2956:3176  function balanceOf(address account, uint256 id) public view override returns (uint256) {... */\n    tag_3:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_34\n      jump\t// in\n    tag_32:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/contracts/introspection/ERC165.sol\":948:1088  function supportsInterface(bytes4 interfaceId) public view override returns (bool) {... */\n    tag_4:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      tag_37\n      jump\t// in\n    tag_35:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2717:2814  function uri(uint256) external view override returns (string memory) {... */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      calldataload\n      tag_40\n      jump\t// in\n    tag_38:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_41:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_43\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_41)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_44\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_44:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1971:2249  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) public virtual {... */\n    tag_6:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      and\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x40\n      dup2\n      add\n      0x20\n      dup3\n      add\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_56\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/contracts/access/AccessControl.sol\":4272:4384  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n    tag_7:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      calldataload\n      tag_59\n      jump\t// in\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xa0\n      dup2\n      lt\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      dup2\n      and\n      swap3\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap2\n      dup2\n      add\n      swap1\n      0x60\n      dup2\n      add\n      0x40\n      dup3\n      add\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_71\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"contracts/contracts/access/AccessControl.sol\":4634:4857  function grantRole(bytes32 role, address account) public virtual {... */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_74\n      jump\t// in\n        /* \"contracts/contracts/access/AccessControl.sol\":5808:6013  function renounceRole(bytes32 role, address account) public virtual {... */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_77\n      jump\t// in\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2834:3011  function unpause() public virtual {... */\n    tag_11:\n      tag_45\n      tag_79\n      jump\t// in\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n    tag_12:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_88\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n    tag_80:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      dup2\n      add\n      swap2\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_89:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_89)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/contracts/utils/Pausable.sol\":1040:1116  function paused() public view returns (bool) {... */\n    tag_13:\n      tag_35\n      tag_93\n      jump\t// in\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":598:910  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n    tag_14:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      and\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x40\n      dup2\n      add\n      0x20\n      dup3\n      add\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_102\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1623:1869  function mint(address to, uint256 id, uint256 amount, bytes memory data) public virtual {... */\n    tag_15:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap2\n      0x40\n      dup3\n      add\n      calldataload\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x80\n      dup2\n      add\n      0x60\n      dup3\n      add\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_108\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2454:2625  function pause() public virtual {... */\n    tag_16:\n      tag_45\n      tag_110\n      jump\t// in\n        /* \"contracts/contracts/access/AccessControl.sol\":3955:4091  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n    tag_17:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      tag_113\n      jump\t// in\n    tag_111:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/contracts/access/AccessControl.sol\":2940:3077  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n    tag_18:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_116\n      jump\t// in\n        /* \"contracts/contracts/access/AccessControl.sol\":1717:1766  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_19:\n      tag_32\n      tag_118\n      jump\t// in\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4016:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_20:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      iszero\n      iszero\n      tag_121\n      jump\t// in\n        /* \"contracts/contracts/access/AccessControl.sol\":3245:3370  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n    tag_21:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      calldataload\n      tag_124\n      jump\t// in\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":929:991  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_22:\n      tag_32\n      tag_126\n      jump\t// in\n        /* \"contracts/contracts/access/AccessControl.sol\":5091:5317  function revokeRole(bytes32 role, address account) public virtual {... */\n    tag_23:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_129\n      jump\t// in\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":997:1059  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_24:\n      tag_32\n      tag_131\n      jump\t// in\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4389:4547  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n    tag_25:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_134\n      jump\t// in\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4614:5511  function safeTransferFrom(... */\n    tag_26:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xa0\n      dup2\n      lt\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      dup2\n      and\n      swap3\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap2\n      0x40\n      dup3\n      add\n      calldataload\n      swap2\n      0x60\n      dup2\n      add\n      calldataload\n      swap2\n      dup2\n      add\n      swap1\n      0xa0\n      dup2\n      add\n      0x80\n      dup3\n      add\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_140\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":312:592  function burn(address account, uint256 id, uint256 value) public virtual {... */\n    tag_27:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      add\n      calldataload\n      tag_143\n      jump\t// in\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2956:3176  function balanceOf(address account, uint256 id) public view override returns (uint256) {... */\n    tag_34:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3034:3041  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3061:3082  account != address(0) */\n      dup4\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3053:3130  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9\n      0x2b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3147:3160  _balances[id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3147:3156  _balances */\n      0x02\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3147:3160  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3147:3169  _balances[id][account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2956:3176  function balanceOf(address account, uint256 id) public view override returns (uint256) {... */\n    tag_145:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/introspection/ERC165.sol\":948:1088  function supportsInterface(bytes4 interfaceId) public view override returns (bool) {... */\n    tag_37:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/contracts/introspection/ERC165.sol\":1048:1081  _supportedInterfaces[interfaceId] */\n      and\n        /* \"contracts/contracts/introspection/ERC165.sol\":1025:1029  bool */\n      0x00\n        /* \"contracts/contracts/introspection/ERC165.sol\":1048:1081  _supportedInterfaces[interfaceId] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/introspection/ERC165.sol\":1048:1068  _supportedInterfaces */\n      0x01\n        /* \"contracts/contracts/introspection/ERC165.sol\":1048:1081  _supportedInterfaces[interfaceId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/contracts/introspection/ERC165.sol\":948:1088  function supportsInterface(bytes4 interfaceId) public view override returns (bool) {... */\n      jump\t// out\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2717:2814  function uri(uint256) external view override returns (string memory) {... */\n    tag_40:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2803:2807  _uri */\n      0x04\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2796:2807  return _uri */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2771:2784  string memory */\n      0x60\n      swap4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2796:2807  return _uri */\n      swap1\n      swap3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2803:2807  _uri */\n      swap1\n      swap2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2796:2807  return _uri */\n      dup4\n      add\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2803:2807  _uri */\n      dup3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2796:2807  return _uri */\n      dup3\n      dup1\n      iszero\n      tag_149\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_150\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_149)\n    tag_150:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_151:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_151\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2717:2814  function uri(uint256) external view override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1971:2249  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) public virtual {... */\n    tag_56:\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2102:2136  hasRole(MINTER_ROLE, _msgSender()) */\n      tag_153\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":967:991  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2123:2135  _msgSender() */\n      tag_154\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2123:2133  _msgSender */\n      tag_155\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2123:2135  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2102:2109  hasRole */\n      tag_116\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2102:2136  hasRole(MINTER_ROLE, _msgSender()) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2094:2197  require(hasRole(MINTER_ROLE, _msgSender()), \"ERC1155PresetMinterPauser: must have minter role to mint\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x38\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_8955910be8371dda281e80fa38d092164791ccbd984aaa07b76276bef2682e9c\n      0x38\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2208:2242  _mintBatch(to, ids, amounts, data) */\n      tag_157\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2219:2221  to */\n      dup5\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2223:2226  ids */\n      dup5\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2228:2235  amounts */\n      dup5\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2237:2241  data */\n      dup5\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2208:2218  _mintBatch */\n      tag_158\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2208:2242  _mintBatch(to, ids, amounts, data) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1971:2249  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/access/AccessControl.sol\":4272:4384  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n    tag_59:\n        /* \"contracts/contracts/access/AccessControl.sol\":4329:4336  bytes32 */\n      0x00\n        /* \"contracts/contracts/access/AccessControl.sol\":4355:4367  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/access/AccessControl.sol\":4355:4377  _roles[role].adminRole */\n      0x02\n      add\n      sload\n      swap1\n        /* \"contracts/contracts/access/AccessControl.sol\":4272:4384  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n      jump\t// out\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n    tag_71:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5837:5844  amounts */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5837:5851  amounts.length */\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5823:5826  ids */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5823:5833  ids.length */\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5823:5851  ids.length == amounts.length */\n      eq\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5815:5896  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5914:5930  to != address(0) */\n      dup5\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5906:5972  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6011:6023  _msgSender() */\n      tag_163\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6011:6021  _msgSender */\n      tag_155\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6011:6023  _msgSender() */\n      jump\t// in\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6003:6023  from == _msgSender() */\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6003:6007  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6003:6023  from == _msgSender() */\n      and\n      eq\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6003:6063  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_165\n      jumpi\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6027:6063  isApprovedForAll(from, _msgSender()) */\n      tag_165\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6044:6048  from */\n      dup6\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6050:6062  _msgSender() */\n      tag_166\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6050:6060  _msgSender */\n      tag_155\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6050:6062  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6027:6043  isApprovedForAll */\n      tag_134\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6027:6063  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5982:6139  require(... */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x32\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686\n      0x32\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6150:6166  address operator */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6169:6181  _msgSender() */\n      tag_168\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6169:6179  _msgSender */\n      tag_155\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6169:6181  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6150:6181  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6192:6252  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_169\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6213:6221  operator */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6223:6227  from */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6229:6231  to */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6233:6236  ids */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6238:6245  amounts */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6247:6251  data */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6192:6212  _beforeTokenTransfer */\n      tag_170\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6192:6252  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6268:6277  uint256 i */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6263:6612  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_171:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6287:6290  ids */\n      dup5\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6287:6297  ids.length */\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6283:6284  i */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6283:6297  i < ids.length */\n      lt\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6263:6612  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6318:6328  uint256 id */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6331:6334  ids */\n      dup6\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6335:6336  i */\n      dup3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6331:6337  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_174\n      jumpi\n      invalid\n    tag_174:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6318:6337  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6351:6365  uint256 amount */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6368:6375  amounts */\n      dup6\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6376:6377  i */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6368:6378  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_175\n      jumpi\n      invalid\n    tag_175:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6351:6378  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6415:6538  _balances[id][from].sub(... */\n      tag_176\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6456:6462  amount */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6415:6538  _balances[id][from].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf\n      0x2a\n      swap2\n      codecopy\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6415:6424  _balances */\n      0x02\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6415:6428  _balances[id] */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6425:6427  id */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6415:6428  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6415:6434  _balances[id][from] */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6429:6433  from */\n      dup14\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6415:6434  _balances[id][from] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6415:6438  _balances[id][from].sub */\n      tag_177\n      swap1\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6415:6538  _balances[id][from].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_176:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6393:6406  _balances[id] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6393:6402  _balances */\n      0x02\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6393:6406  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6393:6412  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6393:6538  _balances[id][from] = _balances[id][from].sub(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6572:6589  _balances[id][to] */\n      dup11\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6572:6601  _balances[id][to].add(amount) */\n      tag_178\n      swap1\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6594:6600  amount */\n      dup3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6572:6593  _balances[id][to].add */\n      tag_179\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6572:6601  _balances[id][to].add(amount) */\n      jump\t// in\n    tag_178:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6552:6565  _balances[id] */\n      0x00\n      swap3\n      dup4\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6552:6561  _balances */\n      0x02\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6552:6565  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6552:6569  _balances[id][to] */\n      dup13\n      and\n      dup7\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      swap3\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6552:6601  _balances[id][to] = _balances[id][to].add(amount) */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6299:6302  ++i */\n      0x01\n      add\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6263:6612  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_171)\n    tag_172:\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6657:6659  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6627:6674  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6651:6655  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6627:6674  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6641:6649  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6627:6674  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6661:6664  ids */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6666:6673  amounts */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6627:6674  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup4\n      dup2\n      sub\n      dup4\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_180:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_182\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_180)\n    tag_182:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup4\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_183:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_185\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_183)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6685:6760  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_186\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6721:6729  operator */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6731:6735  from */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6737:6739  to */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6741:6744  ids */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6746:6753  amounts */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6755:6759  data */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6685:6720  _doSafeBatchTransferAcceptanceCheck */\n      tag_187\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6685:6760  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_186:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/access/AccessControl.sol\":4634:4857  function grantRole(bytes32 role, address account) public virtual {... */\n    tag_74:\n        /* \"contracts/contracts/access/AccessControl.sol\":4725:4731  _roles */\n      0x00\n        /* \"contracts/contracts/access/AccessControl.sol\":4725:4737  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/access/AccessControl.sol\":4725:4747  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"contracts/contracts/access/AccessControl.sol\":4717:4762  hasRole(_roles[role].adminRole, _msgSender()) */\n      tag_189\n      swap1\n        /* \"contracts/contracts/access/AccessControl.sol\":4749:4761  _msgSender() */\n      tag_154\n        /* \"contracts/contracts/access/AccessControl.sol\":4749:4759  _msgSender */\n      tag_155\n        /* \"contracts/contracts/access/AccessControl.sol\":4749:4761  _msgSender() */\n      jump\t// in\n        /* \"contracts/contracts/access/AccessControl.sol\":4717:4762  hasRole(_roles[role].adminRole, _msgSender()) */\n    tag_189:\n        /* \"contracts/contracts/access/AccessControl.sol\":4709:4814  require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to grant\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/contracts/access/AccessControl.sol\":4825:4850  _grantRole(role, account) */\n      tag_192\n        /* \"contracts/contracts/access/AccessControl.sol\":4836:4840  role */\n      dup3\n        /* \"contracts/contracts/access/AccessControl.sol\":4842:4849  account */\n      dup3\n        /* \"contracts/contracts/access/AccessControl.sol\":4825:4835  _grantRole */\n      tag_193\n        /* \"contracts/contracts/access/AccessControl.sol\":4825:4850  _grantRole(role, account) */\n      jump\t// in\n    tag_192:\n        /* \"contracts/contracts/access/AccessControl.sol\":4634:4857  function grantRole(bytes32 role, address account) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/access/AccessControl.sol\":5808:6013  function renounceRole(bytes32 role, address account) public virtual {... */\n    tag_77:\n        /* \"contracts/contracts/access/AccessControl.sol\":5905:5917  _msgSender() */\n      tag_195\n        /* \"contracts/contracts/access/AccessControl.sol\":5905:5915  _msgSender */\n      tag_155\n        /* \"contracts/contracts/access/AccessControl.sol\":5905:5917  _msgSender() */\n      jump\t// in\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/access/AccessControl.sol\":5894:5917  account == _msgSender() */\n      and\n        /* \"contracts/contracts/access/AccessControl.sol\":5894:5901  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/access/AccessControl.sol\":5894:5917  account == _msgSender() */\n      and\n      eq\n        /* \"contracts/contracts/access/AccessControl.sol\":5886:5969  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"contracts/contracts/access/AccessControl.sol\":5980:6006  _revokeRole(role, account) */\n      tag_192\n        /* \"contracts/contracts/access/AccessControl.sol\":5992:5996  role */\n      dup3\n        /* \"contracts/contracts/access/AccessControl.sol\":5998:6005  account */\n      dup3\n        /* \"contracts/contracts/access/AccessControl.sol\":5980:5991  _revokeRole */\n      tag_198\n        /* \"contracts/contracts/access/AccessControl.sol\":5980:6006  _revokeRole(role, account) */\n      jump\t// in\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2834:3011  function unpause() public virtual {... */\n    tag_79:\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2886:2920  hasRole(PAUSER_ROLE, _msgSender()) */\n      tag_200\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1035:1059  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2907:2919  _msgSender() */\n      tag_154\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2907:2917  _msgSender */\n      tag_155\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2907:2919  _msgSender() */\n      jump\t// in\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2886:2920  hasRole(PAUSER_ROLE, _msgSender()) */\n    tag_200:\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2878:2984  require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC1155PresetMinterPauser: must have pauser role to unpause\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_be510562063387b7714478be5eff01a8c39efbb1b76d9be224d34aac440c9e31\n      0x3b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2994:3004  _unpause() */\n      tag_203\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2994:3002  _unpause */\n      tag_204\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2994:3004  _unpause() */\n      jump\t// in\n    tag_203:\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2834:3011  function unpause() public virtual {... */\n      jump\t// out\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n    tag_88:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3490:3506  uint256[] memory */\n      0x60\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3549:3552  ids */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3549:3559  ids.length */\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3530:3538  accounts */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3530:3545  accounts.length */\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3530:3559  accounts.length == ids.length */\n      eq\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3522:3605  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3616:3646  uint256[] memory batchBalances */\n      0x60\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3663:3671  accounts */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3663:3678  accounts.length */\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3649:3679  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_207\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_207:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_208\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_208:\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3616:3679  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3695:3704  uint256 i */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3690:3911  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_209:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3714:3722  accounts */\n      dup5\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3714:3729  accounts.length */\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3710:3711  i */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3710:3729  i < accounts.length */\n      lt\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3690:3911  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_210\n      jumpi\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3781:3782  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3758:3783  accounts[i] != address(0) */\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3758:3766  accounts */\n      dup6\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3767:3768  i */\n      dup3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3758:3769  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_212\n      jumpi\n      invalid\n    tag_212:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3758:3783  accounts[i] != address(0) */\n      and\n      eq\n      iszero\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3750:3837  require(accounts[i] != address(0), \"ERC1155: batch balance query for the zero address\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x31\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c\n      0x31\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3870:3879  _balances */\n      0x02\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3870:3887  _balances[ids[i]] */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3880:3883  ids */\n      dup6\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3884:3885  i */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3880:3886  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_214\n      jumpi\n      invalid\n    tag_214:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3870:3887  _balances[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3870:3900  _balances[ids[i]][accounts[i]] */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3888:3896  accounts */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3897:3898  i */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3888:3899  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_215\n      jumpi\n      invalid\n    tag_215:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3870:3900  _balances[ids[i]][accounts[i]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3851:3864  batchBalances */\n      dup3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3865:3866  i */\n      dup3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3851:3867  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_216\n      jumpi\n      invalid\n    tag_216:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3851:3900  batchBalances[i] = _balances[ids[i]][accounts[i]] */\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3731:3734  ++i */\n      0x01\n      add\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3690:3911  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_209)\n    tag_210:\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3928:3941  batchBalances */\n      swap4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/utils/Pausable.sol\":1040:1116  function paused() public view returns (bool) {... */\n    tag_93:\n        /* \"contracts/contracts/utils/Pausable.sol\":1102:1109  _paused */\n      and(0xff, sload(0x05))\n        /* \"contracts/contracts/utils/Pausable.sol\":1040:1116  function paused() public view returns (bool) {... */\n    tag_217:\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":598:910  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n    tag_102:\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":738:750  _msgSender() */\n      tag_219\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":738:748  _msgSender */\n      tag_155\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":738:750  _msgSender() */\n      jump\t// in\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":727:750  account == _msgSender() */\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":727:734  account */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":727:750  account == _msgSender() */\n      and\n      eq\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":727:793  account == _msgSender() || isApprovedForAll(account, _msgSender()) */\n      dup1\n      tag_221\n      jumpi\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":754:793  isApprovedForAll(account, _msgSender()) */\n      tag_221\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":771:778  account */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":780:792  _msgSender() */\n      tag_166\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":780:790  _msgSender */\n      tag_155\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":780:792  _msgSender() */\n      jump\t// in\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":754:793  isApprovedForAll(account, _msgSender()) */\n    tag_221:\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":706:860  require(... */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":871:903  _burnBatch(account, ids, values) */\n      tag_224\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":882:889  account */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":891:894  ids */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":896:902  values */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":871:881  _burnBatch */\n      tag_225\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":871:903  _burnBatch(account, ids, values) */\n      jump\t// in\n    tag_224:\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":598:910  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1623:1869  function mint(address to, uint256 id, uint256 amount, bytes memory data) public virtual {... */\n    tag_108:\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1729:1763  hasRole(MINTER_ROLE, _msgSender()) */\n      tag_227\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":967:991  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1750:1762  _msgSender() */\n      tag_154\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1750:1760  _msgSender */\n      tag_155\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1750:1762  _msgSender() */\n      jump\t// in\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1729:1763  hasRole(MINTER_ROLE, _msgSender()) */\n    tag_227:\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1721:1824  require(hasRole(MINTER_ROLE, _msgSender()), \"ERC1155PresetMinterPauser: must have minter role to mint\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x38\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_8955910be8371dda281e80fa38d092164791ccbd984aaa07b76276bef2682e9c\n      0x38\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_229:\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1835:1862  _mint(to, id, amount, data) */\n      tag_157\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1841:1843  to */\n      dup5\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1845:1847  id */\n      dup5\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1849:1855  amount */\n      dup5\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1857:1861  data */\n      dup5\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1835:1840  _mint */\n      tag_231\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1835:1862  _mint(to, id, amount, data) */\n      jump\t// in\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2454:2625  function pause() public virtual {... */\n    tag_110:\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2504:2538  hasRole(PAUSER_ROLE, _msgSender()) */\n      tag_233\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1035:1059  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2525:2537  _msgSender() */\n      tag_154\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2525:2535  _msgSender */\n      tag_155\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2525:2537  _msgSender() */\n      jump\t// in\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2504:2538  hasRole(PAUSER_ROLE, _msgSender()) */\n    tag_233:\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2496:2600  require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC1155PresetMinterPauser: must have pauser role to pause\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x39\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_d5053a301adec69bf5c7c3782556a354b14090e41fa7ca93c4de3863fd6a98b9\n      0x39\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2610:2618  _pause() */\n      tag_203\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2610:2616  _pause */\n      tag_237\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":2610:2618  _pause() */\n      jump\t// in\n        /* \"contracts/contracts/access/AccessControl.sol\":3955:4091  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n    tag_113:\n        /* \"contracts/contracts/access/AccessControl.sol\":4028:4035  address */\n      0x00\n        /* \"contracts/contracts/access/AccessControl.sol\":4054:4066  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/contracts/access/AccessControl.sol\":4054:4084  _roles[role].members.at(index) */\n      tag_239\n      swap1\n        /* \"contracts/contracts/access/AccessControl.sol\":4078:4083  index */\n      dup4\n        /* \"contracts/contracts/access/AccessControl.sol\":4054:4077  _roles[role].members.at */\n      tag_240\n        /* \"contracts/contracts/access/AccessControl.sol\":4054:4084  _roles[role].members.at(index) */\n      jump\t// in\n    tag_239:\n        /* \"contracts/contracts/access/AccessControl.sol\":4047:4084  return _roles[role].members.at(index) */\n      swap4\n        /* \"contracts/contracts/access/AccessControl.sol\":3955:4091  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/access/AccessControl.sol\":2940:3077  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n    tag_116:\n        /* \"contracts/contracts/access/AccessControl.sol\":3009:3013  bool */\n      0x00\n        /* \"contracts/contracts/access/AccessControl.sol\":3032:3044  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/contracts/access/AccessControl.sol\":3032:3070  _roles[role].members.contains(account) */\n      tag_239\n      swap1\n        /* \"contracts/contracts/access/AccessControl.sol\":3062:3069  account */\n      dup4\n        /* \"contracts/contracts/access/AccessControl.sol\":3032:3061  _roles[role].members.contains */\n      tag_243\n        /* \"contracts/contracts/access/AccessControl.sol\":3032:3070  _roles[role].members.contains(account) */\n      jump\t// in\n        /* \"contracts/contracts/access/AccessControl.sol\":1717:1766  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_118:\n        /* \"contracts/contracts/access/AccessControl.sol\":1762:1766  0x00 */\n      0x00\n        /* \"contracts/contracts/access/AccessControl.sol\":1717:1766  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\t// out\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4016:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_121:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4134:4142  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4118:4142  _msgSender() != operator */\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4118:4130  _msgSender() */\n      tag_245\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4118:4128  _msgSender */\n      tag_155\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4118:4130  _msgSender() */\n      jump\t// in\n    tag_245:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4118:4142  _msgSender() != operator */\n      and\n      eq\n      iszero\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4110:4188  require(_msgSender() != operator, \"ERC1155: setting approval status for self\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_246:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4244:4252  approved */\n      dup1\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4199:4217  _operatorApprovals */\n      0x03\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4199:4231  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4218:4230  _msgSender() */\n      tag_247\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4218:4228  _msgSender */\n      tag_155\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4218:4230  _msgSender() */\n      jump\t// in\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4199:4231  _operatorApprovals[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4199:4241  _operatorApprovals[_msgSender()][operator] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      swap4\n      mstore\n      swap2\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4199:4252  _operatorApprovals[_msgSender()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap3\n      iszero\n      iszero\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4282:4294  _msgSender() */\n      tag_248\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4282:4292  _msgSender */\n      tag_155\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4282:4294  _msgSender() */\n      jump\t// in\n    tag_248:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4267:4315  ApprovalForAll(_msgSender(), operator, approved) */\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4306:4314  approved */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4267:4315  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4016:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/access/AccessControl.sol\":3245:3370  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n    tag_124:\n        /* \"contracts/contracts/access/AccessControl.sol\":3308:3315  uint256 */\n      0x00\n        /* \"contracts/contracts/access/AccessControl.sol\":3334:3346  _roles[role] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/contracts/access/AccessControl.sol\":3334:3363  _roles[role].members.length() */\n      tag_145\n      swap1\n        /* \"contracts/contracts/access/AccessControl.sol\":3334:3361  _roles[role].members.length */\n      tag_251\n        /* \"contracts/contracts/access/AccessControl.sol\":3334:3363  _roles[role].members.length() */\n      jump\t// in\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":929:991  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_126:\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":967:991  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":929:991  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/contracts/access/AccessControl.sol\":5091:5317  function revokeRole(bytes32 role, address account) public virtual {... */\n    tag_129:\n        /* \"contracts/contracts/access/AccessControl.sol\":5183:5189  _roles */\n      0x00\n        /* \"contracts/contracts/access/AccessControl.sol\":5183:5195  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/access/AccessControl.sol\":5183:5205  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"contracts/contracts/access/AccessControl.sol\":5175:5220  hasRole(_roles[role].adminRole, _msgSender()) */\n      tag_253\n      swap1\n        /* \"contracts/contracts/access/AccessControl.sol\":5207:5219  _msgSender() */\n      tag_154\n        /* \"contracts/contracts/access/AccessControl.sol\":5207:5217  _msgSender */\n      tag_155\n        /* \"contracts/contracts/access/AccessControl.sol\":5207:5219  _msgSender() */\n      jump\t// in\n        /* \"contracts/contracts/access/AccessControl.sol\":5175:5220  hasRole(_roles[role].adminRole, _msgSender()) */\n    tag_253:\n        /* \"contracts/contracts/access/AccessControl.sol\":5167:5273  require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to revoke\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x30\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3\n      0x30\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":997:1059  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_131:\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":1035:1059  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":997:1059  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4389:4547  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4503:4530  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4480:4484  bool */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4503:4530  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4503:4521  _operatorApprovals */\n      0x03\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4503:4530  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4503:4540  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4389:4547  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n      jump\t// out\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4614:5511  function safeTransferFrom(... */\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4829:4845  to != address(0) */\n      dup5\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4821:4887  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_259:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4926:4938  _msgSender() */\n      tag_260\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4926:4936  _msgSender */\n      tag_155\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4926:4938  _msgSender() */\n      jump\t// in\n    tag_260:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4918:4938  from == _msgSender() */\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4918:4922  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4918:4938  from == _msgSender() */\n      and\n      eq\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4918:4978  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_262\n      jumpi\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4942:4978  isApprovedForAll(from, _msgSender()) */\n      tag_262\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4959:4963  from */\n      dup6\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4965:4977  _msgSender() */\n      tag_166\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4965:4975  _msgSender */\n      tag_155\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4965:4977  _msgSender() */\n      jump\t// in\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4942:4978  isApprovedForAll(from, _msgSender()) */\n    tag_262:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4897:5045  require(... */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_264:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5056:5072  address operator */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5075:5087  _msgSender() */\n      tag_265\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5075:5085  _msgSender */\n      tag_155\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5075:5087  _msgSender() */\n      jump\t// in\n    tag_265:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5056:5087  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5098:5194  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_266\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5119:5127  operator */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5129:5133  from */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5135:5137  to */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5139:5160  _asSingletonArray(id) */\n      tag_267\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5157:5159  id */\n      dup9\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5139:5156  _asSingletonArray */\n      tag_268\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5139:5160  _asSingletonArray(id) */\n      jump\t// in\n    tag_267:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5162:5187  _asSingletonArray(amount) */\n      tag_269\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5180:5186  amount */\n      dup9\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5162:5179  _asSingletonArray */\n      tag_268\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5162:5187  _asSingletonArray(amount) */\n      jump\t// in\n    tag_269:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5189:5193  data */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5098:5118  _beforeTokenTransfer */\n      tag_170\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5098:5194  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      jump\t// in\n    tag_266:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5227:5304  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_270\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5251:5257  amount */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5227:5304  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf\n      0x2a\n      swap2\n      codecopy\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5227:5240  _balances[id] */\n      0x00\n      dup8\n      dup2\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5227:5236  _balances */\n      0x02\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5227:5240  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5227:5246  _balances[id][from] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5227:5304  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      swap1\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5227:5250  _balances[id][from].sub */\n      tag_177\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5227:5304  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      jump\t// in\n    tag_270:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5205:5218  _balances[id] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5205:5214  _balances */\n      0x02\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5205:5218  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5205:5224  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5205:5304  _balances[id][from] = _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5334:5351  _balances[id][to] */\n      dup8\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5334:5363  _balances[id][to].add(amount) */\n      tag_271\n      swap1\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5356:5362  amount */\n      dup5\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5334:5355  _balances[id][to].add */\n      tag_179\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5334:5363  _balances[id][to].add(amount) */\n      jump\t// in\n    tag_271:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5314:5327  _balances[id] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5314:5323  _balances */\n      0x02\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5314:5327  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5314:5331  _balances[id][to] */\n      dup1\n      dup12\n      and\n      dup1\n      dup7\n      mstore\n      swap2\n      dup5\n      mstore\n      swap4\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5314:5363  _balances[id][to] = _balances[id][to].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5379:5425  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      mload\n      dup9\n      dup2\n      mstore\n      swap2\n      dup3\n      add\n      dup8\n      swap1\n      mstore\n      dup1\n      mload\n      dup11\n      dup5\n      and\n      swap4\n      dup7\n      and\n      swap3\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap3\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5436:5504  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_186\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5467:5475  operator */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5477:5481  from */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5483:5485  to */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5487:5489  id */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5491:5497  amount */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5499:5503  data */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5436:5466  _doSafeTransferAcceptanceCheck */\n      tag_273\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5436:5504  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":312:592  function burn(address account, uint256 id, uint256 value) public virtual {... */\n    tag_143:\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":427:439  _msgSender() */\n      tag_275\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":427:437  _msgSender */\n      tag_155\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":427:439  _msgSender() */\n      jump\t// in\n    tag_275:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":416:439  account == _msgSender() */\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":416:423  account */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":416:439  account == _msgSender() */\n      and\n      eq\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":416:482  account == _msgSender() || isApprovedForAll(account, _msgSender()) */\n      dup1\n      tag_277\n      jumpi\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":443:482  isApprovedForAll(account, _msgSender()) */\n      tag_277\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":460:467  account */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":469:481  _msgSender() */\n      tag_166\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":469:479  _msgSender */\n      tag_155\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":469:481  _msgSender() */\n      jump\t// in\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":443:482  isApprovedForAll(account, _msgSender()) */\n    tag_277:\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":395:549  require(... */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_279:\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":560:585  _burn(account, id, value) */\n      tag_224\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":566:573  account */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":575:577  id */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":579:584  value */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":560:565  _burn */\n      tag_281\n        /* \"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":560:585  _burn(account, id, value) */\n      jump\t// in\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":4864:5005  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_144:\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":4934:4938  bool */\n      0x00\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":4957:4998  _add(set._inner, bytes32(uint256(value))) */\n      tag_239\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":4962:4965  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":4982:4996  uint256(value) */\n      dup5\n      and\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":4957:4961  _add */\n      tag_284\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":4957:4998  _add(set._inner, bytes32(uint256(value))) */\n      jump\t// in\n        /* \"contracts/contracts/GSN/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_155:\n        /* \"contracts/contracts/GSN/Context.sol\":677:687  msg.sender */\n      caller\n        /* \"contracts/contracts/GSN/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8976:9676  function _mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) internal virtual {... */\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9110:9126  to != address(0) */\n      dup5\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9102:9164  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_287:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9196:9203  amounts */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9196:9210  amounts.length */\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9182:9185  ids */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9182:9192  ids.length */\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9182:9210  ids.length == amounts.length */\n      eq\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9174:9255  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_288:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9266:9282  address operator */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9285:9297  _msgSender() */\n      tag_289\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9285:9295  _msgSender */\n      tag_155\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9285:9297  _msgSender() */\n      jump\t// in\n    tag_289:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9266:9297  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9308:9374  _beforeTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      tag_290\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9329:9337  operator */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9347:9348  0 */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9351:9353  to */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9355:9358  ids */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9360:9367  amounts */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9369:9373  data */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9308:9328  _beforeTokenTransfer */\n      tag_170\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9308:9374  _beforeTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n    tag_290:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9390:9396  uint i */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9385:9509  for (uint i = 0; i < ids.length; i++) {... */\n    tag_291:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9406:9409  ids */\n      dup5\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9406:9416  ids.length */\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9402:9403  i */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9402:9416  i < ids.length */\n      lt\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9385:9509  for (uint i = 0; i < ids.length; i++) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9461:9498  amounts[i].add(_balances[ids[i]][to]) */\n      tag_294\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9476:9485  _balances */\n      0x02\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9476:9493  _balances[ids[i]] */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9486:9489  ids */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9490:9491  i */\n      dup5\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9486:9492  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_295\n      jumpi\n      invalid\n    tag_295:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9476:9493  _balances[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9476:9497  _balances[ids[i]][to] */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9494:9496  to */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9476:9497  _balances[ids[i]][to] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9461:9468  amounts */\n      dup6\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9469:9470  i */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9461:9471  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_296\n      jumpi\n      invalid\n    tag_296:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9461:9475  amounts[i].add */\n      tag_179\n      swap1\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9461:9498  amounts[i].add(_balances[ids[i]][to]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_294:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9437:9446  _balances */\n      0x02\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9437:9454  _balances[ids[i]] */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9447:9450  ids */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9451:9452  i */\n      dup5\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9447:9453  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_297\n      jumpi\n      invalid\n    tag_297:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9437:9454  _balances[ids[i]] */\n      dup3\n      mstore\n      dup2\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9437:9458  _balances[ids[i]][to] */\n      dup12\n      and\n      dup3\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9437:9498  _balances[ids[i]][to] = amounts[i].add(_balances[ids[i]][to]) */\n      sstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9418:9421  i++ */\n      0x01\n      add\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9385:9509  for (uint i = 0; i < ids.length; i++) {... */\n      jump(tag_291)\n    tag_292:\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9560:9562  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9524:9577  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9556:9557  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9524:9577  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9538:9546  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9524:9577  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9564:9567  ids */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9569:9576  amounts */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9524:9577  TransferBatch(operator, address(0), to, ids, amounts) */\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup4\n      dup2\n      sub\n      dup4\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_298:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_300\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_298)\n    tag_300:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup4\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_301:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_303\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_301)\n    tag_303:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9588:9669  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      tag_304\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9624:9632  operator */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9642:9643  0 */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9646:9648  to */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9650:9653  ids */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9655:9662  amounts */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9664:9668  data */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9588:9623  _doSafeBatchTransferAcceptanceCheck */\n      tag_187\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9588:9669  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n    tag_304:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8976:9676  function _mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":3017:3359  function _beforeTokenTransfer(... */\n    tag_170:\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":3286:3352  super._beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_186\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":3313:3321  operator */\n      dup7\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":3323:3327  from */\n      dup7\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":3329:3331  to */\n      dup7\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":3333:3336  ids */\n      dup7\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":3338:3345  amounts */\n      dup7\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":3347:3351  data */\n      dup7\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":3286:3312  super._beforeTokenTransfer */\n      tag_307\n        /* \"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":3286:3352  super._beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n        /* \"contracts/contracts/math/SafeMath.sol\":1746:1933  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_177:\n        /* \"contracts/contracts/math/SafeMath.sol\":1832:1839  uint256 */\n      0x00\n        /* \"contracts/contracts/math/SafeMath.sol\":1867:1879  errorMessage */\n      dup2\n        /* \"contracts/contracts/math/SafeMath.sol\":1859:1865  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/contracts/math/SafeMath.sol\":1851:1880  require(b <= a, errorMessage) */\n      tag_309\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_310:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_312\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_310)\n    tag_312:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_313\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_313:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_309:\n      pop\n      pop\n      pop\n        /* \"contracts/contracts/math/SafeMath.sol\":1902:1907  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/contracts/math/SafeMath.sol\":1746:1933  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/contracts/math/SafeMath.sol\":874:1050  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_179:\n        /* \"contracts/contracts/math/SafeMath.sol\":932:939  uint256 */\n      0x00\n        /* \"contracts/contracts/math/SafeMath.sol\":963:968  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/contracts/math/SafeMath.sol\":986:992  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/contracts/math/SafeMath.sol\":978:1024  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_239\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13276:14054  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_187:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13520:13535  to.isContract() */\n      tag_317\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13520:13522  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13520:13533  to.isContract */\n      and\n      tag_318\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13520:13535  to.isContract() */\n      jump\t// in\n    tag_317:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13516:14048  if (to.isContract()) {... */\n      iszero\n      tag_186\n      jumpi\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13572:13574  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13555:13598  IERC1155Receiver(to).onERC1155BatchReceived */\n      and\n      0xbc197c81\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13599:13607  operator */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13609:13613  from */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13615:13618  ids */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13620:13627  amounts */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13629:13633  data */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13555:13634  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup5\n      dup2\n      sub\n      dup5\n      mstore\n      dup8\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_320:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_322\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_320)\n    tag_322:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup5\n      dup2\n      sub\n      dup4\n      mstore\n      dup7\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_323:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_325\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_323)\n    tag_325:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup5\n      dup2\n      sub\n      dup3\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_326:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_328\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_326)\n    tag_328:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_329\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_329:\n      pop\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_330\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_330:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_331\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_332\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_332:\n      pop\n      mload\n      0x01\n    tag_331:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13551:14038  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n      tag_333\n      jumpi\n      tag_336\n      tag_337\n      jump\t// in\n    tag_336:\n      dup1\n      tag_338\n      jumpi\n      pop\n      jump(tag_335)\n    tag_338:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13907:13921  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13914:13920  reason */\n      dup5\n      swap4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13907:13921  revert(reason) */\n      swap2\n      swap3\n      dup4\n      swap3\n      0x44\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_312\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_310)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13551:14038  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n    tag_335:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13961:14023  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed\n      0x34\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13551:14038  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n    tag_333:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13683:13747  response != IERC1155Receiver(to).onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13679:13840  if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {... */\n      tag_344\n      jumpi\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13771:13821  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13679:13840  if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {... */\n    tag_344:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13635:13854  returns (bytes4 response) {... */\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13276:14054  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/access/AccessControl.sol\":7015:7199  function _grantRole(bytes32 role, address account) private {... */\n    tag_193:\n        /* \"contracts/contracts/access/AccessControl.sol\":7088:7094  _roles */\n      0x00\n        /* \"contracts/contracts/access/AccessControl.sol\":7088:7100  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/access/AccessControl.sol\":7088:7121  _roles[role].members.add(account) */\n      tag_346\n      swap1\n        /* \"contracts/contracts/access/AccessControl.sol\":7113:7120  account */\n      dup3\n        /* \"contracts/contracts/access/AccessControl.sol\":7088:7112  _roles[role].members.add */\n      tag_144\n        /* \"contracts/contracts/access/AccessControl.sol\":7088:7121  _roles[role].members.add(account) */\n      jump\t// in\n    tag_346:\n        /* \"contracts/contracts/access/AccessControl.sol\":7084:7193  if (_roles[role].members.add(account)) {... */\n      iszero\n      tag_192\n      jumpi\n        /* \"contracts/contracts/access/AccessControl.sol\":7169:7181  _msgSender() */\n      tag_348\n        /* \"contracts/contracts/access/AccessControl.sol\":7169:7179  _msgSender */\n      tag_155\n        /* \"contracts/contracts/access/AccessControl.sol\":7169:7181  _msgSender() */\n      jump\t// in\n    tag_348:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/access/AccessControl.sol\":7142:7182  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"contracts/contracts/access/AccessControl.sol\":7160:7167  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/access/AccessControl.sol\":7142:7182  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"contracts/contracts/access/AccessControl.sol\":7154:7158  role */\n      dup4\n        /* \"contracts/contracts/access/AccessControl.sol\":7142:7182  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/contracts/access/AccessControl.sol\":7015:7199  function _grantRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/access/AccessControl.sol\":7205:7393  function _revokeRole(bytes32 role, address account) private {... */\n    tag_198:\n        /* \"contracts/contracts/access/AccessControl.sol\":7279:7285  _roles */\n      0x00\n        /* \"contracts/contracts/access/AccessControl.sol\":7279:7291  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/access/AccessControl.sol\":7279:7315  _roles[role].members.remove(account) */\n      tag_350\n      swap1\n        /* \"contracts/contracts/access/AccessControl.sol\":7307:7314  account */\n      dup3\n        /* \"contracts/contracts/access/AccessControl.sol\":7279:7306  _roles[role].members.remove */\n      tag_351\n        /* \"contracts/contracts/access/AccessControl.sol\":7279:7315  _roles[role].members.remove(account) */\n      jump\t// in\n    tag_350:\n        /* \"contracts/contracts/access/AccessControl.sol\":7275:7387  if (_roles[role].members.remove(account)) {... */\n      iszero\n      tag_192\n      jumpi\n        /* \"contracts/contracts/access/AccessControl.sol\":7363:7375  _msgSender() */\n      tag_353\n        /* \"contracts/contracts/access/AccessControl.sol\":7363:7373  _msgSender */\n      tag_155\n        /* \"contracts/contracts/access/AccessControl.sol\":7363:7375  _msgSender() */\n      jump\t// in\n    tag_353:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/access/AccessControl.sol\":7336:7376  RoleRevoked(role, account, _msgSender()) */\n      and\n        /* \"contracts/contracts/access/AccessControl.sol\":7354:7361  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/access/AccessControl.sol\":7336:7376  RoleRevoked(role, account, _msgSender()) */\n      and\n        /* \"contracts/contracts/access/AccessControl.sol\":7348:7352  role */\n      dup4\n        /* \"contracts/contracts/access/AccessControl.sol\":7336:7376  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/contracts/access/AccessControl.sol\":7205:7393  function _revokeRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/utils/Pausable.sol\":2042:2159  function _unpause() internal virtual whenPaused {... */\n    tag_204:\n        /* \"contracts/contracts/utils/Pausable.sol\":1610:1617  _paused */\n      and(0xff, sload(0x05))\n        /* \"contracts/contracts/utils/Pausable.sol\":1602:1642  require(_paused, \"Pausable: not paused\") */\n      tag_355\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_355:\n        /* \"contracts/contracts/utils/Pausable.sol\":2100:2107  _paused */\n      0x05\n        /* \"contracts/contracts/utils/Pausable.sol\":2100:2115  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/contracts/utils/Pausable.sol\":2130:2152  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"contracts/contracts/utils/Pausable.sol\":2139:2151  _msgSender() */\n      tag_357\n        /* \"contracts/contracts/utils/Pausable.sol\":2139:2149  _msgSender */\n      tag_155\n        /* \"contracts/contracts/utils/Pausable.sol\":2139:2151  _msgSender() */\n      jump\t// in\n    tag_357:\n        /* \"contracts/contracts/utils/Pausable.sol\":2130:2152  Unpaused(_msgSender()) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log1\n        /* \"contracts/contracts/utils/Pausable.sol\":2042:2159  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10657:11362  function _burnBatch(address account, uint256[] memory ids, uint256[] memory amounts) internal virtual {... */\n    tag_225:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10777:10798  account != address(0) */\n      dup4\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10769:10838  require(account != address(0), \"ERC1155: burn from the zero address\") */\n      tag_359\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_359:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10870:10877  amounts */\n      dup1\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10870:10884  amounts.length */\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10856:10859  ids */\n      dup3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10856:10866  ids.length */\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10856:10884  ids.length == amounts.length */\n      eq\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10848:10929  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_360\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_360:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10940:10956  address operator */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10959:10971  _msgSender() */\n      tag_361\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10959:10969  _msgSender */\n      tag_155\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10959:10971  _msgSender() */\n      jump\t// in\n    tag_361:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10940:10971  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10982:11051  _beforeTokenTransfer(operator, account, address(0), ids, amounts, \"\") */\n      tag_362\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11003:11011  operator */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11013:11020  account */\n      dup6\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11030:11031  0 */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11034:11037  ids */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11039:11046  amounts */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10982:11051  _beforeTokenTransfer(operator, account, address(0), ids, amounts, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10982:11002  _beforeTokenTransfer */\n      tag_170\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10982:11051  _beforeTokenTransfer(operator, account, address(0), ids, amounts, \"\") */\n      jump\t// in\n    tag_362:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11067:11073  uint i */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11062:11282  for (uint i = 0; i < ids.length; i++) {... */\n    tag_363:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11083:11086  ids */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11083:11093  ids.length */\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11079:11080  i */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11079:11093  i < ids.length */\n      lt\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11062:11282  for (uint i = 0; i < ids.length; i++) {... */\n      iszero\n      tag_364\n      jumpi\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11143:11271  _balances[ids[i]][account].sub(... */\n      tag_366\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11191:11198  amounts */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11199:11200  i */\n      dup3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11191:11201  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_367\n      jumpi\n      invalid\n    tag_367:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11143:11271  _balances[ids[i]][account].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685\n      0x24\n      swap2\n      codecopy\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11143:11152  _balances */\n      0x02\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11143:11160  _balances[ids[i]] */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11153:11156  ids */\n      dup9\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11157:11158  i */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11153:11159  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_368\n      jumpi\n      invalid\n    tag_368:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11143:11160  _balances[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11143:11169  _balances[ids[i]][account] */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11161:11168  account */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11143:11169  _balances[ids[i]][account] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11143:11173  _balances[ids[i]][account].sub */\n      tag_177\n      swap1\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11143:11271  _balances[ids[i]][account].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_366:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11114:11123  _balances */\n      0x02\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11114:11131  _balances[ids[i]] */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11124:11127  ids */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11128:11129  i */\n      dup5\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11124:11130  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_369\n      jumpi\n      invalid\n    tag_369:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11114:11131  _balances[ids[i]] */\n      dup3\n      mstore\n      dup2\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11114:11140  _balances[ids[i]][account] */\n      dup11\n      and\n      dup3\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11114:11271  _balances[ids[i]][account] = _balances[ids[i]][account].sub(... */\n      sstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11095:11098  i++ */\n      0x01\n      add\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11062:11282  for (uint i = 0; i < ids.length; i++) {... */\n      jump(tag_363)\n    tag_364:\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11338:11339  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11297:11355  TransferBatch(operator, account, address(0), ids, amounts) */\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11321:11328  account */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11297:11355  TransferBatch(operator, account, address(0), ids, amounts) */\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11311:11319  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11297:11355  TransferBatch(operator, account, address(0), ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11342:11345  ids */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11347:11354  amounts */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":11297:11355  TransferBatch(operator, account, address(0), ids, amounts) */\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup4\n      dup2\n      sub\n      dup4\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_370:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_372\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_370)\n    tag_372:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup4\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_373:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_375\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_373)\n    tag_375:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10657:11362  function _burnBatch(address account, uint256[] memory ids, uint256[] memory amounts) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8059:8631  function _mint(address account, uint256 id, uint256 amount, bytes memory data) internal virtual {... */\n    tag_231:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8173:8194  account != address(0) */\n      dup5\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8165:8232  require(account != address(0), \"ERC1155: mint to the zero address\") */\n      tag_377\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_377:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8243:8259  address operator */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8262:8274  _msgSender() */\n      tag_378\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8262:8272  _msgSender */\n      tag_155\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8262:8274  _msgSender() */\n      jump\t// in\n    tag_378:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8243:8274  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8285:8392  _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_379\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8306:8314  operator */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8324:8325  0 */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8328:8335  account */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8337:8358  _asSingletonArray(id) */\n      tag_267\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8355:8357  id */\n      dup9\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8337:8354  _asSingletonArray */\n      tag_268\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8337:8358  _asSingletonArray(id) */\n      jump\t// in\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8285:8392  _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_379:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8428:8441  _balances[id] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8428:8437  _balances */\n      0x02\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8428:8441  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8428:8450  _balances[id][account] */\n      dup10\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8428:8462  _balances[id][account].add(amount) */\n      tag_382\n      swap1\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8455:8461  amount */\n      dup5\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8428:8454  _balances[id][account].add */\n      tag_179\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8428:8462  _balances[id][account].add(amount) */\n      jump\t// in\n    tag_382:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8403:8416  _balances[id] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8403:8412  _balances */\n      0x02\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8403:8416  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8403:8425  _balances[id][account] */\n      dup1\n      dup12\n      and\n      dup1\n      dup7\n      mstore\n      swap2\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8403:8462  _balances[id][account] = _balances[id][account].add(amount) */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8477:8534  TransferSingle(operator, address(0), account, id, amount) */\n      dup2\n      mload\n      dup10\n      dup2\n      mstore\n      swap3\n      dup4\n      add\n      dup9\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8403:8425  _balances[id][account] */\n      swap1\n      swap5\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8477:8534  TransferSingle(operator, address(0), account, id, amount) */\n      dup7\n      and\n      swap3\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap3\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8545:8624  _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data) */\n      tag_304\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8576:8584  operator */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8594:8595  0 */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8598:8605  account */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8607:8609  id */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8611:8617  amount */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8619:8623  data */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8545:8575  _doSafeTransferAcceptanceCheck */\n      tag_273\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":8545:8624  _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data) */\n      jump\t// in\n        /* \"contracts/contracts/utils/Pausable.sol\":1795:1910  function _pause() internal virtual whenNotPaused {... */\n    tag_237:\n        /* \"contracts/contracts/utils/Pausable.sol\":1346:1353  _paused */\n      and(0xff, sload(0x05))\n        /* \"contracts/contracts/utils/Pausable.sol\":1345:1353  !_paused */\n      iszero\n        /* \"contracts/contracts/utils/Pausable.sol\":1337:1374  require(!_paused, \"Pausable: paused\") */\n      tag_385\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_385:\n        /* \"contracts/contracts/utils/Pausable.sol\":1854:1861  _paused */\n      0x05\n        /* \"contracts/contracts/utils/Pausable.sol\":1854:1868  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/contracts/utils/Pausable.sol\":1864:1868  true */\n      0x01\n        /* \"contracts/contracts/utils/Pausable.sol\":1854:1868  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/contracts/utils/Pausable.sol\":1883:1903  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"contracts/contracts/utils/Pausable.sol\":1890:1902  _msgSender() */\n      tag_357\n        /* \"contracts/contracts/utils/Pausable.sol\":1890:1900  _msgSender */\n      tag_155\n        /* \"contracts/contracts/utils/Pausable.sol\":1890:1902  _msgSender() */\n      jump\t// in\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":6085:6232  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n    tag_240:\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":6159:6166  address */\n      0x00\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":6201:6223  _at(set._inner, index) */\n      tag_239\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":6205:6208  set */\n      dup4\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":6217:6222  index */\n      dup4\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":6201:6204  _at */\n      tag_390\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":6201:6223  _at(set._inner, index) */\n      jump\t// in\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":5401:5557  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n    tag_243:\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":5481:5485  bool */\n      0x00\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":5504:5550  _contains(set._inner, bytes32(uint256(value))) */\n      tag_239\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":5514:5517  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":5534:5548  uint256(value) */\n      dup5\n      and\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":5504:5513  _contains */\n      tag_393\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":5504:5550  _contains(set._inner, bytes32(uint256(value))) */\n      jump\t// in\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":5638:5753  function length(AddressSet storage set) internal view returns (uint256) {... */\n    tag_251:\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":5701:5708  uint256 */\n      0x00\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":5727:5746  _length(set._inner) */\n      tag_145\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":5735:5738  set */\n      dup3\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":5727:5734  _length */\n      tag_396\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":5727:5746  _length(set._inner) */\n      jump\t// in\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14060:14253  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_268:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14179:14195  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14193:14194  1 */\n      0x01\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14179:14195  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14126:14142  uint256[] memory */\n      0x60\n      swap2\n      dup3\n      swap2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14179:14195  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14154:14195  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14216:14223  element */\n      dup3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14205:14210  array */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14211:14212  0 */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14205:14213  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_400\n      jumpi\n      invalid\n    tag_400:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14205:14223  array[0] = element */\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14241:14246  array */\n      swap3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14060:14253  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12529:13270  function _doSafeTransferAcceptanceCheck(... */\n    tag_273:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12748:12763  to.isContract() */\n      tag_402\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12748:12750  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12748:12761  to.isContract */\n      and\n      tag_318\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12748:12763  to.isContract() */\n      jump\t// in\n    tag_402:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12744:13264  if (to.isContract()) {... */\n      iszero\n      tag_186\n      jumpi\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12800:12802  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12783:12821  IERC1155Receiver(to).onERC1155Received */\n      and\n      0xf23a6e61\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12822:12830  operator */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12832:12836  from */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12838:12840  id */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12842:12848  amount */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12850:12854  data */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12783:12855  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_404:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_406\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_404)\n    tag_406:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_407\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_407:\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_408\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_408:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_409\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_410\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_410:\n      pop\n      mload\n      0x01\n    tag_409:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12779:13254  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_411\n      jumpi\n      tag_336\n      tag_337\n      jump\t// in\n    tag_411:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12904:12963  response != IERC1155Receiver(to).onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12900:13056  if (response != IERC1155Receiver(to).onERC1155Received.selector) {... */\n      tag_344\n      jumpi\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12987:13037  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9925:10463  function _burn(address account, uint256 id, uint256 amount) internal virtual {... */\n    tag_281:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10020:10041  account != address(0) */\n      dup4\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10012:10081  require(account != address(0), \"ERC1155: burn from the zero address\") */\n      tag_423\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_423:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10092:10108  address operator */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10111:10123  _msgSender() */\n      tag_424\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10111:10121  _msgSender */\n      tag_155\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10111:10123  _msgSender() */\n      jump\t// in\n    tag_424:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10092:10123  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10134:10239  _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n      tag_425\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10155:10163  operator */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10165:10172  account */\n      dup6\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10182:10183  0 */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10186:10207  _asSingletonArray(id) */\n      tag_426\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10204:10206  id */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10186:10203  _asSingletonArray */\n      tag_268\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10186:10207  _asSingletonArray(id) */\n      jump\t// in\n    tag_426:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10209:10234  _asSingletonArray(amount) */\n      tag_427\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10227:10233  amount */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10209:10226  _asSingletonArray */\n      tag_268\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10209:10234  _asSingletonArray(amount) */\n      jump\t// in\n    tag_427:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10134:10239  _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10134:10154  _beforeTokenTransfer */\n      tag_170\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10134:10239  _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n      jump\t// in\n    tag_425:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10275:10383  _balances[id][account].sub(... */\n      tag_428\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10315:10321  amount */\n      dup3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10275:10383  _balances[id][account].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685\n      0x24\n      swap2\n      codecopy\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10275:10288  _balances[id] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10275:10284  _balances */\n      0x02\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10275:10288  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10275:10297  _balances[id][account] */\n      dup12\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10275:10383  _balances[id][account].sub(... */\n      swap1\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10275:10301  _balances[id][account].sub */\n      tag_177\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10275:10383  _balances[id][account].sub(... */\n      jump\t// in\n    tag_428:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10250:10263  _balances[id] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10250:10259  _balances */\n      0x02\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10250:10263  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10250:10272  _balances[id][account] */\n      dup1\n      dup11\n      and\n      dup1\n      dup7\n      mstore\n      swap2\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10250:10383  _balances[id][account] = _balances[id][account].sub(... */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10399:10456  TransferSingle(operator, account, address(0), id, amount) */\n      dup2\n      mload\n      dup9\n      dup2\n      mstore\n      swap3\n      dup4\n      add\n      dup8\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10250:10263  _balances[id] */\n      swap4\n      swap5\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10250:10272  _balances[id][account] */\n      swap1\n      swap4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":10399:10456  TransferSingle(operator, account, address(0), id, amount) */\n      swap1\n      dup7\n      and\n      swap3\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap3\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":9925:10463  function _burn(address account, uint256 id, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":1611:2015  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_284:\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":1674:1678  bool */\n      0x00\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":1695:1716  _contains(set, value) */\n      tag_430\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":1705:1708  set */\n      dup4\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":1710:1715  value */\n      dup4\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":1695:1704  _contains */\n      tag_393\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":1695:1716  _contains(set, value) */\n      jump\t// in\n    tag_430:\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":1690:2009  if (!_contains(set, value)) {... */\n      tag_431\n      jumpi\n      pop\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":1732:1755  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup5\n      sstore\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":1732:1743  set._values */\n      0x00\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":1732:1755  set._values.push(value) */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup5\n      swap1\n      sstore\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":1912:1930  set._values.length */\n      dup5\n      sload\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":1890:1909  set._indexes[value] */\n      dup5\n      dup3\n      mstore\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":1890:1902  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":1890:1909  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":1890:1930  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":1944:1955  return true */\n      jump(tag_145)\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":1690:2009  if (!_contains(set, value)) {... */\n    tag_431:\n      pop\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":1993:1998  false */\n      0x00\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":1986:1998  return false */\n      jump(tag_145)\n        /* \"contracts/contracts/token/ERC1155/ERC1155Pausable.sol\":622:1015  function _beforeTokenTransfer(... */\n    tag_307:\n        /* \"contracts/contracts/token/ERC1155/ERC1155Pausable.sol\":865:931  super._beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_435\n        /* \"contracts/contracts/token/ERC1155/ERC1155Pausable.sol\":892:900  operator */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155Pausable.sol\":902:906  from */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155Pausable.sol\":908:910  to */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155Pausable.sol\":912:915  ids */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155Pausable.sol\":917:924  amounts */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155Pausable.sol\":926:930  data */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155Pausable.sol\":865:891  super._beforeTokenTransfer */\n      tag_186\n        /* \"contracts/contracts/token/ERC1155/ERC1155Pausable.sol\":865:931  super._beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_435:\n        /* \"contracts/contracts/token/ERC1155/ERC1155Pausable.sol\":951:959  paused() */\n      tag_437\n        /* \"contracts/contracts/token/ERC1155/ERC1155Pausable.sol\":951:957  paused */\n      tag_93\n        /* \"contracts/contracts/token/ERC1155/ERC1155Pausable.sol\":951:959  paused() */\n      jump\t// in\n    tag_437:\n        /* \"contracts/contracts/token/ERC1155/ERC1155Pausable.sol\":950:959  !paused() */\n      iszero\n        /* \"contracts/contracts/token/ERC1155/ERC1155Pausable.sol\":942:1008  require(!paused(), \"ERC1155Pausable: token transfer while paused\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_382791644f51336ed3667770955aa8eb4efb839029c48708cadb22e92d271435\n      0x2c\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/utils/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n    tag_318:\n        /* \"contracts/contracts/utils/Address.sol\":1078:1098  extcodesize(account) */\n      extcodesize\n        /* \"contracts/contracts/utils/Address.sol\":1116:1124  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"contracts/contracts/utils/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":5173:5320  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_351:\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":5246:5250  bool */\n      0x00\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":5269:5313  _remove(set._inner, bytes32(uint256(value))) */\n      tag_239\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":5277:5280  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":5297:5311  uint256(value) */\n      dup5\n      and\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":5269:5276  _remove */\n      tag_442\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":5269:5313  _remove(set._inner, bytes32(uint256(value))) */\n      jump\t// in\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":4423:4624  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_390:\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":4517:4535  set._values.length */\n      dup2\n      sload\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":4490:4497  bytes32 */\n      0x00\n      swap1\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":4517:4543  set._values.length > index */\n      dup3\n      lt\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":4509:4582  require(set._values.length > index, \"EnumerableSet: index out of bounds\") */\n      tag_444\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_444:\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":4599:4602  set */\n      dup3\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":4599:4610  set._values */\n      0x00\n      add\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":4611:4616  index */\n      dup3\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":4599:4617  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_445\n      jumpi\n      invalid\n    tag_445:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":4592:4617  return set._values[index] */\n      swap1\n      pop\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":4423:4624  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3776:3903  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n    tag_393:\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3849:3853  bool */\n      0x00\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3872:3891  set._indexes[value] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3872:3884  set._indexes */\n      0x01\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3872:3891  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3872:3896  set._indexes[value] != 0 */\n      iszero\n      iszero\n      swap1\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3776:3903  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      jump\t// out\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3984:4091  function _length(Set storage set) private view returns (uint256) {... */\n    tag_396:\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":4066:4084  set._values.length */\n      sload\n      swap1\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3984:4091  function _length(Set storage set) private view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":2183:3695  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_442:\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":2249:2253  bool */\n      0x00\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":2386:2405  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":2386:2398  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":2386:2405  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":2420:2435  valueIndex != 0 */\n      dup1\n      iszero\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":2416:3689  if (valueIndex != 0) { // Equivalent to contains(set, value)... */\n      tag_451\n      jumpi\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":2849:2867  set._values.length */\n      dup4\n      sload\n      not(0x00)\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":2801:2815  valueIndex - 1 */\n      dup1\n      dup4\n      add\n      swap2\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":2849:2871  set._values.length - 1 */\n      swap1\n      dup2\n      add\n      swap1\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":2777:2798  uint256 toDeleteIndex */\n      0x00\n      swap1\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":2849:2852  set */\n      dup8\n      swap1\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":2849:2871  set._values.length - 1 */\n      dup4\n      swap1\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3131:3153  set._values[lastIndex] */\n      dup2\n      lt\n      tag_452\n      jumpi\n      invalid\n    tag_452:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3111:3153  bytes32 lastvalue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3274:3283  lastvalue */\n      dup1\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3245:3248  set */\n      dup8\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3245:3256  set._values */\n      0x00\n      add\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3257:3270  toDeleteIndex */\n      dup5\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3245:3271  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_454\n      jumpi\n      invalid\n    tag_454:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3245:3283  set._values[toDeleteIndex] = lastvalue */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3349:3372  set._indexes[lastvalue] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3391:3392  1 */\n      0x01\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3349:3361  set._indexes */\n      dup10\n      dup2\n      add\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3349:3372  set._indexes[lastvalue] */\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3375:3392  toDeleteIndex + 1 */\n      swap1\n      dup5\n      add\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3349:3392  set._indexes[lastvalue] = toDeleteIndex + 1 */\n      swap1\n      sstore\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3498:3515  set._values.pop() */\n      dup7\n      sload\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3349:3352  set */\n      dup8\n      swap1\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3498:3515  set._values.pop() */\n      dup1\n      tag_456\n      jumpi\n      invalid\n    tag_456:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3590:3593  set */\n      dup7\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3590:3602  set._indexes */\n      0x01\n      add\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3590:3609  set._indexes[value] */\n      0x00\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3603:3608  value */\n      dup8\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3590:3609  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3583:3609  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3631:3635  true */\n      0x01\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3624:3635  return true */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_145)\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":2416:3689  if (valueIndex != 0) { // Equivalent to contains(set, value)... */\n    tag_451:\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3673:3678  false */\n      0x00\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":3666:3678  return false */\n      swap2\n      pop\n      pop\n      jump(tag_145)\n        /* \"--CODEGEN--\":110:216   */\n    tag_460:\n        /* \"--CODEGEN--\":195:198   */\n      0xe0\n        /* \"--CODEGEN--\":191:206   */\n      shr\n      swap1\n        /* \"--CODEGEN--\":163:216   */\n      jump\t// out\n        /* \"--CODEGEN--\":224:963   */\n    tag_337:\n      0x00\n        /* \"--CODEGEN--\":297:301   */\n      0x44\n        /* \"--CODEGEN--\":279:295   */\n      returndatasize\n        /* \"--CODEGEN--\":276:302   */\n      lt\n        /* \"--CODEGEN--\":273:275   */\n      iszero\n      tag_463\n      jumpi\n        /* \"--CODEGEN--\":305:310   */\n      jump(tag_217)\n        /* \"--CODEGEN--\":273:275   */\n    tag_463:\n        /* \"--CODEGEN--\":339:340   */\n      0x04\n      dup2\n      dup3\n        /* \"--CODEGEN--\":318:341   */\n      returndatacopy\n        /* \"--CODEGEN--\":414:424   */\n      0x08c379a0\n        /* \"--CODEGEN--\":357:391   */\n      tag_464\n      dup3\n        /* \"--CODEGEN--\":382:390   */\n      mload\n        /* \"--CODEGEN--\":357:391   */\n      tag_460\n      jump\t// in\n    tag_464:\n        /* \"--CODEGEN--\":406:425   */\n      eq\n        /* \"--CODEGEN--\":396:398   */\n      tag_465\n      jumpi\n        /* \"--CODEGEN--\":429:434   */\n      jump(tag_217)\n        /* \"--CODEGEN--\":396:398   */\n    tag_465:\n        /* \"--CODEGEN--\":460:462   */\n      0x40\n        /* \"--CODEGEN--\":454:463   */\n      mload\n        /* \"--CODEGEN--\":496:512   */\n      returndatasize\n      not(0x03)\n        /* \"--CODEGEN--\":492:516   */\n      add\n        /* \"--CODEGEN--\":339:340   */\n      0x04\n        /* \"--CODEGEN--\":454:463   */\n      dup3\n        /* \"--CODEGEN--\":468:517   */\n      returndatacopy\n        /* \"--CODEGEN--\":543:547   */\n      dup1\n        /* \"--CODEGEN--\":537:548   */\n      mload\n        /* \"--CODEGEN--\":624:640   */\n      returndatasize\n        /* \"--CODEGEN--\":576:594   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":624:640   */\n      dup2\n        /* \"--CODEGEN--\":617:621   */\n      0x24\n        /* \"--CODEGEN--\":609:615   */\n      dup5\n        /* \"--CODEGEN--\":605:622   */\n      add\n        /* \"--CODEGEN--\":602:641   */\n      gt\n        /* \"--CODEGEN--\":576:594   */\n      dup2\n        /* \"--CODEGEN--\":568:574   */\n      dup5\n        /* \"--CODEGEN--\":565:595   */\n      gt\n        /* \"--CODEGEN--\":556:647   */\n      or\n        /* \"--CODEGEN--\":553:555   */\n      iszero\n      tag_466\n      jumpi\n        /* \"--CODEGEN--\":655:660   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_217)\n        /* \"--CODEGEN--\":553:555   */\n    tag_466:\n        /* \"--CODEGEN--\":693:699   */\n      dup3\n        /* \"--CODEGEN--\":687:691   */\n      dup5\n        /* \"--CODEGEN--\":683:700   */\n      add\n        /* \"--CODEGEN--\":672:700   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":725:728   */\n      dup3\n        /* \"--CODEGEN--\":719:729   */\n      mload\n        /* \"--CODEGEN--\":705:729   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":576:594   */\n      dup1\n        /* \"--CODEGEN--\":740:746   */\n      dup3\n        /* \"--CODEGEN--\":737:767   */\n      gt\n        /* \"--CODEGEN--\":734:736   */\n      iszero\n      tag_467\n      jumpi\n        /* \"--CODEGEN--\":770:775   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_217)\n        /* \"--CODEGEN--\":734:736   */\n    tag_467:\n      pop\n        /* \"--CODEGEN--\":847:863   */\n      returndatasize\n        /* \"--CODEGEN--\":841:845   */\n      dup4\n        /* \"--CODEGEN--\":837:864   */\n      add\n        /* \"--CODEGEN--\":807:811   */\n      0x20\n        /* \"--CODEGEN--\":814:820   */\n      dup3\n        /* \"--CODEGEN--\":802:805   */\n      dup5\n        /* \"--CODEGEN--\":794:821   */\n      add\n      add\n        /* \"--CODEGEN--\":829:865   */\n      gt\n        /* \"--CODEGEN--\":826:828   */\n      iszero\n      tag_468\n      jumpi\n        /* \"--CODEGEN--\":868:873   */\n      pop\n      pop\n      pop\n      jump(tag_217)\n        /* \"--CODEGEN--\":826:828   */\n    tag_468:\n        /* \"--CODEGEN--\":89:96   */\n      0x1f\n        /* \"--CODEGEN--\":73:87   */\n      add\n      not(0x1f)\n        /* \"--CODEGEN--\":69:97   */\n      and\n        /* \"--CODEGEN--\":892:942   */\n      dup2\n      add\n        /* \"--CODEGEN--\":807:811   */\n      0x20\n        /* \"--CODEGEN--\":892:942   */\n      add\n        /* \"--CODEGEN--\":460:462   */\n      0x40\n        /* \"--CODEGEN--\":881:943   */\n      mstore\n        /* \"--CODEGEN--\":900:903   */\n      swap2\n      pop\n      pop\n        /* \"--CODEGEN--\":267:963   */\n      swap1\n      jump\t// out\n    stop\n    data_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed 455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572\n    data_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb 456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473\n    data_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503 455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73\n    data_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811 416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74\n    data_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9 455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373\n    data_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c 455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373\n    data_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685 455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_382791644f51336ed3667770955aa8eb4efb839029c48708cadb22e92d271435 455243313135355061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564\n    data_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a 455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564\n    data_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3 416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65\n    data_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d 455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686 455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564\n    data_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a 455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_8955910be8371dda281e80fa38d092164791ccbd984aaa07b76276bef2682e9c 455243313135355072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74\n    data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf 455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572\n    data_be510562063387b7714478be5eff01a8c39efbb1b76d9be224d34aac440c9e31 455243313135355072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365\n    data_d5053a301adec69bf5c7c3782556a354b14090e41fa7ca93c4de3863fd6a98b9 455243313135355072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f207061757365\n    data_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2 455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66\n    data_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5 455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368\n    data_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807 455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368\n    data_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2 455243313135353a206d696e7420746f20746865207a65726f2061646472657373\n    data_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b 416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66\n\n    auxdata: 0xa26469706673582212201701cee56c8eb3834a7cc3c90ef19c4244a2482217f7d1b9a55b3f20360f699e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3256 CODESIZE SUB DUP1 PUSH3 0x3256 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP DUP3 SWAP2 POP PUSH3 0x102 SWAP1 POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH3 0x1B7 JUMP JUMPDEST PUSH3 0x10D DUP2 PUSH3 0x23F JUMP JUMPDEST PUSH3 0x11F PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL PUSH3 0x1B7 JUMP JUMPDEST PUSH3 0x131 PUSH4 0x3A24D07 PUSH1 0xE2 SHL PUSH3 0x1B7 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH3 0x152 PUSH1 0x0 PUSH3 0x14C PUSH3 0x258 JUMP JUMPDEST PUSH3 0x25C JUMP JUMPDEST PUSH3 0x181 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH3 0x14C PUSH3 0x258 JUMP JUMPDEST PUSH3 0x1B0 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH3 0x14C PUSH3 0x258 JUMP JUMPDEST POP PUSH3 0x3FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP1 DUP3 AND EQ ISZERO PUSH3 0x217 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433136353A20696E76616C696420696E7465726661636520696400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 MLOAD PUSH3 0x254 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x362 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH3 0x254 DUP3 DUP3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH3 0x287 SWAP2 DUP4 SWAP1 PUSH3 0x193E PUSH3 0x2DB DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST ISZERO PUSH3 0x254 JUMPI PUSH3 0x297 PUSH3 0x258 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2F2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x2FB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x309 DUP4 DUP4 PUSH3 0x34A JUMP JUMPDEST PUSH3 0x341 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH3 0x2F5 JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x2F5 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x3A5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x3D5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x3D5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x3D5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x3B8 JUMP JUMPDEST POP PUSH3 0x3E3 SWAP3 SWAP2 POP PUSH3 0x3E7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x3E3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3E8 JUMP JUMPDEST PUSH2 0x2E48 DUP1 PUSH3 0x40E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x172 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x731133E9 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xCA15C873 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE63AB1E9 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0xAE2 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0xAEA JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0xB18 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0xBE1 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH4 0xCA15C873 EQ PUSH2 0xA91 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0xAAE JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xAB6 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH4 0x731133E9 EQ PUSH2 0x928 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x9E8 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x9F0 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0xA2F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0xA5B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xA63 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x672 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x67A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x7ED JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x7F5 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x459 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC13 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x247 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x274 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xD3C SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x4A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xDCF SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1139 JUMP JUMPDEST PUSH2 0x43A PUSH2 0x119A JUMP JUMPDEST PUSH2 0x79D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x6AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x6BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x120B SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7D9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7C1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH2 0x1389 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x80B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x8B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x8EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1393 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x974 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x9A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x140C SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x43A PUSH2 0x147F JUMP JUMPDEST PUSH2 0xA13 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x150D JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x1525 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x152A JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1619 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x1630 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xACC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1654 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x16AD JUMP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0xB2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xB6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xB7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xBA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x16FF SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xBF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x18CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2AF4 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD30 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD05 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD30 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD13 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6D PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x150D JUMP JUMPDEST PUSH2 0xDA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C73 PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB4 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1957 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xE0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D9B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xE54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BF9 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5C PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xE87 JUMPI POP PUSH2 0xE87 DUP6 PUSH2 0xE82 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0xEC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C1E PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xECC PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0xEDC DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BAC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xEF6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF0E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0xF7B DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CAB PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1BBA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xFB2 SWAP1 DUP3 PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP PUSH1 0x1 ADD PUSH2 0xEDF JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1068 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1050 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10A7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x108F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x10CA DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1CAB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x10F0 SWAP1 PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x112B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2AC5 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1135 DUP3 DUP3 PUSH2 0x1F2A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1141 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1190 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DE4 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1135 DUP3 DUP3 PUSH2 0x1F93 JUMP JUMPDEST PUSH2 0x11C6 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x1201 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CD5 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1209 PUSH2 0x1FFC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x124D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D72 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1291 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1381 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x12B7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B1F PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1315 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1339 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x136E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1297 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x139B PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x13C1 JUMPI POP PUSH2 0x13C1 DUP4 PUSH2 0xE82 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x13FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BA0 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1407 DUP4 DUP4 DUP4 PUSH2 0x209A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1438 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x1473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C73 PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB4 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2308 JUMP JUMPDEST PUSH2 0x14AB PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x14E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D10 PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1209 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1506 SWAP1 DUP4 PUSH2 0x248A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1506 SWAP1 DUP4 PUSH2 0x2496 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x153C PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1582 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D49 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x158F PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x15D3 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xC7F SWAP1 PUSH2 0x24AB JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1672 SWAP1 PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x1190 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BC9 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1744 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BF9 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x174C PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1772 JUMPI POP PUSH2 0x1772 DUP6 PUSH2 0xE82 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x17AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BA0 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17B7 PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0x17D7 DUP2 DUP8 DUP8 PUSH2 0x17C8 DUP9 PUSH2 0x24B6 JUMP JUMPDEST PUSH2 0x17D1 DUP9 PUSH2 0x24B6 JUMP JUMPDEST DUP8 PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x181E DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CAB PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1855 SWAP1 DUP5 PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE DUP1 MLOAD DUP11 DUP5 AND SWAP4 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 PUSH2 0x10CA DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x24FA JUMP JUMPDEST PUSH2 0x18D2 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x18F8 JUMPI POP PUSH2 0x18F8 DUP4 PUSH2 0xE82 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x1933 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BA0 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1407 DUP4 DUP4 DUP4 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1506 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x279E JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x199C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DC3 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x19DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D9B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19E6 PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0x19F7 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BAC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1ABB JUMPI PUSH2 0x1A72 PUSH1 0x2 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1A16 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A5C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1C51 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1A82 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SSTORE PUSH1 0x1 ADD PUSH2 0x19FA JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B42 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B2A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B81 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B69 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1BA5 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1CAB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10CA DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x27E8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C0E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BF6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1C3B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1506 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1CBD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x283A JUMP JUMPDEST ISZERO PUSH2 0x10CA JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D4B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D33 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D8A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D72 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DC6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DAE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1DF3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1E3D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x1ED2 JUMPI PUSH2 0x1E49 PUSH2 0x29A1 JUMP JUMPDEST DUP1 PUSH2 0x1E54 JUMPI POP PUSH2 0x1E9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD DUP5 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1C0E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A47 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x1F21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A9D PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1F42 SWAP1 DUP3 PUSH2 0x193E JUMP JUMPDEST ISZERO PUSH2 0x1135 JUMPI PUSH2 0x1F4F PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1FAB SWAP1 DUP3 PUSH2 0x2840 JUMP JUMPDEST ISZERO PUSH2 0x1135 JUMPI PUSH2 0x1FB8 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x204A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x207D PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x20DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C50 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x211F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D9B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2129 PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0x2149 DUP2 DUP6 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BAC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2227 JUMPI PUSH2 0x21DE DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2164 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B50 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x2195 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1BBA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x21EE JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SSTORE PUSH1 0x1 ADD PUSH2 0x214C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22AE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2296 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22ED JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22D5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x234D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DC3 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2357 PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0x2369 DUP2 PUSH1 0x0 DUP8 PUSH2 0x17C8 DUP9 PUSH2 0x24B6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x2396 SWAP1 DUP5 PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP10 DUP2 MSTORE SWAP3 DUP4 ADD DUP9 SWAP1 MSTORE DUP2 MLOAD SWAP1 SWAP5 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 PUSH2 0x1BA5 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x24FA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2454 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x207D PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1506 DUP4 DUP4 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1506 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x28B9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7F DUP3 PUSH2 0x28D1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x24E9 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x250C DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x283A JUMP JUMPDEST ISZERO PUSH2 0x10CA JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x259B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2583 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x25C8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2610 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x260B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x261C JUMPI PUSH2 0x1E49 PUSH2 0x29A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x1F21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A9D PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x26B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C50 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x26BA PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0x26EA DUP2 DUP6 PUSH1 0x0 PUSH2 0x26CC DUP8 PUSH2 0x24B6 JUMP JUMPDEST PUSH2 0x26D5 DUP8 PUSH2 0x24B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x2731 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B50 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP9 DUP2 MSTORE SWAP3 DUP4 ADD DUP8 SWAP1 MSTORE DUP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27AA DUP4 DUP4 PUSH2 0x28B9 JUMP JUMPDEST PUSH2 0x27E0 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xC7F JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x27F6 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x27FE PUSH2 0x1389 JUMP JUMPDEST ISZERO PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B74 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1506 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x28D5 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x2897 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A7B PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x28A6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x2991 JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2908 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2925 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x2955 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xC7F JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x29B1 JUMPI PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY PUSH4 0x8C379A0 PUSH2 0x29C5 DUP3 MLOAD PUSH2 0x299B JUMP JUMPDEST EQ PUSH2 0x29CF JUMPI PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x29FF JUMPI POP POP POP POP PUSH2 0x1390 JUMP JUMPDEST DUP3 DUP5 ADD SWAP3 POP DUP3 MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A19 JUMPI POP POP POP POP PUSH2 0x1390 JUMP JUMPDEST POP RETURNDATASIZE DUP4 ADD PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x2A31 JUMPI POP POP POP PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F206E6F6E20455243313135 CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E6473455243313135353A204552 NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH19 0x656A656374656420746F6B656E734163636573 PUSH20 0x436F6E74726F6C3A2073656E646572206D757374 KECCAK256 PUSH3 0x652061 PUSH15 0x2061646D696E20746F206772616E74 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A2062617463682062 PUSH2 0x6C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A206275726E20616D PUSH16 0x756E7420657863656564732062616C61 PUSH15 0x636545524331313535506175736162 PUSH13 0x653A20746F6B656E207472616E PUSH20 0x666572207768696C652070617573656445524331 BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH4 0x616C6C65 PUSH19 0x206973206E6F74206F776E6572206E6F722061 PUSH17 0x70726F766564416363657373436F6E7472 PUSH16 0x6C3A2073656E646572206D7573742062 PUSH6 0x20616E206164 PUSH14 0x696E20746F207265766F6B654552 NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0x4552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F2061646472657373455243313135355072657365744D696E PUSH21 0x65725061757365723A206D7573742068617665206D PUSH10 0x6E74657220726F6C6520 PUSH21 0x6F206D696E74455243313135353A20696E73756666 PUSH10 0x6369656E742062616C61 PUSH15 0x636520666F72207472616E73666572 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD POP PUSH19 0x657365744D696E7465725061757365723A206D PUSH22 0x737420686176652070617573657220726F6C6520746F KECCAK256 PUSH22 0x6E7061757365455243313135355072657365744D696E PUSH21 0x65725061757365723A206D75737420686176652070 PUSH2 0x7573 PUSH6 0x7220726F6C65 KECCAK256 PUSH21 0x6F207061757365455243313135353A207365747469 PUSH15 0x6720617070726F76616C2073746174 PUSH22 0x7320666F722073656C66455243313135353A20616363 PUSH16 0x756E747320616E6420696473206C656E PUSH8 0x7468206D69736D61 PUSH21 0x6368455243313135353A2069647320616E6420616D PUSH16 0x756E7473206C656E677468206D69736D PUSH2 0x7463 PUSH9 0x455243313135353A20 PUSH14 0x696E7420746F20746865207A6572 PUSH16 0x2061646472657373416363657373436F PUSH15 0x74726F6C3A2063616E206F6E6C7920 PUSH19 0x656E6F756E636520726F6C657320666F722073 PUSH6 0x6C66A2646970 PUSH7 0x73582212201701 0xCE 0xE5 PUSH13 0x8EB3834A7CC3C90EF19C4244A2 0x48 0x22 OR 0xF7 0xD1 0xB9 0xA5 JUMPDEST EXTCODEHASH KECCAK256 CALLDATASIZE 0xF PUSH10 0x9E64736F6C634300060C STOP CALLER ",
							"sourceMap": "828:2533:5:-:0;;;1205:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1205:207:5;;;;;;;;;;-1:-1:-1;1205:207:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1205:207:5;;-1:-1:-1;1251:3:5;;-1:-1:-1;751:40:2;;-1:-1:-1;;;;751:18:2;:40::i;:::-;2015:12:6;2023:3;2015:7;:12::i;:::-;2116:41;-1:-1:-1;;;2116:18:6;:41::i;:::-;2257:54;-1:-1:-1;;;2257:18:6;:54::i;:::-;-1:-1:-1;923:7:14;:15;;-1:-1:-1;;923:15:14;;;1266:44:5::1;933:5:14::0;1297:12:5::1;:10;:12::i;:::-;1266:10;:44::i;:::-;1321:37;967:24;1345:12;:10;:12::i;1321:37::-;1368;1035:24;1392:12;:10;:12::i;1368:37::-;1205:207:::0;828:2533;;1482:198:2;-1:-1:-1;;;;;;1565:25:2;;;;;1557:66;;;;;-1:-1:-1;;;1557:66:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1633:33:2;;;;;1669:4;1633:33;;;;;;;;:40;;-1:-1:-1;;1633:40:2;;;;;;1482:198::o;7590:86:6:-;7656:13;;;;:4;;:13;;;;;:::i;:::-;;7590:86;:::o;590:104:0:-;677:10;590:104;:::o;6578:110:1:-;6656:25;6667:4;6673:7;7088:6;:12;;;;;;;;;;;:33;;7113:7;;7088:24;;;;;:33;;:::i;:::-;7084:109;;;7169:12;:10;:12::i;:::-;-1:-1:-1;;;;;7142:40:1;7160:7;-1:-1:-1;;;;;7142:40:1;7154:4;7142:40;;;;;;;;;;7015:184;;:::o;4864:141:13:-;4934:4;4957:41;4962:3;-1:-1:-1;;;;;4982:14:13;;4957:4;:41::i;:::-;4950:48;;4864:141;;;;;:::o;1611:404::-;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;-1:-1:-1;1732:23:13;;;;;;;;:11;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:13;1986:12;;3776:127;3849:4;3872:19;;;:12;;;;;:19;;;;;;:24;;;3776:127::o;828:2533:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;828:2533:5;;;-1:-1:-1;828:2533:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x172 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x731133E9 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xCA15C873 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE63AB1E9 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0xAE2 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0xAEA JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0xB18 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0xBE1 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH4 0xCA15C873 EQ PUSH2 0xA91 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0xAAE JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xAB6 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH4 0x731133E9 EQ PUSH2 0x928 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x9E8 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x9F0 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0xA2F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0xA5B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xA63 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x672 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x67A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x7ED JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x7F5 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x459 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC13 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x247 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x274 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xD3C SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x4A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xDCF SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1139 JUMP JUMPDEST PUSH2 0x43A PUSH2 0x119A JUMP JUMPDEST PUSH2 0x79D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x6AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x6BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x120B SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7D9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7C1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH2 0x1389 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x80B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x8B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x8EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1393 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x974 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x9A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x140C SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x43A PUSH2 0x147F JUMP JUMPDEST PUSH2 0xA13 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x150D JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x1525 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x152A JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1619 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x1630 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xACC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1654 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x16AD JUMP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0xB2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xB6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xB7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xBA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x16FF SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xBF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x18CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2AF4 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD30 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD05 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD30 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD13 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6D PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x150D JUMP JUMPDEST PUSH2 0xDA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C73 PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB4 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1957 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xE0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D9B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xE54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BF9 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5C PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xE87 JUMPI POP PUSH2 0xE87 DUP6 PUSH2 0xE82 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0xEC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C1E PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xECC PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0xEDC DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BAC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xEF6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF0E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0xF7B DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CAB PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1BBA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xFB2 SWAP1 DUP3 PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP PUSH1 0x1 ADD PUSH2 0xEDF JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1068 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1050 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10A7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x108F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x10CA DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1CAB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x10F0 SWAP1 PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x112B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2AC5 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1135 DUP3 DUP3 PUSH2 0x1F2A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1141 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1190 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DE4 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1135 DUP3 DUP3 PUSH2 0x1F93 JUMP JUMPDEST PUSH2 0x11C6 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x1201 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CD5 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1209 PUSH2 0x1FFC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x124D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D72 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1291 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1381 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x12B7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B1F PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1315 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1339 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x136E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1297 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x139B PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x13C1 JUMPI POP PUSH2 0x13C1 DUP4 PUSH2 0xE82 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x13FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BA0 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1407 DUP4 DUP4 DUP4 PUSH2 0x209A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1438 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x1473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C73 PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB4 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2308 JUMP JUMPDEST PUSH2 0x14AB PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x14E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D10 PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1209 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1506 SWAP1 DUP4 PUSH2 0x248A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1506 SWAP1 DUP4 PUSH2 0x2496 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x153C PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1582 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D49 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x158F PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x15D3 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xC7F SWAP1 PUSH2 0x24AB JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1672 SWAP1 PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x1190 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BC9 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1744 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BF9 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x174C PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1772 JUMPI POP PUSH2 0x1772 DUP6 PUSH2 0xE82 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x17AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BA0 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17B7 PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0x17D7 DUP2 DUP8 DUP8 PUSH2 0x17C8 DUP9 PUSH2 0x24B6 JUMP JUMPDEST PUSH2 0x17D1 DUP9 PUSH2 0x24B6 JUMP JUMPDEST DUP8 PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x181E DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CAB PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1855 SWAP1 DUP5 PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE DUP1 MLOAD DUP11 DUP5 AND SWAP4 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 PUSH2 0x10CA DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x24FA JUMP JUMPDEST PUSH2 0x18D2 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x18F8 JUMPI POP PUSH2 0x18F8 DUP4 PUSH2 0xE82 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x1933 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BA0 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1407 DUP4 DUP4 DUP4 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1506 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x279E JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x199C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DC3 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x19DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D9B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19E6 PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0x19F7 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BAC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1ABB JUMPI PUSH2 0x1A72 PUSH1 0x2 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1A16 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A5C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1C51 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1A82 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SSTORE PUSH1 0x1 ADD PUSH2 0x19FA JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B42 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B2A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B81 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B69 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1BA5 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1CAB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10CA DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x27E8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C0E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BF6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1C3B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1506 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1CBD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x283A JUMP JUMPDEST ISZERO PUSH2 0x10CA JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D4B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D33 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D8A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D72 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DC6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DAE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1DF3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1E3D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x1ED2 JUMPI PUSH2 0x1E49 PUSH2 0x29A1 JUMP JUMPDEST DUP1 PUSH2 0x1E54 JUMPI POP PUSH2 0x1E9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD DUP5 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1C0E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A47 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x1F21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A9D PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1F42 SWAP1 DUP3 PUSH2 0x193E JUMP JUMPDEST ISZERO PUSH2 0x1135 JUMPI PUSH2 0x1F4F PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1FAB SWAP1 DUP3 PUSH2 0x2840 JUMP JUMPDEST ISZERO PUSH2 0x1135 JUMPI PUSH2 0x1FB8 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x204A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x207D PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x20DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C50 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x211F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D9B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2129 PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0x2149 DUP2 DUP6 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BAC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2227 JUMPI PUSH2 0x21DE DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2164 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B50 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x2195 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1BBA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x21EE JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SSTORE PUSH1 0x1 ADD PUSH2 0x214C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22AE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2296 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22ED JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22D5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x234D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DC3 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2357 PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0x2369 DUP2 PUSH1 0x0 DUP8 PUSH2 0x17C8 DUP9 PUSH2 0x24B6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x2396 SWAP1 DUP5 PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP10 DUP2 MSTORE SWAP3 DUP4 ADD DUP9 SWAP1 MSTORE DUP2 MLOAD SWAP1 SWAP5 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 PUSH2 0x1BA5 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x24FA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2454 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x207D PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1506 DUP4 DUP4 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1506 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x28B9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7F DUP3 PUSH2 0x28D1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x24E9 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x250C DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x283A JUMP JUMPDEST ISZERO PUSH2 0x10CA JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x259B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2583 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x25C8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2610 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x260B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x261C JUMPI PUSH2 0x1E49 PUSH2 0x29A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x1F21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A9D PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x26B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C50 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x26BA PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0x26EA DUP2 DUP6 PUSH1 0x0 PUSH2 0x26CC DUP8 PUSH2 0x24B6 JUMP JUMPDEST PUSH2 0x26D5 DUP8 PUSH2 0x24B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x2731 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B50 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP9 DUP2 MSTORE SWAP3 DUP4 ADD DUP8 SWAP1 MSTORE DUP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27AA DUP4 DUP4 PUSH2 0x28B9 JUMP JUMPDEST PUSH2 0x27E0 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xC7F JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x27F6 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x27FE PUSH2 0x1389 JUMP JUMPDEST ISZERO PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B74 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1506 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x28D5 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x2897 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A7B PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x28A6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x2991 JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2908 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2925 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x2955 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xC7F JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x29B1 JUMPI PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY PUSH4 0x8C379A0 PUSH2 0x29C5 DUP3 MLOAD PUSH2 0x299B JUMP JUMPDEST EQ PUSH2 0x29CF JUMPI PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x29FF JUMPI POP POP POP POP PUSH2 0x1390 JUMP JUMPDEST DUP3 DUP5 ADD SWAP3 POP DUP3 MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A19 JUMPI POP POP POP POP PUSH2 0x1390 JUMP JUMPDEST POP RETURNDATASIZE DUP4 ADD PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x2A31 JUMPI POP POP POP PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F206E6F6E20455243313135 CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E6473455243313135353A204552 NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH19 0x656A656374656420746F6B656E734163636573 PUSH20 0x436F6E74726F6C3A2073656E646572206D757374 KECCAK256 PUSH3 0x652061 PUSH15 0x2061646D696E20746F206772616E74 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A2062617463682062 PUSH2 0x6C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A206275726E20616D PUSH16 0x756E7420657863656564732062616C61 PUSH15 0x636545524331313535506175736162 PUSH13 0x653A20746F6B656E207472616E PUSH20 0x666572207768696C652070617573656445524331 BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH4 0x616C6C65 PUSH19 0x206973206E6F74206F776E6572206E6F722061 PUSH17 0x70726F766564416363657373436F6E7472 PUSH16 0x6C3A2073656E646572206D7573742062 PUSH6 0x20616E206164 PUSH14 0x696E20746F207265766F6B654552 NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0x4552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F2061646472657373455243313135355072657365744D696E PUSH21 0x65725061757365723A206D7573742068617665206D PUSH10 0x6E74657220726F6C6520 PUSH21 0x6F206D696E74455243313135353A20696E73756666 PUSH10 0x6369656E742062616C61 PUSH15 0x636520666F72207472616E73666572 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD POP PUSH19 0x657365744D696E7465725061757365723A206D PUSH22 0x737420686176652070617573657220726F6C6520746F KECCAK256 PUSH22 0x6E7061757365455243313135355072657365744D696E PUSH21 0x65725061757365723A206D75737420686176652070 PUSH2 0x7573 PUSH6 0x7220726F6C65 KECCAK256 PUSH21 0x6F207061757365455243313135353A207365747469 PUSH15 0x6720617070726F76616C2073746174 PUSH22 0x7320666F722073656C66455243313135353A20616363 PUSH16 0x756E747320616E6420696473206C656E PUSH8 0x7468206D69736D61 PUSH21 0x6368455243313135353A2069647320616E6420616D PUSH16 0x756E7473206C656E677468206D69736D PUSH2 0x7463 PUSH9 0x455243313135353A20 PUSH14 0x696E7420746F20746865207A6572 PUSH16 0x2061646472657373416363657373436F PUSH15 0x74726F6C3A2063616E206F6E6C7920 PUSH19 0x656E6F756E636520726F6C657320666F722073 PUSH6 0x6C66A2646970 PUSH7 0x73582212201701 0xCE 0xE5 PUSH13 0x8EB3834A7CC3C90EF19C4244A2 0x48 0x22 OR 0xF7 0xD1 0xB9 0xA5 JUMPDEST EXTCODEHASH KECCAK256 CALLDATASIZE 0xF PUSH10 0x9E64736F6C634300060C STOP CALLER ",
							"sourceMap": "828:2533:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2956:220:6;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2956:220:6;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;948:140:2;;;;;;;;;;;;;;;;-1:-1:-1;948:140:2;-1:-1:-1;;;;;;948:140:2;;:::i;:::-;;;;;;;;;;;;;;;;;;2717:97:6;;;;;;;;;;;;;;;;-1:-1:-1;2717:97:6;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1971:278:5;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1971:278:5;;;;;;;;;;;;;;;-1:-1:-1;;;1971:278:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1971:278:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1971:278:5;;;;;;;;-1:-1:-1;1971:278:5;;-1:-1:-1;;;;;1971:278:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1971:278:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1971:278:5;;;;;;;;-1:-1:-1;1971:278:5;;-1:-1:-1;;;;;1971:278:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1971:278:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1971:278:5;;-1:-1:-1;1971:278:5;;-1:-1:-1;;;;;1971:278:5:i;:::-;;4272:112:1;;;;;;;;;;;;;;;;-1:-1:-1;4272:112:1;;:::i;5583:1184:6:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5583:1184:6;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:1184:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:1184:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5583:1184:6;;;;;;;;-1:-1:-1;5583:1184:6;;-1:-1:-1;;;;;5583:1184:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:1184:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5583:1184:6;;;;;;;;-1:-1:-1;5583:1184:6;;-1:-1:-1;;;;;5583:1184:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:1184:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5583:1184:6;;-1:-1:-1;5583:1184:6;;-1:-1:-1;;;;;5583:1184:6:i;4634:223:1:-;;;;;;;;;;;;;;;;-1:-1:-1;4634:223:1;;;;;;-1:-1:-1;;;;;4634:223:1;;:::i;5808:205::-;;;;;;;;;;;;;;;;-1:-1:-1;5808:205:1;;;;;;-1:-1:-1;;;;;5808:205:1;;:::i;2834:177:5:-;;;:::i;3333:615:6:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3333:615:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3333:615:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3333:615:6;;;;;;;;-1:-1:-1;3333:615:6;;-1:-1:-1;;;;;3333:615:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3333:615:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3333:615:6;;-1:-1:-1;3333:615:6;;-1:-1:-1;;;;;3333:615:6:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1040:76:14;;;:::i;598:312:7:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;598:312:7;;;;;;;;;;;;;;;-1:-1:-1;;;598:312:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;598:312:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;598:312:7;;;;;;;;-1:-1:-1;598:312:7;;-1:-1:-1;;;;;598:312:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;598:312:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;598:312:7;;-1:-1:-1;598:312:7;;-1:-1:-1;;;;;598:312:7:i;1623:246:5:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1623:246:5;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1623:246:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1623:246:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1623:246:5;;-1:-1:-1;1623:246:5;;-1:-1:-1;;;;;1623:246:5:i;2454:171::-;;;:::i;3955:136:1:-;;;;;;;;;;;;;;;;-1:-1:-1;3955:136:1;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;3955:136:1;;;;;;;;;;;;;;2940:137;;;;;;;;;;;;;;;;-1:-1:-1;2940:137:1;;;;;;-1:-1:-1;;;;;2940:137:1;;:::i;1717:49::-;;;:::i;4016:306:6:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4016:306:6;;;;;;;;;;:::i;3245:125:1:-;;;;;;;;;;;;;;;;-1:-1:-1;3245:125:1;;:::i;929:62:5:-;;;:::i;5091:226:1:-;;;;;;;;;;;;;;;;-1:-1:-1;5091:226:1;;;;;;-1:-1:-1;;;;;5091:226:1;;:::i;997:62:5:-;;;:::i;4389:158:6:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4389:158:6;;;;;;;;;;:::i;4614:897::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4614:897:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4614:897:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4614:897:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4614:897:6;;-1:-1:-1;4614:897:6;;-1:-1:-1;;;;;4614:897:6:i;312:280:7:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;312:280:7;;;;;;;;;;;;;:::i;2956:220:6:-;3034:7;-1:-1:-1;;;;;3061:21:6;;3053:77;;;;-1:-1:-1;;;3053:77:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3147:13:6;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;3147:22:6;;;;;;;;;;2956:220;;;;;:::o;948:140:2:-;-1:-1:-1;;;;;;1048:33:2;1025:4;1048:33;;;:20;:33;;;;;;;;;948:140::o;2717:97:6:-;2803:4;2796:11;;;;;;;;-1:-1:-1;;2796:11:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2771:13;;2796:11;;2803:4;;2796:11;;2803:4;2796:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2717:97;;;:::o;1971:278:5:-;2102:34;967:24;2123:12;:10;:12::i;:::-;2102:7;:34::i;:::-;2094:103;;;;-1:-1:-1;;;2094:103:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:34;2219:2;2223:3;2228:7;2237:4;2208:10;:34::i;:::-;1971:278;;;;:::o;4272:112:1:-;4329:7;4355:12;;;;;;;;;;:22;;;;4272:112::o;5583:1184:6:-;5837:7;:14;5823:3;:10;:28;5815:81;;;;-1:-1:-1;;;5815:81:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5914:16:6;;5906:66;;;;-1:-1:-1;;;5906:66:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6011:12;:10;:12::i;:::-;-1:-1:-1;;;;;6003:20:6;:4;-1:-1:-1;;;;;6003:20:6;;:60;;;;6027:36;6044:4;6050:12;:10;:12::i;:::-;6027:16;:36::i;:::-;5982:157;;;;-1:-1:-1;;;5982:157:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6150:16;6169:12;:10;:12::i;:::-;6150:31;;6192:60;6213:8;6223:4;6229:2;6233:3;6238:7;6247:4;6192:20;:60::i;:::-;6268:9;6263:349;6287:3;:10;6283:1;:14;6263:349;;;6318:10;6331:3;6335:1;6331:6;;;;;;;;;;;;;;6318:19;;6351:14;6368:7;6376:1;6368:10;;;;;;;;;;;;;;6351:27;;6415:123;6456:6;6415:123;;;;;;;;;;;;;;;;;:9;:13;6425:2;6415:13;;;;;;;;;;;:19;6429:4;-1:-1:-1;;;;;6415:19:6;-1:-1:-1;;;;;6415:19:6;;;;;;;;;;;;;:23;;:123;;;;;:::i;:::-;6393:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6393:19:6;;;;;;;;;;:145;;;;6572:17;;;;;;:29;;6594:6;6572:21;:29::i;:::-;6552:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6552:17:6;;;;;;;;;;:49;;;;-1:-1:-1;6299:3:6;;6263:349;;;;6657:2;-1:-1:-1;;;;;6627:47:6;6651:4;-1:-1:-1;;;;;6627:47:6;6641:8;-1:-1:-1;;;;;6627:47:6;;6661:3;6666:7;6627:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6685:75;6721:8;6731:4;6737:2;6741:3;6746:7;6755:4;6685:35;:75::i;:::-;5583:1184;;;;;;:::o;4634:223:1:-;4725:6;:12;;;;;;;;;;:22;;;4717:45;;4749:12;:10;:12::i;4717:45::-;4709:105;;;;-1:-1:-1;;;4709:105:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4825:25;4836:4;4842:7;4825:10;:25::i;:::-;4634:223;;:::o;5808:205::-;5905:12;:10;:12::i;:::-;-1:-1:-1;;;;;5894:23:1;:7;-1:-1:-1;;;;;5894:23:1;;5886:83;;;;-1:-1:-1;;;5886:83:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5980:26;5992:4;5998:7;5980:11;:26::i;2834:177:5:-;2886:34;1035:24;2907:12;:10;:12::i;2886:34::-;2878:106;;;;-1:-1:-1;;;2878:106:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2994:10;:8;:10::i;:::-;2834:177::o;3333:615:6:-;3490:16;3549:3;:10;3530:8;:15;:29;3522:83;;;;-1:-1:-1;;;3522:83:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3616:30;3663:8;:15;3649:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3649:30:6;;3616:63;;3695:9;3690:221;3714:8;:15;3710:1;:19;3690:221;;;3781:1;-1:-1:-1;;;;;3758:25:6;:8;3767:1;3758:11;;;;;;;;;;;;;;-1:-1:-1;;;;;3758:25:6;;;3750:87;;;;-1:-1:-1;;;3750:87:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3870:9;:17;3880:3;3884:1;3880:6;;;;;;;;;;;;;;3870:17;;;;;;;;;;;:30;3888:8;3897:1;3888:11;;;;;;;;;;;;;;-1:-1:-1;;;;;3870:30:6;-1:-1:-1;;;;;3870:30:6;;;;;;;;;;;;;3851:13;3865:1;3851:16;;;;;;;;;;;;;;;;;:49;3731:3;;3690:221;;;-1:-1:-1;3928:13:6;3333:615;-1:-1:-1;;;3333:615:6:o;1040:76:14:-;1102:7;;;;1040:76;;:::o;598:312:7:-;738:12;:10;:12::i;:::-;-1:-1:-1;;;;;727:23:7;:7;-1:-1:-1;;;;;727:23:7;;:66;;;;754:39;771:7;780:12;:10;:12::i;754:39::-;706:154;;;;-1:-1:-1;;;706:154:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;871:32;882:7;891:3;896:6;871:10;:32::i;:::-;598:312;;;:::o;1623:246:5:-;1729:34;967:24;1750:12;:10;:12::i;1729:34::-;1721:103;;;;-1:-1:-1;;;1721:103:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1835:27;1841:2;1845;1849:6;1857:4;1835:5;:27::i;2454:171::-;2504:34;1035:24;2525:12;:10;:12::i;2504:34::-;2496:104;;;;-1:-1:-1;;;2496:104:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:8;:6;:8::i;3955:136:1:-;4028:7;4054:12;;;;;;;;;;:30;;4078:5;4054:23;:30::i;:::-;4047:37;3955:136;-1:-1:-1;;;3955:136:1:o;2940:137::-;3009:4;3032:12;;;;;;;;;;:38;;3062:7;3032:29;:38::i;1717:49::-;1762:4;1717:49;:::o;4016:306:6:-;4134:8;-1:-1:-1;;;;;4118:24:6;:12;:10;:12::i;:::-;-1:-1:-1;;;;;4118:24:6;;;4110:78;;;;-1:-1:-1;;;4110:78:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:8;4199:18;:32;4218:12;:10;:12::i;:::-;-1:-1:-1;;;;;4199:32:6;;;;;;;;;;;;;;;;;-1:-1:-1;4199:32:6;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;4199:53:6;;;;;;;;;;;4282:12;:10;:12::i;:::-;-1:-1:-1;;;;;4267:48:6;;4306:8;4267:48;;;;;;;;;;;;;;;;;;;;4016:306;;:::o;3245:125:1:-;3308:7;3334:12;;;;;;;;;;:29;;:27;:29::i;929:62:5:-;967:24;929:62;:::o;5091:226:1:-;5183:6;:12;;;;;;;;;;:22;;;5175:45;;5207:12;:10;:12::i;5175:45::-;5167:106;;;;-1:-1:-1;;;5167:106:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;997:62:5;1035:24;997:62;:::o;4389:158:6:-;-1:-1:-1;;;;;4503:27:6;;;4480:4;4503:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;4389:158::o;4614:897::-;-1:-1:-1;;;;;4829:16:6;;4821:66;;;;-1:-1:-1;;;4821:66:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4926:12;:10;:12::i;:::-;-1:-1:-1;;;;;4918:20:6;:4;-1:-1:-1;;;;;4918:20:6;;:60;;;;4942:36;4959:4;4965:12;:10;:12::i;4942:36::-;4897:148;;;;-1:-1:-1;;;4897:148:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5056:16;5075:12;:10;:12::i;:::-;5056:31;;5098:96;5119:8;5129:4;5135:2;5139:21;5157:2;5139:17;:21::i;:::-;5162:25;5180:6;5162:17;:25::i;:::-;5189:4;5098:20;:96::i;:::-;5227:77;5251:6;5227:77;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5227:19:6;;;;;;;;;;;:77;:23;:77::i;:::-;5205:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5205:19:6;;;;;;;;;;:99;;;;5334:17;;;;;;:29;;5356:6;5334:21;:29::i;:::-;5314:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5314:17:6;;;;;;;;;;;;;:49;;;;5379:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5436:68;5467:8;5477:4;5483:2;5487;5491:6;5499:4;5436:30;:68::i;312:280:7:-;427:12;:10;:12::i;:::-;-1:-1:-1;;;;;416:23:7;:7;-1:-1:-1;;;;;416:23:7;;:66;;;;443:39;460:7;469:12;:10;:12::i;443:39::-;395:154;;;;-1:-1:-1;;;395:154:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;560:25;566:7;575:2;579:5;560;:25::i;4864:141:13:-;4934:4;4957:41;4962:3;-1:-1:-1;;;;;4982:14:13;;4957:4;:41::i;590:104:0:-;677:10;590:104;:::o;8976:700:6:-;-1:-1:-1;;;;;9110:16:6;;9102:62;;;;-1:-1:-1;;;9102:62:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9196:7;:14;9182:3;:10;:28;9174:81;;;;-1:-1:-1;;;9174:81:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9266:16;9285:12;:10;:12::i;:::-;9266:31;;9308:66;9329:8;9347:1;9351:2;9355:3;9360:7;9369:4;9308:20;:66::i;:::-;9390:6;9385:124;9406:3;:10;9402:1;:14;9385:124;;;9461:37;9476:9;:17;9486:3;9490:1;9486:6;;;;;;;;;;;;;;9476:17;;;;;;;;;;;:21;9494:2;-1:-1:-1;;;;;9476:21:6;-1:-1:-1;;;;;9476:21:6;;;;;;;;;;;;;9461:7;9469:1;9461:10;;;;;;;;;;;;;;:14;;:37;;;;:::i;:::-;9437:9;:17;9447:3;9451:1;9447:6;;;;;;;;;;;;;;;;;;;9437:17;;;;;;;;;;;;;-1:-1:-1;9437:17:6;;;-1:-1:-1;;;;;9437:21:6;;;;;;;;;:61;9418:3;;9385:124;;;;9560:2;-1:-1:-1;;;;;9524:53:6;9556:1;-1:-1:-1;;;;;9524:53:6;9538:8;-1:-1:-1;;;;;9524:53:6;;9564:3;9569:7;9524:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9588:81;9624:8;9642:1;9646:2;9650:3;9655:7;9664:4;9588:35;:81::i;:::-;8976:700;;;;;:::o;3017:342:5:-;3286:66;3313:8;3323:4;3329:2;3333:3;3338:7;3347:4;3286:26;:66::i;1746:187:4:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:4;;;1746:187::o;874:176::-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;13276:778:6;13520:15;:2;-1:-1:-1;;;;;13520:13:6;;:15::i;:::-;13516:532;;;13572:2;-1:-1:-1;;;;;13555:43:6;;13599:8;13609:4;13615:3;13620:7;13629:4;13555:79;;;;;;;;;;;;;-1:-1:-1;;;;;13555:79:6;;;;;;-1:-1:-1;;;;;13555:79:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13555:79:6;;;13551:487;;;;:::i;:::-;;;;;;;;13907:14;;-1:-1:-1;;;13907:14:6;;;;;;;;;;;;;;;;;13914:6;;13907:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13551:487;13961:62;;-1:-1:-1;;;13961:62:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13551:487;-1:-1:-1;;;;;;13683:64:6;;-1:-1:-1;;;13683:64:6;13679:161;;13771:50;;-1:-1:-1;;;13771:50:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13679:161;13635:219;13276:778;;;;;;:::o;7015:184:1:-;7088:6;:12;;;;;;;;;;:33;;7113:7;7088:24;:33::i;:::-;7084:109;;;7169:12;:10;:12::i;:::-;-1:-1:-1;;;;;7142:40:1;7160:7;-1:-1:-1;;;;;7142:40:1;7154:4;7142:40;;;;;;;;;;7015:184;;:::o;7205:188::-;7279:6;:12;;;;;;;;;;:36;;7307:7;7279:27;:36::i;:::-;7275:112;;;7363:12;:10;:12::i;:::-;-1:-1:-1;;;;;7336:40:1;7354:7;-1:-1:-1;;;;;7336:40:1;7348:4;7336:40;;;;;;;;;;7205:188;;:::o;2042:117:14:-;1610:7;;;;1602:40;;;;;-1:-1:-1;;;1602:40:14;;;;;;;;;;;;-1:-1:-1;;;1602:40:14;;;;;;;;;;;;;;;2100:7:::1;:15:::0;;-1:-1:-1;;2100:15:14::1;::::0;;2130:22:::1;2139:12;:10;:12::i;:::-;2130:22;::::0;;-1:-1:-1;;;;;2130:22:14;;::::1;::::0;;;;;;;::::1;::::0;;::::1;2042:117::o:0;10657:705:6:-;-1:-1:-1;;;;;10777:21:6;;10769:69;;;;-1:-1:-1;;;10769:69:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10870:7;:14;10856:3;:10;:28;10848:81;;;;-1:-1:-1;;;10848:81:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10940:16;10959:12;:10;:12::i;:::-;10940:31;;10982:69;11003:8;11013:7;11030:1;11034:3;11039:7;10982:69;;;;;;;;;;;;:20;:69::i;:::-;11067:6;11062:220;11083:3;:10;11079:1;:14;11062:220;;;11143:128;11191:7;11199:1;11191:10;;;;;;;;;;;;;;11143:128;;;;;;;;;;;;;;;;;:9;:17;11153:3;11157:1;11153:6;;;;;;;;;;;;;;11143:17;;;;;;;;;;;:26;11161:7;-1:-1:-1;;;;;11143:26:6;-1:-1:-1;;;;;11143:26:6;;;;;;;;;;;;;:30;;:128;;;;;:::i;:::-;11114:9;:17;11124:3;11128:1;11124:6;;;;;;;;;;;;;;;;;;;11114:17;;;;;;;;;;;;;-1:-1:-1;11114:17:6;;;-1:-1:-1;;;;;11114:26:6;;;;;;;;;:157;11095:3;;11062:220;;;;11338:1;-1:-1:-1;;;;;11297:58:6;11321:7;-1:-1:-1;;;;;11297:58:6;11311:8;-1:-1:-1;;;;;11297:58:6;;11342:3;11347:7;11297:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10657:705;;;;:::o;8059:572::-;-1:-1:-1;;;;;8173:21:6;;8165:67;;;;-1:-1:-1;;;8165:67:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8243:16;8262:12;:10;:12::i;:::-;8243:31;;8285:107;8306:8;8324:1;8328:7;8337:21;8355:2;8337:17;:21::i;8285:107::-;8428:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;8428:22:6;;;;;;;;;;:34;;8455:6;8428:26;:34::i;:::-;8403:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;8403:22:6;;;;;;;;;;;;:59;;;;8477:57;;;;;;;;;;;;;8403:22;;8477:57;;;;;;;;;;;;8545:79;8576:8;8594:1;8598:7;8607:2;8611:6;8619:4;8545:30;:79::i;1795:115:14:-;1346:7;;;;1345:8;1337:37;;;;;-1:-1:-1;;;1337:37:14;;;;;;;;;;;;-1:-1:-1;;;1337:37:14;;;;;;;;;;;;;;;1854:7:::1;:14:::0;;-1:-1:-1;;1854:14:14::1;1864:4;1854:14;::::0;;1883:20:::1;1890:12;:10;:12::i;6085:147:13:-:0;6159:7;6201:22;6205:3;6217:5;6201:3;:22::i;5401:156::-;5481:4;5504:46;5514:3;-1:-1:-1;;;;;5534:14:13;;5504:9;:46::i;5638:115::-;5701:7;5727:19;5735:3;5727:7;:19::i;14060:193:6:-;14179:16;;;14193:1;14179:16;;;;;;;;;14126;;;;14179;;;;;;;;;;;;-1:-1:-1;14179:16:6;14154:41;;14216:7;14205:5;14211:1;14205:8;;;;;;;;;;;;;;;;;:18;14241:5;14060:193;-1:-1:-1;;14060:193:6:o;12529:741::-;12748:15;:2;-1:-1:-1;;;;;12748:13:6;;:15::i;:::-;12744:520;;;12800:2;-1:-1:-1;;;;;12783:38:6;;12822:8;12832:4;12838:2;12842:6;12850:4;12783:72;;;;;;;;;;;;;-1:-1:-1;;;;;12783:72:6;;;;;;-1:-1:-1;;;;;12783:72:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12783:72:6;;;12779:475;;;;:::i;:::-;-1:-1:-1;;;;;;12904:59:6;;-1:-1:-1;;;12904:59:6;12900:156;;12987:50;;-1:-1:-1;;;12987:50:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9925:538;-1:-1:-1;;;;;10020:21:6;;10012:69;;;;-1:-1:-1;;;10012:69:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10092:16;10111:12;:10;:12::i;:::-;10092:31;;10134:105;10155:8;10165:7;10182:1;10186:21;10204:2;10186:17;:21::i;:::-;10209:25;10227:6;10209:17;:25::i;:::-;10134:105;;;;;;;;;;;;:20;:105::i;:::-;10275:108;10315:6;10275:108;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;10275:22:6;;;;;;;;;;;:108;:26;:108::i;:::-;10250:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;10250:22:6;;;;;;;;;;;;:133;;;;10399:57;;;;;;;;;;;;;10250:13;;:22;;10399:57;;;;;;;;;;;;;9925:538;;;;:::o;1611:404:13:-;1674:4;1695:21;1705:3;1710:5;1695:9;:21::i;:::-;1690:319;;-1:-1:-1;1732:23:13;;;;;;;;:11;:23;;;;;;;;;;;;;1912:18;;1890:19;;;:12;;;:19;;;;;;:40;;;;1944:11;;1690:319;-1:-1:-1;1993:5:13;1986:12;;622:393:8;865:66;892:8;902:4;908:2;912:3;917:7;926:4;865:26;:66::i;:::-;951:8;:6;:8::i;:::-;950:9;942:66;;;;-1:-1:-1;;;942:66:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;718:413:12;1078:20;1116:8;;;718:413::o;5173:147:13:-;5246:4;5269:44;5277:3;-1:-1:-1;;;;;5297:14:13;;5269:7;:44::i;4423:201::-;4517:18;;4490:7;;4517:26;-1:-1:-1;4509:73:13;;;;-1:-1:-1;;;4509:73:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4599:3;:11;;4611:5;4599:18;;;;;;;;;;;;;;;;4592:25;;4423:201;;;;:::o;3776:127::-;3849:4;3872:19;;;:12;;;;;:19;;;;;;:24;;;3776:127::o;3984:107::-;4066:18;;3984:107::o;2183:1512::-;2249:4;2386:19;;;:12;;;:19;;;;;;2420:15;;2416:1273;;2849:18;;-1:-1:-1;;2801:14:13;;;;2849:22;;;;2777:21;;2849:3;;:22;;3131;;;;;;;;;;;;;;3111:42;;3274:9;3245:3;:11;;3257:13;3245:26;;;;;;;;;;;;;;;;;;;:38;;;;3349:23;;;3391:1;3349:12;;;:23;;;;;;3375:17;;;3349:43;;3498:17;;3349:3;;3498:17;;;;;;;;;;;;;;;;;;;;;;3590:3;:12;;:19;3603:5;3590:19;;;;;;;;;;;3583:26;;;3631:4;3624:11;;;;;;;;2416:1273;3673:5;3666:12;;;;;110:106:-1;195:3;191:15;;163:53::o;224:739::-;;297:4;279:16;276:26;273:2;;;305:5;;273:2;339:1;-1:-1;;318:23;414:10;357:34;-1:-1;382:8;357:34;:::i;:::-;406:19;396:2;;429:5;;396:2;460;454:9;496:16;-1:-1;;492:24;339:1;454:9;468:49;543:4;537:11;624:16;576:18;624:16;617:4;609:6;605:17;602:39;576:18;568:6;565:30;556:91;553:2;;;655:5;;;;;;553:2;693:6;687:4;683:17;672:28;;725:3;719:10;705:24;;576:18;740:6;737:30;734:2;;;770:5;;;;;;734:2;;847:16;841:4;837:27;807:4;814:6;802:3;794:27;;829:36;826:2;;;868:5;;;;;826:2;89:7;73:14;-1:-1;;69:28;892:50;;807:4;892:50;460:2;881:62;900:3;-1:-1;;267:696;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2369600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "309",
								"MINTER_ROLE()": "265",
								"PAUSER_ROLE()": "242",
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"burn(address,uint256,uint256)": "infinite",
								"burnBatch(address,uint256[],uint256[])": "infinite",
								"getRoleAdmin(bytes32)": "1227",
								"getRoleMember(bytes32,uint256)": "infinite",
								"getRoleMemberCount(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "infinite",
								"isApprovedForAll(address,address)": "1328",
								"mint(address,uint256,uint256,bytes)": "infinite",
								"mintBatch(address,uint256[],uint256[],bytes)": "infinite",
								"pause()": "infinite",
								"paused()": "1122",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "1206",
								"unpause()": "infinite",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "100000000"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "tag",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "100000000"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1251,
									"end": 1254,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1254,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 751,
									"end": 791,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 751,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1FFC9A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 751,
									"end": 769,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 751,
									"end": 791,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 751,
									"end": 791,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 751,
									"end": 791,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 2023,
									"end": 2026,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2015,
									"end": 2022,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2116,
									"end": 2157,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6CDB3D13"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2116,
									"end": 2134,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2116,
									"end": 2157,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2116,
									"end": 2157,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2116,
									"end": 2157,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2257,
									"end": 2311,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3A24D07"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2257,
									"end": 2275,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2257,
									"end": 2311,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2257,
									"end": 2311,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2257,
									"end": 2311,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 923,
									"end": 930,
									"name": "PUSH",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 923,
									"end": 938,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 923,
									"end": 938,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 923,
									"end": 938,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 923,
									"end": 938,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 923,
									"end": 938,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1266,
									"end": 1310,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 933,
									"end": 938,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1297,
									"end": 1309,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1297,
									"end": 1307,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 1297,
									"end": 1309,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1297,
									"end": 1309,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1297,
									"end": 1309,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1266,
									"end": 1276,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1266,
									"end": 1310,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1266,
									"end": 1310,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1266,
									"end": 1310,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1321,
									"end": 1358,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 967,
									"end": 991,
									"name": "PUSH",
									"source": 5,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 1345,
									"end": 1357,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1345,
									"end": 1355,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 1345,
									"end": 1357,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 1358,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1321,
									"end": 1358,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1368,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1035,
									"end": 1059,
									"name": "PUSH",
									"source": 5,
									"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 1392,
									"end": 1402,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1368,
									"end": 1405,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1368,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1205,
									"end": 1412,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1482,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"source": 2,
									"value": "1C"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"source": 2,
									"value": "4552433136353A20696E76616C696420696E7465726661636520696400000000"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1669,
									"end": 1673,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 1680,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 7590,
									"end": 7676,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 7590,
									"end": 7676,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7660,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 7656,
									"end": 7660,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7590,
									"end": 7676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7590,
									"end": 7676,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 590,
									"end": 694,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 590,
									"end": 694,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 677,
									"end": 687,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 590,
									"end": 694,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 590,
									"end": 694,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 6578,
									"end": 6688,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 6578,
									"end": 6688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6656,
									"end": 6681,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6667,
									"end": 6671,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6673,
									"end": 6680,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7088,
									"end": 7094,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7088,
									"end": 7100,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7088,
									"end": 7100,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7088,
									"end": 7100,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7088,
									"end": 7100,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7088,
									"end": 7100,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7088,
									"end": 7100,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7088,
									"end": 7100,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7088,
									"end": 7100,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7088,
									"end": 7100,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7088,
									"end": 7100,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7088,
									"end": 7100,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7088,
									"end": 7121,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 7088,
									"end": 7121,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7113,
									"end": 7120,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7113,
									"end": 7120,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7088,
									"end": 7112,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18446744073709551760"
								},
								{
									"begin": 7088,
									"end": 7112,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 7088,
									"end": 7112,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7088,
									"end": 7112,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7088,
									"end": 7112,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7088,
									"end": 7121,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7088,
									"end": 7121,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7088,
									"end": 7121,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 7088,
									"end": 7121,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 7088,
									"end": 7121,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7084,
									"end": 7193,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7084,
									"end": 7193,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 7084,
									"end": 7193,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7169,
									"end": 7181,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 7169,
									"end": 7179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 7169,
									"end": 7181,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 7169,
									"end": 7181,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 7169,
									"end": 7181,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7142,
									"end": 7182,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7160,
									"end": 7167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7142,
									"end": 7182,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7154,
									"end": 7158,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7142,
									"end": 7182,
									"name": "PUSH",
									"source": 1,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7142,
									"end": 7182,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7142,
									"end": 7182,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7142,
									"end": 7182,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7142,
									"end": 7182,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7142,
									"end": 7182,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7142,
									"end": 7182,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7142,
									"end": 7182,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7142,
									"end": 7182,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7142,
									"end": 7182,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 7015,
									"end": 7199,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7015,
									"end": 7199,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7015,
									"end": 7199,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 4864,
									"end": 5005,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 4864,
									"end": 5005,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4934,
									"end": 4938,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4957,
									"end": 4998,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 4962,
									"end": 4965,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4982,
									"end": 4996,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4982,
									"end": 4996,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4957,
									"end": 4961,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 4957,
									"end": 4998,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 4957,
									"end": 4998,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 4957,
									"end": 4998,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4950,
									"end": 4998,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4950,
									"end": 4998,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4864,
									"end": 5005,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 4864,
									"end": 5005,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4864,
									"end": 5005,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4864,
									"end": 5005,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4864,
									"end": 5005,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4864,
									"end": 5005,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4864,
									"end": 5005,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 1611,
									"end": 2015,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 1611,
									"end": 2015,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1674,
									"end": 1678,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1695,
									"end": 1716,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 1705,
									"end": 1708,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1710,
									"end": 1715,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1695,
									"end": 1704,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 1695,
									"end": 1716,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 1695,
									"end": 1716,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 1695,
									"end": 1716,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1690,
									"end": 2009,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 1690,
									"end": 2009,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1732,
									"end": 1743,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1732,
									"end": 1755,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1912,
									"end": 1930,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1912,
									"end": 1930,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 1890,
									"end": 1909,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1890,
									"end": 1909,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1890,
									"end": 1909,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1890,
									"end": 1902,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1890,
									"end": 1902,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1890,
									"end": 1902,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1890,
									"end": 1909,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1890,
									"end": 1909,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1890,
									"end": 1909,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1890,
									"end": 1909,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1890,
									"end": 1909,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1890,
									"end": 1909,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 1890,
									"end": 1930,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1890,
									"end": 1930,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1890,
									"end": 1930,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1890,
									"end": 1930,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1944,
									"end": 1955,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 1944,
									"end": 1955,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1690,
									"end": 2009,
									"name": "tag",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 1690,
									"end": 2009,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1993,
									"end": 1998,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1986,
									"end": 1998,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 1986,
									"end": 1998,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3776,
									"end": 3903,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 3776,
									"end": 3903,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3849,
									"end": 3853,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3872,
									"end": 3891,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3872,
									"end": 3891,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3872,
									"end": 3891,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3872,
									"end": 3884,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3872,
									"end": 3884,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3872,
									"end": 3884,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3872,
									"end": 3884,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3872,
									"end": 3884,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3872,
									"end": 3891,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3872,
									"end": 3891,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3872,
									"end": 3891,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3872,
									"end": 3891,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3872,
									"end": 3891,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 3872,
									"end": 3891,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 3872,
									"end": 3896,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3872,
									"end": 3896,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3872,
									"end": 3896,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3776,
									"end": 3903,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "tag",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "tag",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 828,
									"end": 3361,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201701cee56c8eb3834a7cc3c90ef19c4244a2482217f7d1b9a55b3f20360f699e64736f6c634300060c0033",
									".code": [
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "731133E9"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "CA15C873"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "E63AB1E9"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "E63AB1E9"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "E985E9C5"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "F242432A"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "F5298ACA"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "CA15C873"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "D5391393"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "D547741F"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "731133E9"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "8456CB59"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "9010D07C"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "91D14854"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "A217FDDF"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "A22CB465"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "2F2FF15D"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "2F2FF15D"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "36568ABE"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "3F4BA83A"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "4E1273F4"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "5C975ABB"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "6B20C454"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "FDD58E"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A7"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "E89341C"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "1F7FDFFA"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "248A9CA3"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "2EB2C2D6"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 828,
											"end": 3361,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "GT",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "GT",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "GT",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2834,
											"end": 3011,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2834,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2834,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2834,
											"end": 3011,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "GT",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "GT",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1116,
											"name": "tag",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 1040,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1040,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 1040,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 1040,
											"end": 1116,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "GT",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 598,
											"end": 910,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "GT",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 598,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 598,
											"end": 910,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "GT",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2454,
											"end": 2625,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2454,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2454,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2454,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2454,
											"end": 2625,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1717,
											"end": 1766,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1717,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1717,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1717,
											"end": 1766,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 929,
											"end": 991,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 929,
											"end": 991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 929,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 929,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 929,
											"end": 991,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1059,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 997,
											"end": 1059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 997,
											"end": 1059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 997,
											"end": 1059,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "GT",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 312,
											"end": 592,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 312,
											"end": 592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 312,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 312,
											"end": 592,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 312,
											"end": 592,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 312,
											"end": 592,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 312,
											"end": 592,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 312,
											"end": 592,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 312,
											"end": 592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 312,
											"end": 592,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 312,
											"end": 592,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 312,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 312,
											"end": 592,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 312,
											"end": 592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 592,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 312,
											"end": 592,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 312,
											"end": 592,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 312,
											"end": 592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 312,
											"end": 592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 312,
											"end": 592,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 312,
											"end": 592,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 312,
											"end": 592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 312,
											"end": 592,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 312,
											"end": 592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 312,
											"end": 592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 312,
											"end": 592,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 312,
											"end": 592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 312,
											"end": 592,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 312,
											"end": 592,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 312,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 312,
											"end": 592,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"source": 6,
											"value": "2B"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH data",
											"source": 6,
											"value": "1F4DE6A436172E7F7B1540476031CB037FC18EDE9CC346A56DA1697CBD352AA9"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"source": 6,
											"value": "2B"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1029,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1068,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2807,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2102,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH",
											"source": 5,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2123,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2123,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2123,
											"end": 2135,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2123,
											"end": 2135,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2123,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2102,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2102,
											"end": 2136,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2102,
											"end": 2136,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2102,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "PUSH",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "PUSH data",
											"source": 5,
											"value": "8955910BE8371DDA281E80FA38D092164791CCBD984AAA07B76276BEF2682E9C"
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "PUSH",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2094,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2219,
											"end": 2221,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2226,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2235,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2241,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2208,
											"end": 2242,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2208,
											"end": 2242,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2208,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1971,
											"end": 2249,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4329,
											"end": 4336,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4355,
											"end": 4367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4367,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4355,
											"end": 4367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4355,
											"end": 4367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4367,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4377,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4355,
											"end": 4377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4377,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4355,
											"end": 4377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4384,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5851,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5826,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5833,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5851,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH data",
											"source": 6,
											"value": "E909E0C9A8F96B4F9AF03B716811ECE20BEB070BE416893ED1D50619B5930807"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5914,
											"end": 5930,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5930,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH data",
											"source": 6,
											"value": "6FAF1C67F278B07C6771DCF4C315A89C21C0EAED11D9AB3D51774DA1CFEF545D"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6011,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6007,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6003,
											"end": 6063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6044,
											"end": 6048,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6050,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 6050,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 6050,
											"end": 6062,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6050,
											"end": 6062,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 6050,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH data",
											"source": 6,
											"value": "70A41C66829F5508884CDA9EF3D2F72551B34F23E4035BE97941681123D2D686"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6150,
											"end": 6166,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 6169,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6150,
											"end": 6181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6150,
											"end": 6181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6192,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 6213,
											"end": 6221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6223,
											"end": 6227,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6229,
											"end": 6231,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6236,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6245,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6251,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6192,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 6192,
											"end": 6252,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6192,
											"end": 6252,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 6192,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6268,
											"end": 6277,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6287,
											"end": 6290,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6287,
											"end": 6297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6283,
											"end": 6284,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6283,
											"end": 6297,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6318,
											"end": 6328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6331,
											"end": 6334,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6336,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6318,
											"end": 6337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6318,
											"end": 6337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6351,
											"end": 6365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6368,
											"end": 6375,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6351,
											"end": 6378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6351,
											"end": 6378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 6456,
											"end": 6462,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH data",
											"source": 6,
											"value": "8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6424,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6425,
											"end": 6427,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6433,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 6415,
											"end": 6438,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6402,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6538,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6538,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6538,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6538,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6594,
											"end": 6600,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6601,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6299,
											"end": 6302,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6299,
											"end": 6302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6659,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6651,
											"end": 6655,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6649,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6661,
											"end": 6664,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6673,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 6685,
											"end": 6760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 6721,
											"end": 6729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 6735,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6737,
											"end": 6739,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6741,
											"end": 6744,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6746,
											"end": 6753,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6755,
											"end": 6759,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6685,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 6685,
											"end": 6760,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6685,
											"end": 6760,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 6685,
											"end": 6760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4725,
											"end": 4731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4725,
											"end": 4747,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4725,
											"end": 4747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4725,
											"end": 4747,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 4717,
											"end": 4762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4749,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4749,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4749,
											"end": 4761,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4717,
											"end": 4762,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 4717,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "PUSH",
											"source": 1,
											"value": "2F"
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "PUSH data",
											"source": 1,
											"value": "BA7116025F1EF6B158A2BD2238E617F30E17C9E456917D901086CA4F8AD2811"
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "PUSH",
											"source": 1,
											"value": "2F"
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4709,
											"end": 4814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4836,
											"end": 4840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4842,
											"end": 4849,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 4825,
											"end": 4850,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4825,
											"end": 4850,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4825,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4857,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5808,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 5905,
											"end": 5915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5905,
											"end": 5917,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5905,
											"end": 5917,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 5905,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5894,
											"end": 5917,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 5901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5894,
											"end": 5917,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 5917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "PUSH",
											"source": 1,
											"value": "2F"
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "PUSH data",
											"source": 1,
											"value": "FB06FA8FF2141E8ED74502F6792273793F25F0E9D3CF15344F3F5A0D4948FD4B"
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "PUSH",
											"source": 1,
											"value": "2F"
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5886,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5980,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 5992,
											"end": 5996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5998,
											"end": 6005,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5980,
											"end": 5991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 5980,
											"end": 6006,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2834,
											"end": 3011,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2834,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2886,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1035,
											"end": 1059,
											"name": "PUSH",
											"source": 5,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 2907,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2907,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2907,
											"end": 2919,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2886,
											"end": 2920,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 2886,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "PUSH",
											"source": 5,
											"value": "3B"
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "PUSH data",
											"source": 5,
											"value": "BE510562063387B7714478BE5EFF01A8C39EFBB1B76D9BE224D34AAC440C9E31"
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "PUSH",
											"source": 5,
											"value": "3B"
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2878,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2994,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 2994,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 2994,
											"end": 3004,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2994,
											"end": 3004,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 2994,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 3011,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3506,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3549,
											"end": 3552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3559,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3530,
											"end": 3538,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3530,
											"end": 3545,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3530,
											"end": 3559,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH data",
											"source": 6,
											"value": "E155F5D69798C6205436A388A4F3A5FD42F54147B40F4D63A2C8071FF8A9FEE5"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3663,
											"end": 3671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3678,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3722,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3729,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3711,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 3782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3758,
											"end": 3783,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3766,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3768,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3758,
											"end": 3783,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3783,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3783,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH data",
											"source": 6,
											"value": "1FBBB69D10332726591DC7EE4A23A94661EDA2BEC5CE6BF93A68249147DC8D9C"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3879,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3883,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3884,
											"end": 3885,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3896,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 3898,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3864,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3866,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3900,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3731,
											"end": 3734,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3731,
											"end": 3734,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3928,
											"end": 3941,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1040,
											"end": 1116,
											"name": "tag",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 1040,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1102,
											"end": 1109,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 1102,
											"end": 1109,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1102,
											"end": 1109,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 1102,
											"end": 1109,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1040,
											"end": 1116,
											"name": "tag",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 1040,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1040,
											"end": 1116,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1040,
											"end": 1116,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 598,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 738,
											"end": 750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 738,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 738,
											"end": 750,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 738,
											"end": 750,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 738,
											"end": 750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 727,
											"end": 750,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 727,
											"end": 734,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 727,
											"end": 750,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 727,
											"end": 750,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 727,
											"end": 793,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 727,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 727,
											"end": 793,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 727,
											"end": 793,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 754,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 771,
											"end": 778,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 780,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 780,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 780,
											"end": 792,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 754,
											"end": 793,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 754,
											"end": 793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 706,
											"end": 860,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 860,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 706,
											"end": 860,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 706,
											"end": 860,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 860,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 706,
											"end": 860,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 860,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "PUSH data",
											"source": 7,
											"value": "394AC917F53B95EE25DB2A5DA5874C5B1F0AF95A4FDF34992FF8B19C458F239A"
										},
										{
											"begin": 706,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 706,
											"end": 860,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 860,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 706,
											"end": 860,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 706,
											"end": 860,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 706,
											"end": 860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 871,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 882,
											"end": 889,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 891,
											"end": 894,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 896,
											"end": 902,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 871,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 871,
											"end": 903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 598,
											"end": 910,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1623,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1729,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH",
											"source": 5,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1750,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1729,
											"end": 1763,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1729,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "PUSH",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "PUSH data",
											"source": 5,
											"value": "8955910BE8371DDA281E80FA38D092164791CCBD984AAA07B76276BEF2682E9C"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "PUSH",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1845,
											"end": 1847,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1855,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1857,
											"end": 1861,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1835,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 1835,
											"end": 1862,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2454,
											"end": 2625,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2454,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2504,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 1035,
											"end": 1059,
											"name": "PUSH",
											"source": 5,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 2525,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2525,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2525,
											"end": 2537,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2504,
											"end": 2538,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2504,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "PUSH data",
											"source": 5,
											"value": "D5053A301ADEC69BF5C7C3782556A354B14090E41FA7CA93C4DE3863FD6A98B9"
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2496,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2610,
											"end": 2618,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4028,
											"end": 4035,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4054,
											"end": 4066,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4066,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4066,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4066,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4054,
											"end": 4066,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4066,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4066,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4054,
											"end": 4066,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4066,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 4054,
											"end": 4084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4078,
											"end": 4083,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 4054,
											"end": 4084,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4054,
											"end": 4084,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 4054,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4084,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3955,
											"end": 4091,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2940,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3044,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 3032,
											"end": 3070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3062,
											"end": 3069,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 3032,
											"end": 3070,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1717,
											"end": 1766,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1717,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1762,
											"end": 1766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1766,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4134,
											"end": 4142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4118,
											"end": 4142,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 4118,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4118,
											"end": 4142,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4142,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4142,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH data",
											"source": 6,
											"value": "DF9806C6DC743DE602E49918A67B580590D69AB768BDB59F977C0A884A91A7C2"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4252,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 4218,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4218,
											"end": 4230,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4218,
											"end": 4230,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 4218,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4282,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "PUSH",
											"source": 6,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3245,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3308,
											"end": 3315,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3346,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3334,
											"end": 3346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3334,
											"end": 3346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3346,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 929,
											"end": 991,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 929,
											"end": 991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH",
											"source": 5,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 929,
											"end": 991,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 929,
											"end": 991,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5091,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5195,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5183,
											"end": 5195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5195,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5183,
											"end": 5195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5195,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5205,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5183,
											"end": 5205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5205,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5175,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 5175,
											"end": 5220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5207,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5207,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5207,
											"end": 5219,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5175,
											"end": 5220,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 5175,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "PUSH data",
											"source": 1,
											"value": "64344570EAB7406CA49D34D38BF2B2496DFDA914405390C5057C8B0AABF798A3"
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5167,
											"end": 5273,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1059,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 997,
											"end": 1059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1035,
											"end": 1059,
											"name": "PUSH",
											"source": 5,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 997,
											"end": 1059,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1059,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4480,
											"end": 4484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4829,
											"end": 4845,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4845,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH data",
											"source": 6,
											"value": "6FAF1C67F278B07C6771DCF4C315A89C21C0EAED11D9AB3D51774DA1CFEF545D"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 4926,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4918,
											"end": 4938,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4922,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4918,
											"end": 4938,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4938,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4942,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4959,
											"end": 4963,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 4965,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4965,
											"end": 4977,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4942,
											"end": 4978,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4942,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH data",
											"source": 6,
											"value": "394AC917F53B95EE25DB2A5DA5874C5B1F0AF95A4FDF34992FF8B19C458F239A"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5072,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5075,
											"end": 5087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 5075,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5075,
											"end": 5087,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5075,
											"end": 5087,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 5075,
											"end": 5087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5087,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 5119,
											"end": 5127,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5129,
											"end": 5133,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5137,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 5157,
											"end": 5159,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 5139,
											"end": 5160,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5139,
											"end": 5160,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 5139,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 5180,
											"end": 5186,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 5162,
											"end": 5187,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5162,
											"end": 5187,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 5162,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5189,
											"end": 5193,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 5098,
											"end": 5194,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5098,
											"end": 5194,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 5098,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 5251,
											"end": 5257,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH data",
											"source": 6,
											"value": "8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5236,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5214,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5304,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5304,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5304,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5362,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5323,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5363,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5363,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5363,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "PUSH",
											"source": 6,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 5436,
											"end": 5504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 5467,
											"end": 5475,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5477,
											"end": 5481,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5483,
											"end": 5485,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5489,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5491,
											"end": 5497,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5503,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5436,
											"end": 5466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 5436,
											"end": 5504,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 312,
											"end": 592,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 312,
											"end": 592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 427,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 427,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 427,
											"end": 439,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 427,
											"end": 439,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 427,
											"end": 439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 416,
											"end": 439,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 416,
											"end": 423,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 416,
											"end": 439,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 416,
											"end": 439,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 416,
											"end": 482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 416,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 416,
											"end": 482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 416,
											"end": 482,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 443,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 460,
											"end": 467,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 469,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 469,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 469,
											"end": 481,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 443,
											"end": 482,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 443,
											"end": 482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 395,
											"end": 549,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 395,
											"end": 549,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 395,
											"end": 549,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 395,
											"end": 549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 395,
											"end": 549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "PUSH",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 395,
											"end": 549,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 395,
											"end": 549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "PUSH data",
											"source": 7,
											"value": "394AC917F53B95EE25DB2A5DA5874C5B1F0AF95A4FDF34992FF8B19C458F239A"
										},
										{
											"begin": 395,
											"end": 549,
											"name": "PUSH",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 395,
											"end": 549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 395,
											"end": 549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 395,
											"end": 549,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 395,
											"end": 549,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 395,
											"end": 549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 560,
											"end": 585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 566,
											"end": 573,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 575,
											"end": 577,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 579,
											"end": 584,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 560,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 560,
											"end": 585,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4864,
											"end": 5005,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 4864,
											"end": 5005,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4934,
											"end": 4938,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4957,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 4962,
											"end": 4965,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4982,
											"end": 4996,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4982,
											"end": 4996,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 4957,
											"end": 4998,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 590,
											"end": 694,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 590,
											"end": 694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 677,
											"end": 687,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 590,
											"end": 694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 694,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8976,
											"end": 9676,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 8976,
											"end": 9676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9110,
											"end": 9126,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9110,
											"end": 9126,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "PUSH data",
											"source": 6,
											"value": "EBF031A1B7EE1D0B3A7752B450A3268E8B6C334561B48C1C0BA0F5BAC05749F2"
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 9102,
											"end": 9164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9196,
											"end": 9203,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9196,
											"end": 9210,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9182,
											"end": 9185,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9182,
											"end": 9192,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9182,
											"end": 9210,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "PUSH data",
											"source": 6,
											"value": "E909E0C9A8F96B4F9AF03B716811ECE20BEB070BE416893ED1D50619B5930807"
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 9174,
											"end": 9255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9266,
											"end": 9282,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9285,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 9285,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 9285,
											"end": 9297,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9285,
											"end": 9297,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 9285,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9266,
											"end": 9297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9266,
											"end": 9297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 9329,
											"end": 9337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9347,
											"end": 9348,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9351,
											"end": 9353,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9355,
											"end": 9358,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9360,
											"end": 9367,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9369,
											"end": 9373,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9308,
											"end": 9328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 9308,
											"end": 9374,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9308,
											"end": 9374,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 9308,
											"end": 9374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9390,
											"end": 9396,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9385,
											"end": 9509,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 9385,
											"end": 9509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9406,
											"end": 9409,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9406,
											"end": 9416,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9402,
											"end": 9403,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9402,
											"end": 9416,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9509,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 9385,
											"end": 9509,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 9476,
											"end": 9485,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9486,
											"end": 9489,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9490,
											"end": 9491,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9486,
											"end": 9492,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9486,
											"end": 9492,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9486,
											"end": 9492,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9486,
											"end": 9492,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9486,
											"end": 9492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 9486,
											"end": 9492,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9486,
											"end": 9492,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 9486,
											"end": 9492,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 9486,
											"end": 9492,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9486,
											"end": 9492,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9486,
											"end": 9492,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9486,
											"end": 9492,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9486,
											"end": 9492,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9486,
											"end": 9492,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9486,
											"end": 9492,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9494,
											"end": 9496,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9476,
											"end": 9497,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9476,
											"end": 9497,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9497,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9497,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9497,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9476,
											"end": 9497,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9497,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9497,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9497,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9497,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9476,
											"end": 9497,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9476,
											"end": 9497,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9497,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9468,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9469,
											"end": 9470,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9471,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9471,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 9461,
											"end": 9471,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9471,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9471,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 9461,
											"end": 9471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9471,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9461,
											"end": 9471,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9471,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9461,
											"end": 9471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9471,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9471,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 9461,
											"end": 9475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9498,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9461,
											"end": 9498,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9461,
											"end": 9498,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9461,
											"end": 9498,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 9461,
											"end": 9498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9446,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9437,
											"end": 9454,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9447,
											"end": 9450,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9451,
											"end": 9452,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9447,
											"end": 9453,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9454,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9454,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9454,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9454,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9454,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9454,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9454,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9454,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9454,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9437,
											"end": 9454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9454,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9454,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9437,
											"end": 9454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9454,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9454,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9437,
											"end": 9458,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9458,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9458,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9437,
											"end": 9498,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9418,
											"end": 9421,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9418,
											"end": 9421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 9385,
											"end": 9509,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9509,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 9385,
											"end": 9509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9562,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9556,
											"end": 9557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9538,
											"end": 9546,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "PUSH",
											"source": 6,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 9564,
											"end": 9567,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9569,
											"end": 9576,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9577,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 9588,
											"end": 9669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 9624,
											"end": 9632,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9642,
											"end": 9643,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9646,
											"end": 9648,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9653,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9655,
											"end": 9662,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9664,
											"end": 9668,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9588,
											"end": 9623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 9588,
											"end": 9669,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9588,
											"end": 9669,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 9588,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9676,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3017,
											"end": 3359,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3017,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3313,
											"end": 3321,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3327,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3331,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3333,
											"end": 3336,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3338,
											"end": 3345,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3351,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 3286,
											"end": 3352,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1832,
											"end": 1839,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1902,
											"end": 1907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1902,
											"end": 1907,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1902,
											"end": 1907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 932,
											"end": 939,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 963,
											"end": 968,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 963,
											"end": 968,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 963,
											"end": 968,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 986,
											"end": 992,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 986,
											"end": 992,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 986,
											"end": 992,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 986,
											"end": 992,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "1B"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13520,
											"end": 13535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 13520,
											"end": 13522,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13520,
											"end": 13533,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13520,
											"end": 13533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 13520,
											"end": 13535,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13520,
											"end": 13535,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 13520,
											"end": 13535,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13516,
											"end": 14048,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13516,
											"end": 14048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 13516,
											"end": 14048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13572,
											"end": 13574,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13555,
											"end": 13598,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13598,
											"name": "PUSH",
											"source": 6,
											"value": "BC197C81"
										},
										{
											"begin": 13599,
											"end": 13607,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 13609,
											"end": 13613,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 13615,
											"end": 13618,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13620,
											"end": 13627,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13629,
											"end": 13633,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13914,
											"end": 13920,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13914,
											"end": 13920,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH data",
											"source": 6,
											"value": "AA752FB1526000E5241602AFFC3D70EF506DA48A27EA57140102B439E655ED"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13683,
											"end": 13747,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13683,
											"end": 13747,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13683,
											"end": 13747,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 13679,
											"end": 13840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 13679,
											"end": 13840,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH data",
											"source": 6,
											"value": "587CCCAD73A80A7F013DB13C596F4FEBC1968DC77E1D3589D5E7A509A3D6503"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13679,
											"end": 13840,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 13679,
											"end": 13840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13635,
											"end": 13854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7015,
											"end": 7199,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 7015,
											"end": 7199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7088,
											"end": 7094,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7088,
											"end": 7100,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7088,
											"end": 7100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7088,
											"end": 7100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7088,
											"end": 7100,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7088,
											"end": 7100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7088,
											"end": 7100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7088,
											"end": 7100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7088,
											"end": 7100,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7088,
											"end": 7100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7088,
											"end": 7100,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7088,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 7088,
											"end": 7121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7113,
											"end": 7120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7088,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 7088,
											"end": 7121,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7088,
											"end": 7121,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 7088,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7193,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 7084,
											"end": 7193,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7169,
											"end": 7181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 7169,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7169,
											"end": 7181,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7169,
											"end": 7181,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 7169,
											"end": 7181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7142,
											"end": 7182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7160,
											"end": 7167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7142,
											"end": 7182,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7154,
											"end": 7158,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7142,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7142,
											"end": 7182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7142,
											"end": 7182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7142,
											"end": 7182,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7199,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7199,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7205,
											"end": 7393,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 7205,
											"end": 7393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7279,
											"end": 7285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7279,
											"end": 7291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7279,
											"end": 7291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7279,
											"end": 7291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7279,
											"end": 7291,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7279,
											"end": 7291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7279,
											"end": 7291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7279,
											"end": 7291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7279,
											"end": 7291,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7279,
											"end": 7291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7279,
											"end": 7291,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7279,
											"end": 7315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 7279,
											"end": 7315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7307,
											"end": 7314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7279,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 7279,
											"end": 7315,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7279,
											"end": 7315,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 7279,
											"end": 7315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7275,
											"end": 7387,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7275,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 7275,
											"end": 7387,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 7363,
											"end": 7373,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7363,
											"end": 7375,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7363,
											"end": 7375,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 7363,
											"end": 7375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7336,
											"end": 7376,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7336,
											"end": 7376,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7348,
											"end": 7352,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7336,
											"end": 7376,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 7336,
											"end": 7376,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7336,
											"end": 7376,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7336,
											"end": 7376,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7336,
											"end": 7376,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7336,
											"end": 7376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7336,
											"end": 7376,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7336,
											"end": 7376,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7336,
											"end": 7376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7336,
											"end": 7376,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7393,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7393,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7393,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2042,
											"end": 2159,
											"name": "tag",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 2042,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1610,
											"end": 1617,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 1610,
											"end": 1617,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1610,
											"end": 1617,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 1610,
											"end": 1617,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 1602,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2100,
											"end": 2107,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 2100,
											"end": 2115,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2100,
											"end": 2115,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2100,
											"end": 2115,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2100,
											"end": 2115,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2100,
											"end": 2115,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "PUSH",
											"source": 14,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2139,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 2139,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 2139,
											"end": 2151,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2139,
											"end": 2151,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 2139,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2130,
											"end": 2152,
											"name": "LOG1",
											"source": 14
										},
										{
											"begin": 2042,
											"end": 2159,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10657,
											"end": 11362,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 10657,
											"end": 11362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10777,
											"end": 10798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10777,
											"end": 10798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "PUSH data",
											"source": 6,
											"value": "87FD4AEE52F5758D127CD9704D5FFEF70F36ED1E87EB99B6F40E37A25C79A76A"
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 10769,
											"end": 10838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10870,
											"end": 10877,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10870,
											"end": 10884,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10859,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10866,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10884,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "PUSH data",
											"source": 6,
											"value": "E909E0C9A8F96B4F9AF03B716811ECE20BEB070BE416893ED1D50619B5930807"
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 10848,
											"end": 10929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10940,
											"end": 10956,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10959,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 10959,
											"end": 10969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 10959,
											"end": 10971,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10959,
											"end": 10971,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 10959,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10940,
											"end": 10971,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10940,
											"end": 10971,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10982,
											"end": 11051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 11003,
											"end": 11011,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11020,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11030,
											"end": 11031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11034,
											"end": 11037,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11039,
											"end": 11046,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10982,
											"end": 11051,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10982,
											"end": 11051,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10982,
											"end": 11051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10982,
											"end": 11051,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10982,
											"end": 11051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10982,
											"end": 11051,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10982,
											"end": 11051,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10982,
											"end": 11051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10982,
											"end": 11051,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10982,
											"end": 11051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10982,
											"end": 11051,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10982,
											"end": 11051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10982,
											"end": 11002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 10982,
											"end": 11051,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10982,
											"end": 11051,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 10982,
											"end": 11051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11067,
											"end": 11073,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11062,
											"end": 11282,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 11062,
											"end": 11282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11083,
											"end": 11086,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11083,
											"end": 11093,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11079,
											"end": 11080,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11079,
											"end": 11093,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11062,
											"end": 11282,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11062,
											"end": 11282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 11062,
											"end": 11282,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 11191,
											"end": 11198,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11199,
											"end": 11200,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11191,
											"end": 11201,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11191,
											"end": 11201,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11191,
											"end": 11201,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11191,
											"end": 11201,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11191,
											"end": 11201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 11191,
											"end": 11201,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11191,
											"end": 11201,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 11191,
											"end": 11201,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 11191,
											"end": 11201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11191,
											"end": 11201,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11191,
											"end": 11201,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11191,
											"end": 11201,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11191,
											"end": 11201,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11191,
											"end": 11201,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11191,
											"end": 11201,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "PUSH data",
											"source": 6,
											"value": "294A5DE01910E2350FF231C633AE2D453ED6B1B72C75506234B7AACE63EAE685"
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11152,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 11143,
											"end": 11160,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11153,
											"end": 11156,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 11157,
											"end": 11158,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11160,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11160,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11143,
											"end": 11160,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11160,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11160,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11143,
											"end": 11160,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11160,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11143,
											"end": 11160,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11169,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11161,
											"end": 11168,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11143,
											"end": 11169,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11143,
											"end": 11169,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11143,
											"end": 11169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11143,
											"end": 11169,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11169,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11143,
											"end": 11169,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11169,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 11143,
											"end": 11173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 11143,
											"end": 11271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11123,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 11114,
											"end": 11131,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11124,
											"end": 11127,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11128,
											"end": 11129,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11124,
											"end": 11130,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11131,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11131,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11131,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11131,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11131,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11131,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11131,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11131,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11131,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11131,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11114,
											"end": 11131,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11131,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11131,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11114,
											"end": 11131,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11131,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11131,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11114,
											"end": 11140,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11140,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11140,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11140,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11140,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11140,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11140,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11140,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11140,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11114,
											"end": 11271,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 11095,
											"end": 11098,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11095,
											"end": 11098,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11062,
											"end": 11282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 11062,
											"end": 11282,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11062,
											"end": 11282,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 11062,
											"end": 11282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11062,
											"end": 11282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11338,
											"end": 11339,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11321,
											"end": 11328,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11311,
											"end": 11319,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "PUSH",
											"source": 6,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 11342,
											"end": 11345,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11354,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11355,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 10657,
											"end": 11362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10657,
											"end": 11362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10657,
											"end": 11362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10657,
											"end": 11362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10657,
											"end": 11362,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8059,
											"end": 8631,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 8059,
											"end": 8631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8173,
											"end": 8194,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8173,
											"end": 8194,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "PUSH data",
											"source": 6,
											"value": "EBF031A1B7EE1D0B3A7752B450A3268E8B6C334561B48C1C0BA0F5BAC05749F2"
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "PUSH",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8243,
											"end": 8259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8262,
											"end": 8274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 8262,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 8262,
											"end": 8274,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8262,
											"end": 8274,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 8262,
											"end": 8274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8243,
											"end": 8274,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8243,
											"end": 8274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8285,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 8306,
											"end": 8314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8328,
											"end": 8335,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8337,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8355,
											"end": 8357,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8337,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 8337,
											"end": 8358,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8285,
											"end": 8392,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 8285,
											"end": 8392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8428,
											"end": 8441,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8441,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8437,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8428,
											"end": 8441,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8428,
											"end": 8441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8441,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8441,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8428,
											"end": 8441,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8441,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8441,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8428,
											"end": 8450,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8450,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8450,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8450,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8450,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8450,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8450,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8450,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8450,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8450,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 8428,
											"end": 8462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8455,
											"end": 8461,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 8428,
											"end": 8462,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8428,
											"end": 8462,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 8428,
											"end": 8462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8416,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8403,
											"end": 8416,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8412,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8403,
											"end": 8416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8403,
											"end": 8416,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8416,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8403,
											"end": 8416,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8416,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8416,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8403,
											"end": 8425,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8425,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8425,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8425,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8425,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8425,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8425,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8425,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8425,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8425,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8425,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8462,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8462,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8462,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8403,
											"end": 8425,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "PUSH",
											"source": 6,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8477,
											"end": 8534,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 8545,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 8576,
											"end": 8584,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8594,
											"end": 8595,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8598,
											"end": 8605,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8607,
											"end": 8609,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8611,
											"end": 8617,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8619,
											"end": 8623,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8545,
											"end": 8575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 8545,
											"end": 8624,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1795,
											"end": 1910,
											"name": "tag",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 1795,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1345,
											"end": 1353,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 1337,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1854,
											"end": 1861,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 1854,
											"end": 1868,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1854,
											"end": 1868,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1854,
											"end": 1868,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1864,
											"end": 1868,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1854,
											"end": 1868,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 1854,
											"end": 1868,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1854,
											"end": 1868,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 1883,
											"end": 1903,
											"name": "PUSH",
											"source": 14,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 1890,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 1890,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 1890,
											"end": 1902,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6085,
											"end": 6232,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 6085,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6159,
											"end": 6166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6201,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 6205,
											"end": 6208,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6217,
											"end": 6222,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6201,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 6201,
											"end": 6223,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5401,
											"end": 5557,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 5401,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5481,
											"end": 5485,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5504,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 5514,
											"end": 5517,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5534,
											"end": 5548,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5534,
											"end": 5548,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5504,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 5504,
											"end": 5550,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5638,
											"end": 5753,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 5638,
											"end": 5753,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5701,
											"end": 5708,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 5735,
											"end": 5738,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5727,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 14193,
											"end": 14194,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14126,
											"end": 14142,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 14126,
											"end": 14142,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14126,
											"end": 14142,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14126,
											"end": 14142,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14154,
											"end": 14195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14154,
											"end": 14195,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14216,
											"end": 14223,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14210,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14211,
											"end": 14212,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14241,
											"end": 14246,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12748,
											"end": 12763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 12748,
											"end": 12750,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12748,
											"end": 12761,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12748,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 12748,
											"end": 12763,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12748,
											"end": 12763,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 12748,
											"end": 12763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12744,
											"end": 13264,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12744,
											"end": 13264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 12744,
											"end": 13264,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12800,
											"end": 12802,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12783,
											"end": 12821,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12821,
											"name": "PUSH",
											"source": 6,
											"value": "F23A6E61"
										},
										{
											"begin": 12822,
											"end": 12830,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 12832,
											"end": 12836,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 12838,
											"end": 12840,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12842,
											"end": 12848,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12850,
											"end": 12854,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "tag",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12904,
											"end": 12963,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12904,
											"end": 12963,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12904,
											"end": 12963,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 12900,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 12900,
											"end": 13056,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH data",
											"source": 6,
											"value": "587CCCAD73A80A7F013DB13C596F4FEBC1968DC77E1D3589D5E7A509A3D6503"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9925,
											"end": 10463,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 9925,
											"end": 10463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10020,
											"end": 10041,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10020,
											"end": 10041,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "PUSH data",
											"source": 6,
											"value": "87FD4AEE52F5758D127CD9704D5FFEF70F36ED1E87EB99B6F40E37A25C79A76A"
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 10012,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10092,
											"end": 10108,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10111,
											"end": 10123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 10111,
											"end": 10121,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 10111,
											"end": 10123,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10111,
											"end": 10123,
											"name": "tag",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 10111,
											"end": 10123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10092,
											"end": 10123,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10092,
											"end": 10123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 10155,
											"end": 10163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10165,
											"end": 10172,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10182,
											"end": 10183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10186,
											"end": 10207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 10204,
											"end": 10206,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10186,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 10186,
											"end": 10207,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10186,
											"end": 10207,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 10186,
											"end": 10207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10209,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 10227,
											"end": 10233,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10209,
											"end": 10226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 10209,
											"end": 10234,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10209,
											"end": 10234,
											"name": "tag",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 10209,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10134,
											"end": 10239,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10239,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10239,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10134,
											"end": 10239,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10134,
											"end": 10239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10239,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10239,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10134,
											"end": 10239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10239,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 10134,
											"end": 10239,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10134,
											"end": 10239,
											"name": "tag",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 10134,
											"end": 10239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 10315,
											"end": 10321,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "PUSH data",
											"source": 6,
											"value": "294A5DE01910E2350FF231C633AE2D453ED6B1B72C75506234B7AACE63EAE685"
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10288,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10275,
											"end": 10288,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10275,
											"end": 10288,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10275,
											"end": 10288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10288,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10275,
											"end": 10288,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10288,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10288,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10275,
											"end": 10297,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10297,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10297,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10297,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10297,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10275,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "tag",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 10275,
											"end": 10383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10250,
											"end": 10263,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10263,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10259,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10250,
											"end": 10263,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10250,
											"end": 10263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10263,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10263,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10250,
											"end": 10263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10263,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10263,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10250,
											"end": 10272,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10272,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10272,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10272,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10272,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10272,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10272,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10272,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10272,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10272,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10272,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10272,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10383,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10383,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10383,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10263,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10263,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10250,
											"end": 10272,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "PUSH",
											"source": 6,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10456,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 9925,
											"end": 10463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9925,
											"end": 10463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9925,
											"end": 10463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9925,
											"end": 10463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9925,
											"end": 10463,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1611,
											"end": 2015,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 1611,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1674,
											"end": 1678,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 1705,
											"end": 1708,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1710,
											"end": 1715,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 1695,
											"end": 1716,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1695,
											"end": 1716,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 1695,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1690,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 1690,
											"end": 2009,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1732,
											"end": 1743,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1912,
											"end": 1930,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1912,
											"end": 1930,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1890,
											"end": 1902,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1890,
											"end": 1902,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1890,
											"end": 1902,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1890,
											"end": 1930,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1890,
											"end": 1930,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1890,
											"end": 1930,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1890,
											"end": 1930,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1944,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 1944,
											"end": 1955,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1690,
											"end": 2009,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 1690,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1993,
											"end": 1998,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 622,
											"end": 1015,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 622,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 865,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 892,
											"end": 900,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 902,
											"end": 906,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 908,
											"end": 910,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 912,
											"end": 915,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 917,
											"end": 924,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 926,
											"end": 930,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 865,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 865,
											"end": 931,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 865,
											"end": 931,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 865,
											"end": 931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 951,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 951,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 951,
											"end": 959,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 951,
											"end": 959,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 951,
											"end": 959,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 950,
											"end": 959,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "PUSH",
											"source": 8,
											"value": "2C"
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "PUSH data",
											"source": 8,
											"value": "382791644F51336ED3667770955AA8EB4EFB839029C48708CADB22E92D271435"
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "PUSH",
											"source": 8,
											"value": "2C"
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "CODECOPY",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 942,
											"end": 1008,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 5173,
											"end": 5320,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 5173,
											"end": 5320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5246,
											"end": 5250,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5269,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 5277,
											"end": 5280,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5297,
											"end": 5311,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5297,
											"end": 5311,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5269,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 5269,
											"end": 5313,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4517,
											"end": 4535,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4517,
											"end": 4535,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4490,
											"end": 4497,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4490,
											"end": 4497,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4517,
											"end": 4543,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "PUSH data",
											"source": 13,
											"value": "45D6834E6193A687012A3AD777F612279E549B6945364D9D2324F48610D3CBB"
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "CODECOPY",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 4509,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4599,
											"end": 4602,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4599,
											"end": 4610,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4599,
											"end": 4610,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4611,
											"end": 4616,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4592,
											"end": 4617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4592,
											"end": 4617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4423,
											"end": 4624,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3776,
											"end": 3903,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 3776,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3849,
											"end": 3853,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3872,
											"end": 3891,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3891,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3891,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3884,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3872,
											"end": 3884,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3884,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3884,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3884,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3891,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3872,
											"end": 3891,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3891,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3872,
											"end": 3891,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3891,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3891,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3903,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3984,
											"end": 4091,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 3984,
											"end": 4091,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3984,
											"end": 4091,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2183,
											"end": 3695,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 2183,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2253,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2405,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2386,
											"end": 2405,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2386,
											"end": 2405,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2386,
											"end": 2398,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2386,
											"end": 2398,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2386,
											"end": 2398,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2386,
											"end": 2405,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2386,
											"end": 2405,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2386,
											"end": 2405,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2405,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2386,
											"end": 2405,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2386,
											"end": 2405,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2420,
											"end": 2435,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2420,
											"end": 2435,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2416,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 2416,
											"end": 3689,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2849,
											"end": 2867,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2849,
											"end": 2867,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2801,
											"end": 2815,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2801,
											"end": 2815,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2801,
											"end": 2815,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2801,
											"end": 2815,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2849,
											"end": 2871,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2849,
											"end": 2871,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2849,
											"end": 2871,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2849,
											"end": 2871,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2777,
											"end": 2798,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2777,
											"end": 2798,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2849,
											"end": 2852,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2849,
											"end": 2852,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2849,
											"end": 2871,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2849,
											"end": 2871,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3131,
											"end": 3153,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3131,
											"end": 3153,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3131,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 3131,
											"end": 3153,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3131,
											"end": 3153,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 3131,
											"end": 3153,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 3131,
											"end": 3153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3131,
											"end": 3153,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3131,
											"end": 3153,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3131,
											"end": 3153,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3131,
											"end": 3153,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3131,
											"end": 3153,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3131,
											"end": 3153,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3131,
											"end": 3153,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3131,
											"end": 3153,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3153,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3153,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3274,
											"end": 3283,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3248,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3256,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3256,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3257,
											"end": 3270,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3271,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3283,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3283,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3283,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3283,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3372,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3372,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3372,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3391,
											"end": 3392,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3349,
											"end": 3361,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3361,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3361,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3372,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3372,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3372,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3372,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3349,
											"end": 3372,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3372,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3392,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3392,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3392,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3392,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3392,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3352,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3349,
											"end": 3352,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3498,
											"end": 3515,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3593,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3602,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3590,
											"end": 3602,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3609,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3603,
											"end": 3608,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3609,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3609,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3590,
											"end": 3609,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3609,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3609,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3609,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3590,
											"end": 3609,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3590,
											"end": 3609,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3590,
											"end": 3609,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3583,
											"end": 3609,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3609,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3583,
											"end": 3609,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3631,
											"end": 3635,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3624,
											"end": 3635,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3624,
											"end": 3635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3624,
											"end": 3635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3624,
											"end": 3635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3624,
											"end": 3635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3624,
											"end": 3635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3624,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 3624,
											"end": 3635,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2416,
											"end": 3689,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 2416,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3673,
											"end": 3678,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3666,
											"end": 3678,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3666,
											"end": 3678,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3666,
											"end": 3678,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3666,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 3666,
											"end": 3678,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 110,
											"end": 216,
											"name": "tag",
											"source": -1,
											"value": "460"
										},
										{
											"begin": 110,
											"end": 216,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 195,
											"end": 198,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": 191,
											"end": 206,
											"name": "SHR",
											"source": -1
										},
										{
											"begin": 191,
											"end": 206,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 163,
											"end": 216,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 224,
											"end": 963,
											"name": "tag",
											"source": -1,
											"value": "337"
										},
										{
											"begin": 224,
											"end": 963,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 224,
											"end": 963,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 301,
											"name": "PUSH",
											"source": -1,
											"value": "44"
										},
										{
											"begin": 279,
											"end": 295,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 276,
											"end": 302,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 273,
											"end": 275,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 273,
											"end": 275,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "463"
										},
										{
											"begin": 273,
											"end": 275,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 305,
											"end": 310,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "217"
										},
										{
											"begin": 305,
											"end": 310,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 273,
											"end": 275,
											"name": "tag",
											"source": -1,
											"value": "463"
										},
										{
											"begin": 273,
											"end": 275,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 339,
											"end": 340,
											"name": "PUSH",
											"source": -1,
											"value": "4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 318,
											"end": 341,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 414,
											"end": 424,
											"name": "PUSH",
											"source": -1,
											"value": "8C379A0"
										},
										{
											"begin": 357,
											"end": 391,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "464"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 382,
											"end": 390,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 357,
											"end": 391,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "460"
										},
										{
											"begin": 357,
											"end": 391,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 357,
											"end": 391,
											"name": "tag",
											"source": -1,
											"value": "464"
										},
										{
											"begin": 357,
											"end": 391,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 406,
											"end": 425,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 396,
											"end": 398,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "465"
										},
										{
											"begin": 396,
											"end": 398,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 429,
											"end": 434,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "217"
										},
										{
											"begin": 429,
											"end": 434,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 396,
											"end": 398,
											"name": "tag",
											"source": -1,
											"value": "465"
										},
										{
											"begin": 396,
											"end": 398,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 460,
											"end": 462,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 463,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 496,
											"end": 512,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 492,
											"end": 516,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 339,
											"end": 340,
											"name": "PUSH",
											"source": -1,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 463,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 468,
											"end": 517,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 543,
											"end": 547,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 537,
											"end": 548,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 624,
											"end": 640,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 624,
											"end": 640,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 617,
											"end": 621,
											"name": "PUSH",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 605,
											"end": 622,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 602,
											"end": 641,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 576,
											"end": 594,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 568,
											"end": 574,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 565,
											"end": 595,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 556,
											"end": 647,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "466"
										},
										{
											"begin": 553,
											"end": 555,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "217"
										},
										{
											"begin": 655,
											"end": 660,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "tag",
											"source": -1,
											"value": "466"
										},
										{
											"begin": 553,
											"end": 555,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 693,
											"end": 699,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 687,
											"end": 691,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 683,
											"end": 700,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 672,
											"end": 700,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 672,
											"end": 700,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 725,
											"end": 728,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 705,
											"end": 729,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 705,
											"end": 729,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 576,
											"end": 594,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 740,
											"end": 746,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 737,
											"end": 767,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 734,
											"end": 736,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 734,
											"end": 736,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "467"
										},
										{
											"begin": 734,
											"end": 736,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 770,
											"end": 775,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 770,
											"end": 775,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 770,
											"end": 775,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 770,
											"end": 775,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 770,
											"end": 775,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "217"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 734,
											"end": 736,
											"name": "tag",
											"source": -1,
											"value": "467"
										},
										{
											"begin": 734,
											"end": 736,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 734,
											"end": 736,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 863,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 841,
											"end": 845,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 837,
											"end": 864,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 807,
											"end": 811,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 814,
											"end": 820,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 802,
											"end": 805,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 794,
											"end": 821,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 794,
											"end": 821,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 829,
											"end": 865,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 826,
											"end": 828,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 826,
											"end": 828,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "468"
										},
										{
											"begin": 826,
											"end": 828,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 868,
											"end": 873,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 868,
											"end": 873,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 868,
											"end": 873,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 868,
											"end": 873,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "217"
										},
										{
											"begin": 868,
											"end": 873,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 826,
											"end": 828,
											"name": "tag",
											"source": -1,
											"value": "468"
										},
										{
											"begin": 826,
											"end": 828,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 89,
											"end": 96,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 73,
											"end": 87,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 69,
											"end": 97,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 892,
											"end": 942,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 892,
											"end": 942,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 807,
											"end": 811,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 892,
											"end": 942,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 460,
											"end": 462,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 943,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 900,
											"end": 903,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 267,
											"end": 963,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 267,
											"end": 963,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									],
									".data": {
										"1F4DE6A436172E7F7B1540476031CB037FC18EDE9CC346A56DA1697CBD352AA9": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
										"1FBBB69D10332726591DC7EE4A23A94661EDA2BEC5CE6BF93A68249147DC8D9C": "455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
										"294A5DE01910E2350FF231C633AE2D453ED6B1B72C75506234B7AACE63EAE685": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"382791644F51336ED3667770955AA8EB4EFB839029C48708CADB22E92D271435": "455243313135355061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564",
										"394AC917F53B95EE25DB2A5DA5874C5B1F0AF95A4FDF34992FF8B19C458F239A": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
										"45D6834E6193A687012A3AD777F612279E549B6945364D9D2324F48610D3CBB": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
										"587CCCAD73A80A7F013DB13C596F4FEBC1968DC77E1D3589D5E7A509A3D6503": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
										"64344570EAB7406CA49D34D38BF2B2496DFDA914405390C5057C8B0AABF798A3": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65",
										"6FAF1C67F278B07C6771DCF4C315A89C21C0EAED11D9AB3D51774DA1CFEF545D": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
										"70A41C66829F5508884CDA9EF3D2F72551B34F23E4035BE97941681123D2D686": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
										"87FD4AEE52F5758D127CD9704D5FFEF70F36ED1E87EB99B6F40E37A25C79A76A": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
										"8955910BE8371DDA281E80FA38D092164791CCBD984AAA07B76276BEF2682E9C": "455243313135355072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
										"8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
										"AA752FB1526000E5241602AFFC3D70EF506DA48A27EA57140102B439E655ED": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
										"BA7116025F1EF6B158A2BD2238E617F30E17C9E456917D901086CA4F8AD2811": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74",
										"BE510562063387B7714478BE5EFF01A8C39EFBB1B76D9BE224D34AAC440C9E31": "455243313135355072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
										"D5053A301ADEC69BF5C7C3782556A354B14090E41FA7CA93C4DE3863FD6A98B9": "455243313135355072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f207061757365",
										"DF9806C6DC743DE602E49918A67B580590D69AB768BDB59F977C0A884A91A7C2": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
										"E155F5D69798C6205436A388A4F3A5FD42F54147B40F4D63A2C8071FF8A9FEE5": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
										"E909E0C9A8F96B4F9AF03B716811ECE20BEB070BE416893ED1D50619B5930807": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
										"EBF031A1B7EE1D0B3A7752B450A3268E8B6C334561B48C1C0BA0F5BAC05749F2": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
										"FB06FA8FF2141E8ED74502F6792273793F25F0E9D3CF15344F3F5A0D4948FD4B": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"PAUSER_ROLE()": "e63ab1e9",
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256,bytes)": "731133e9",
							"mintBatch(address,uint256[],uint256[],bytes)": "1f7fdffa",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"unpause()": "3f4ba83a",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{ERC1155} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE`, and `PAUSER_ROLE` to the account that deploys the contract.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"mint(address,uint256,uint256,bytes)\":{\"details\":\"Creates `amount` new tokens for `to`, of token type `id`. See {ERC1155-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"mintBatch(address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] variant of {mint}.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC1155Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC1155Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":\"ERC1155PresetMinterPauser\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x92f7900d382761c7faefeaced81c6b4f1aae909ed0551803bfe8f27101956360\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407c0864143968542e5cf5aa7556916d2cf292b201e3dadb65662e9a3aa24187\",\"dweb:/ipfs/QmSnXzYAUaGLGr7uofRbgQraTJvatbjQLBPhyYiMd18oUJ\"]},\"contracts/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xb046d18f9d09683ca1c0ed6d80c61da8a8a7d9b30bad70a17b898538683eff74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4728713afa6ae36cc9e92c7107c796a313add3ec20f813be2cde76c814486b2a\",\"dweb:/ipfs/QmUJBTXvYaGDF5PVnd5pUvYerc9DRXvqANDzgCzAp3FkkA\"]},\"contracts/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]},\"contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"contracts/contracts/presets/ERC1155PresetMinterPauser.sol\":{\"keccak256\":\"0x6a025633e41e31e57b8f5ccc147fec17608953db0baf77d0a9baa543244d00eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b55c50a91a8ba6e204c6f5db987a63b3531965b2f3cca3a5512224eec9f3f1ef\",\"dweb:/ipfs/QmdJAKfoMS3RPA1x9M4KRJbQWGgLbZ8giHA4F5eJeGkRJb\"]},\"contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xcb4d489d714897ac44bfd868ac61850cad221177142e2ff7b77474dbbcd8632d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df97fe73917806c90620792dadea71599267ea958e398f746effff25b80cdbfd\",\"dweb:/ipfs/Qmbk2RXS1kctvfQ9N9bHuMU7vLGEjzvUvuDddQmxzhBySr\"]},\"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":{\"keccak256\":\"0x2b30e87a7188124f4a198195f7d660149e1ed59ec587c1122239a266ec173937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://645e8db35eb4e70a94ef52d9d994f7442b550c939df2e860b60939c6cbaea284\",\"dweb:/ipfs/QmZN92zh4xMa1DrxA2223cfWsvrj25GNXjT1DDbDpUzHJ4\"]},\"contracts/contracts/token/ERC1155/ERC1155Pausable.sol\":{\"keccak256\":\"0x382b29d273adccf7a56ba97e9df5738298678a212cb3fadd3d52bd1adc462f4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://633909e3de10ca6d76ee2d5a5eae44e9e6410dbccb13eb5b23d1b1efc327fdd8\",\"dweb:/ipfs/QmdSjUAeYCufQixwruKdhm763DmTVnygZ3aeCZpZ9qCPv1\"]},\"contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea5c8207b135b93afb8cce651a26b1606d0c6e967edc06091e261de7475dace5\",\"dweb:/ipfs/QmXWQHU45hJWmuCiWKjR3tsVh11LwkNEW6fs2Yhvd41Q7a\"]},\"contracts/contracts/token/ERC1155/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xcf122601a1c4816aad0efe37e4c8a9eb744fedd150076363bf54c6641f1332a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cafba550cfbd0fb873282581a4a1186eab3bff1cfd1dcfbf577d4a5b418528ab\",\"dweb:/ipfs/QmdQSLFUmkaf96nzjvJ6eqBcWoJrEd1z36Mh8PPctrbgDb\"]},\"contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x0bc1d0b8fa3b262a6fb98b88dceab8b3348903b95dcc5909b9074fb19a3d2da5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1a2d7b10e484742885d2042f66e8150bfc143a08756a269fb207c4c553b55aa\",\"dweb:/ipfs/Qmbhi8dodhRZS6mqL2T8WfMzmEwPzgSwpuGVHtKF5F6QDp\"]},\"contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"contracts/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]},\"contracts/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 45,
								"contract": "contracts/contracts/presets/ERC1155PresetMinterPauser.sol:ERC1155PresetMinterPauser",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)41_storage)"
							},
							{
								"astId": 319,
								"contract": "contracts/contracts/presets/ERC1155PresetMinterPauser.sol:ERC1155PresetMinterPauser",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes4,t_bool)"
							},
							{
								"astId": 781,
								"contract": "contracts/contracts/presets/ERC1155PresetMinterPauser.sol:ERC1155PresetMinterPauser",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 787,
								"contract": "contracts/contracts/presets/ERC1155PresetMinterPauser.sol:ERC1155PresetMinterPauser",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 789,
								"contract": "contracts/contracts/presets/ERC1155PresetMinterPauser.sol:ERC1155PresetMinterPauser",
								"label": "_uri",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2675,
								"contract": "contracts/contracts/presets/ERC1155PresetMinterPauser.sol:ERC1155PresetMinterPauser",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)41_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)41_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressSet)2453_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 2452,
										"contract": "contracts/contracts/presets/ERC1155PresetMinterPauser.sol:ERC1155PresetMinterPauser",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)2273_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)41_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 38,
										"contract": "contracts/contracts/presets/ERC1155PresetMinterPauser.sol:ERC1155PresetMinterPauser",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)2453_storage"
									},
									{
										"astId": 40,
										"contract": "contracts/contracts/presets/ERC1155PresetMinterPauser.sol:ERC1155PresetMinterPauser",
										"label": "adminRole",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Set)2273_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 2268,
										"contract": "contracts/contracts/presets/ERC1155PresetMinterPauser.sol:ERC1155PresetMinterPauser",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 2272,
										"contract": "contracts/contracts/presets/ERC1155PresetMinterPauser.sol:ERC1155PresetMinterPauser",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":512:14255  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":1966:2318  constructor (string memory uri) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  pop\n    /* \"contracts/contracts/introspection/ERC165.sol\":751:791  _registerInterface(_INTERFACE_ID_ERC165) */\n  tag_13\n  swap2\n  pop\n  shl(0xe0, 0x01ffc9a7)\n    /* \"contracts/contracts/introspection/ERC165.sol\":770:790  _INTERFACE_ID_ERC165 */\n  swap1\n  pop\n    /* \"contracts/contracts/introspection/ERC165.sol\":751:769  _registerInterface */\n  tag_14\n    /* \"contracts/contracts/introspection/ERC165.sol\":751:791  _registerInterface(_INTERFACE_ID_ERC165) */\n  jump\t// in\ntag_13:\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2015:2027  _setURI(uri) */\n  tag_16\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2023:2026  uri */\n  dup2\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2015:2022  _setURI */\n  tag_17\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2015:2027  _setURI(uri) */\n  jump\t// in\ntag_16:\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2116:2157  _registerInterface(_INTERFACE_ID_ERC1155) */\n  tag_18\n  shl(0xe1, 0x6cdb3d13)\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2116:2134  _registerInterface */\n  tag_14\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2116:2157  _registerInterface(_INTERFACE_ID_ERC1155) */\n  jump\t// in\ntag_18:\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2257:2311  _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI) */\n  tag_19\n  shl(0xe2, 0x03a24d07)\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2257:2275  _registerInterface */\n  tag_14\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2257:2311  _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI) */\n  jump\t// in\ntag_19:\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":1966:2318  constructor (string memory uri) public {... */\n  pop\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":512:14255  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_20)\n    /* \"contracts/contracts/introspection/ERC165.sol\":1482:1680  function _registerInterface(bytes4 interfaceId) internal virtual {... */\ntag_14:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"contracts/contracts/introspection/ERC165.sol\":1565:1590  interfaceId != 0xffffffff */\n  dup1\n  dup3\n  and\n  eq\n  iszero\n    /* \"contracts/contracts/introspection/ERC165.sol\":1557:1623  require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\") */\n  tag_22\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1c\n  0x24\n  dup3\n  add\n  mstore\n  0x4552433136353a20696e76616c696420696e7465726661636520696400000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_22:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"contracts/contracts/introspection/ERC165.sol\":1633:1666  _supportedInterfaces[interfaceId] */\n  and\n    /* \"contracts/contracts/introspection/ERC165.sol\":1633:1653  _supportedInterfaces */\n  0x00\n    /* \"contracts/contracts/introspection/ERC165.sol\":1633:1666  _supportedInterfaces[interfaceId] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/contracts/introspection/ERC165.sol\":1633:1673  _supportedInterfaces[interfaceId] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/contracts/introspection/ERC165.sol\":1669:1673  true */\n  0x01\n    /* \"contracts/contracts/introspection/ERC165.sol\":1633:1673  _supportedInterfaces[interfaceId] = true */\n  or\n  swap1\n  sstore\n    /* \"contracts/contracts/introspection/ERC165.sol\":1482:1680  function _registerInterface(bytes4 interfaceId) internal virtual {... */\n  jump\t// out\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":7590:7676  function _setURI(string memory newuri) internal virtual {... */\ntag_17:\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":7656:7669  _uri = newuri */\n  dup1\n  mload\n  tag_24\n  swap1\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":7656:7660  _uri */\n  0x03\n  swap1\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":7656:7669  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  pop\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":7590:7676  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":512:14255  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_25:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_27\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_29)\ntag_27:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_29\n  jumpi\n  swap2\n  dup3\n  add\ntag_28:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_29\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_28)\ntag_29:\n  pop\n  tag_30\n  swap3\n  swap2\n  pop\n  tag_31\n  jump\t// in\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_31:\ntag_32:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_32)\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":512:14255  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2956:3176  function balanceOf(address account, uint256 id) public view override returns (uint256) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_14\n      jump\t// in\n    tag_12:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/contracts/introspection/ERC165.sol\":948:1088  function supportsInterface(bytes4 interfaceId) public view override returns (bool) {... */\n    tag_4:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      tag_17\n      jump\t// in\n    tag_15:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2717:2814  function uri(uint256) external view override returns (string memory) {... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      calldataload\n      tag_20\n      jump\t// in\n    tag_18:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_21:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_23\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_21)\n    tag_23:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_24\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_24:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xa0\n      dup2\n      lt\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      dup2\n      and\n      swap3\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap2\n      dup2\n      add\n      swap1\n      0x60\n      dup2\n      add\n      0x40\n      dup3\n      add\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_36\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_45\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n    tag_37:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      dup2\n      add\n      swap2\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_46:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_48\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_46)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4016:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      iszero\n      iszero\n      tag_51\n      jump\t// in\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4389:4547  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n    tag_9:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_54\n      jump\t// in\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4614:5511  function safeTransferFrom(... */\n    tag_10:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xa0\n      dup2\n      lt\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      dup2\n      and\n      swap3\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap2\n      0x40\n      dup3\n      add\n      calldataload\n      swap2\n      0x60\n      dup2\n      add\n      calldataload\n      swap2\n      dup2\n      add\n      swap1\n      0xa0\n      dup2\n      add\n      0x80\n      dup3\n      add\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_60\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2956:3176  function balanceOf(address account, uint256 id) public view override returns (uint256) {... */\n    tag_14:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3034:3041  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3061:3082  account != address(0) */\n      dup4\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3053:3130  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9\n      0x2b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3147:3160  _balances[id] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3147:3156  _balances */\n      0x01\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3147:3160  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3147:3169  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2956:3176  function balanceOf(address account, uint256 id) public view override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/contracts/introspection/ERC165.sol\":948:1088  function supportsInterface(bytes4 interfaceId) public view override returns (bool) {... */\n    tag_17:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/contracts/introspection/ERC165.sol\":1048:1081  _supportedInterfaces[interfaceId] */\n      and\n        /* \"contracts/contracts/introspection/ERC165.sol\":1025:1029  bool */\n      0x00\n        /* \"contracts/contracts/introspection/ERC165.sol\":1048:1081  _supportedInterfaces[interfaceId] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/contracts/introspection/ERC165.sol\":948:1088  function supportsInterface(bytes4 interfaceId) public view override returns (bool) {... */\n      jump\t// out\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2717:2814  function uri(uint256) external view override returns (string memory) {... */\n    tag_20:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2803:2807  _uri */\n      0x03\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2796:2807  return _uri */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2771:2784  string memory */\n      0x60\n      swap4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2796:2807  return _uri */\n      swap1\n      swap3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2803:2807  _uri */\n      swap1\n      swap2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2796:2807  return _uri */\n      dup4\n      add\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2803:2807  _uri */\n      dup3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2796:2807  return _uri */\n      dup3\n      dup1\n      iszero\n      tag_65\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_66\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_65)\n    tag_66:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_67:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_67\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":2717:2814  function uri(uint256) external view override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n    tag_36:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5837:5844  amounts */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5837:5851  amounts.length */\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5823:5826  ids */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5823:5833  ids.length */\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5823:5851  ids.length == amounts.length */\n      eq\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5815:5896  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5914:5930  to != address(0) */\n      dup5\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5906:5972  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6011:6023  _msgSender() */\n      tag_71\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6011:6021  _msgSender */\n      tag_72\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6011:6023  _msgSender() */\n      jump\t// in\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6003:6023  from == _msgSender() */\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6003:6007  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6003:6023  from == _msgSender() */\n      and\n      eq\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6003:6063  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_74\n      jumpi\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6027:6063  isApprovedForAll(from, _msgSender()) */\n      tag_74\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6044:6048  from */\n      dup6\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6050:6062  _msgSender() */\n      tag_75\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6050:6060  _msgSender */\n      tag_72\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6050:6062  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6027:6043  isApprovedForAll */\n      tag_54\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6027:6063  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_74:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5982:6139  require(... */\n      tag_76\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x32\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686\n      0x32\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6150:6166  address operator */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6169:6181  _msgSender() */\n      tag_77\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6169:6179  _msgSender */\n      tag_72\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6169:6181  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6150:6181  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6192:6252  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_78\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6213:6221  operator */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6223:6227  from */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6229:6231  to */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6233:6236  ids */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6238:6245  amounts */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6247:6251  data */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6192:6212  _beforeTokenTransfer */\n      tag_95\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6192:6252  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6268:6277  uint256 i */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6263:6612  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_80:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6287:6290  ids */\n      dup5\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6287:6297  ids.length */\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6283:6284  i */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6283:6297  i < ids.length */\n      lt\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6263:6612  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_81\n      jumpi\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6318:6328  uint256 id */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6331:6334  ids */\n      dup6\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6335:6336  i */\n      dup3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6331:6337  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_83\n      jumpi\n      invalid\n    tag_83:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6318:6337  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6351:6365  uint256 amount */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6368:6375  amounts */\n      dup6\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6376:6377  i */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6368:6378  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_84\n      jumpi\n      invalid\n    tag_84:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6351:6378  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6415:6538  _balances[id][from].sub(... */\n      tag_85\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6456:6462  amount */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6415:6538  _balances[id][from].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf\n      0x2a\n      swap2\n      codecopy\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6415:6424  _balances */\n      0x01\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6415:6428  _balances[id] */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6425:6427  id */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6415:6428  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6415:6434  _balances[id][from] */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6429:6433  from */\n      dup14\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6415:6434  _balances[id][from] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6415:6438  _balances[id][from].sub */\n      tag_86\n      swap1\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6415:6538  _balances[id][from].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6393:6406  _balances[id] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6393:6402  _balances */\n      0x01\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6393:6406  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6393:6412  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6393:6538  _balances[id][from] = _balances[id][from].sub(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6572:6589  _balances[id][to] */\n      dup11\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6572:6601  _balances[id][to].add(amount) */\n      tag_87\n      swap1\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6594:6600  amount */\n      dup3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6572:6593  _balances[id][to].add */\n      tag_88\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6572:6601  _balances[id][to].add(amount) */\n      jump\t// in\n    tag_87:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6552:6565  _balances[id] */\n      0x00\n      swap3\n      dup4\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6552:6561  _balances */\n      0x01\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6552:6565  _balances[id] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup7\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6552:6569  _balances[id][to] */\n      dup14\n      and\n      dup8\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      swap4\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6552:6601  _balances[id][to] = _balances[id][to].add(amount) */\n      sstore\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6299:6302  ++i */\n      add\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6263:6612  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_80)\n    tag_81:\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6657:6659  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6627:6674  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6651:6655  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6627:6674  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6641:6649  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6627:6674  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6661:6664  ids */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6666:6673  amounts */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6627:6674  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup4\n      dup2\n      sub\n      dup4\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_89:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_89)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup4\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_92:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_94\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_92)\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6685:6760  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_95\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6721:6729  operator */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6731:6735  from */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6737:6739  to */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6741:6744  ids */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6746:6753  amounts */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6755:6759  data */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6685:6720  _doSafeBatchTransferAcceptanceCheck */\n      tag_96\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":6685:6760  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5583:6767  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n    tag_45:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3490:3506  uint256[] memory */\n      0x60\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3549:3552  ids */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3549:3559  ids.length */\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3530:3538  accounts */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3530:3545  accounts.length */\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3530:3559  accounts.length == ids.length */\n      eq\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3522:3605  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3616:3646  uint256[] memory batchBalances */\n      0x60\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3663:3671  accounts */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3663:3678  accounts.length */\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3649:3679  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_100\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_100:\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3616:3679  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3695:3704  uint256 i */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3690:3911  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_101:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3714:3722  accounts */\n      dup5\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3714:3729  accounts.length */\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3710:3711  i */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3710:3729  i < accounts.length */\n      lt\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3690:3911  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_102\n      jumpi\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3781:3782  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3758:3783  accounts[i] != address(0) */\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3758:3766  accounts */\n      dup6\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3767:3768  i */\n      dup3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3758:3769  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_104\n      jumpi\n      invalid\n    tag_104:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3758:3783  accounts[i] != address(0) */\n      and\n      eq\n      iszero\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3750:3837  require(accounts[i] != address(0), \"ERC1155: batch balance query for the zero address\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x31\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c\n      0x31\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3870:3879  _balances */\n      0x01\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3870:3887  _balances[ids[i]] */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3880:3883  ids */\n      dup6\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3884:3885  i */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3880:3886  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_106\n      jumpi\n      invalid\n    tag_106:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3870:3887  _balances[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3870:3900  _balances[ids[i]][accounts[i]] */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3888:3896  accounts */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3897:3898  i */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3888:3899  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_107\n      jumpi\n      invalid\n    tag_107:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3870:3900  _balances[ids[i]][accounts[i]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3851:3864  batchBalances */\n      dup3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3865:3866  i */\n      dup3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3851:3867  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_108\n      jumpi\n      invalid\n    tag_108:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3851:3900  batchBalances[i] = _balances[ids[i]][accounts[i]] */\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3731:3734  ++i */\n      0x01\n      add\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3690:3911  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_101)\n    tag_102:\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3928:3941  batchBalances */\n      swap4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":3333:3948  function balanceOfBatch(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4016:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_51:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4134:4142  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4118:4142  _msgSender() != operator */\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4118:4130  _msgSender() */\n      tag_110\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4118:4128  _msgSender */\n      tag_72\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4118:4130  _msgSender() */\n      jump\t// in\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4118:4142  _msgSender() != operator */\n      and\n      eq\n      iszero\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4110:4188  require(_msgSender() != operator, \"ERC1155: setting approval status for self\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4244:4252  approved */\n      dup1\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4199:4217  _operatorApprovals */\n      0x02\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4199:4231  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4218:4230  _msgSender() */\n      tag_112\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4218:4228  _msgSender */\n      tag_72\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4218:4230  _msgSender() */\n      jump\t// in\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4199:4231  _operatorApprovals[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4199:4241  _operatorApprovals[_msgSender()][operator] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      swap4\n      mstore\n      swap2\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4199:4252  _operatorApprovals[_msgSender()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap3\n      iszero\n      iszero\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4282:4294  _msgSender() */\n      tag_113\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4282:4292  _msgSender */\n      tag_72\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4282:4294  _msgSender() */\n      jump\t// in\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4267:4315  ApprovalForAll(_msgSender(), operator, approved) */\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4306:4314  approved */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4267:4315  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4016:4322  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4389:4547  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n    tag_54:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4503:4530  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4480:4484  bool */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4503:4530  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4503:4521  _operatorApprovals */\n      0x02\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4503:4530  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4503:4540  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4389:4547  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n      jump\t// out\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4614:5511  function safeTransferFrom(... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4829:4845  to != address(0) */\n      dup5\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4821:4887  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4926:4938  _msgSender() */\n      tag_117\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4926:4936  _msgSender */\n      tag_72\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4926:4938  _msgSender() */\n      jump\t// in\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4918:4938  from == _msgSender() */\n      and\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4918:4922  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4918:4938  from == _msgSender() */\n      and\n      eq\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4918:4978  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_119\n      jumpi\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4942:4978  isApprovedForAll(from, _msgSender()) */\n      tag_119\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4959:4963  from */\n      dup6\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4965:4977  _msgSender() */\n      tag_75\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4965:4975  _msgSender */\n      tag_72\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4965:4977  _msgSender() */\n      jump\t// in\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4942:4978  isApprovedForAll(from, _msgSender()) */\n    tag_119:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":4897:5045  require(... */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5056:5072  address operator */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5075:5087  _msgSender() */\n      tag_122\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5075:5085  _msgSender */\n      tag_72\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5075:5087  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5056:5087  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5098:5194  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_123\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5119:5127  operator */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5129:5133  from */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5135:5137  to */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5139:5160  _asSingletonArray(id) */\n      tag_124\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5157:5159  id */\n      dup9\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5139:5156  _asSingletonArray */\n      tag_125\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5139:5160  _asSingletonArray(id) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5162:5187  _asSingletonArray(amount) */\n      tag_126\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5180:5186  amount */\n      dup9\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5162:5179  _asSingletonArray */\n      tag_125\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5162:5187  _asSingletonArray(amount) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5189:5193  data */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5098:5118  _beforeTokenTransfer */\n      tag_95\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5098:5194  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5227:5304  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_127\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5251:5257  amount */\n      dup4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5227:5304  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf\n      0x2a\n      swap2\n      codecopy\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5227:5240  _balances[id] */\n      0x00\n      dup8\n      dup2\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5227:5236  _balances */\n      0x01\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5227:5240  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5227:5246  _balances[id][from] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5227:5304  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      swap1\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5227:5250  _balances[id][from].sub */\n      tag_86\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5227:5304  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      jump\t// in\n    tag_127:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5205:5218  _balances[id] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5205:5214  _balances */\n      0x01\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5205:5218  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5205:5224  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5205:5304  _balances[id][from] = _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5334:5351  _balances[id][to] */\n      dup8\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5334:5363  _balances[id][to].add(amount) */\n      tag_128\n      swap1\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5356:5362  amount */\n      dup5\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5334:5355  _balances[id][to].add */\n      tag_88\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5334:5363  _balances[id][to].add(amount) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5314:5327  _balances[id] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5314:5323  _balances */\n      0x01\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5314:5327  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5314:5331  _balances[id][to] */\n      dup1\n      dup12\n      and\n      dup1\n      dup7\n      mstore\n      swap2\n      dup5\n      mstore\n      swap4\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5314:5363  _balances[id][to] = _balances[id][to].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5379:5425  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      mload\n      dup9\n      dup2\n      mstore\n      swap2\n      dup3\n      add\n      dup8\n      swap1\n      mstore\n      dup1\n      mload\n      dup11\n      dup5\n      and\n      swap4\n      dup7\n      and\n      swap3\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap3\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5436:5504  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_95\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5467:5475  operator */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5477:5481  from */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5483:5485  to */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5487:5489  id */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5491:5497  amount */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5499:5503  data */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5436:5466  _doSafeTransferAcceptanceCheck */\n      tag_130\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":5436:5504  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n        /* \"contracts/contracts/GSN/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_72:\n        /* \"contracts/contracts/GSN/Context.sol\":677:687  msg.sender */\n      caller\n        /* \"contracts/contracts/GSN/Context.sol\":590:694  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_131:\n      swap1\n      jump\t// out\n        /* \"contracts/contracts/math/SafeMath.sol\":1746:1933  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_86:\n        /* \"contracts/contracts/math/SafeMath.sol\":1832:1839  uint256 */\n      0x00\n        /* \"contracts/contracts/math/SafeMath.sol\":1867:1879  errorMessage */\n      dup2\n        /* \"contracts/contracts/math/SafeMath.sol\":1859:1865  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/contracts/math/SafeMath.sol\":1851:1880  require(b <= a, errorMessage) */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_135:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_137\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_135)\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_138\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_138:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n      pop\n      pop\n      pop\n        /* \"contracts/contracts/math/SafeMath.sol\":1902:1907  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/contracts/math/SafeMath.sol\":1746:1933  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/contracts/math/SafeMath.sol\":874:1050  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_88:\n        /* \"contracts/contracts/math/SafeMath.sol\":932:939  uint256 */\n      0x00\n        /* \"contracts/contracts/math/SafeMath.sol\":963:968  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/contracts/math/SafeMath.sol\":986:992  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/contracts/math/SafeMath.sol\":978:1024  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_140\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_140:\n        /* \"contracts/contracts/math/SafeMath.sol\":1042:1043  c */\n      swap4\n        /* \"contracts/contracts/math/SafeMath.sol\":874:1050  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13276:14054  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_96:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13520:13535  to.isContract() */\n      tag_142\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13520:13522  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13520:13533  to.isContract */\n      and\n      tag_143\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13520:13535  to.isContract() */\n      jump\t// in\n    tag_142:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13516:14048  if (to.isContract()) {... */\n      iszero\n      tag_95\n      jumpi\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13572:13574  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13555:13598  IERC1155Receiver(to).onERC1155BatchReceived */\n      and\n      0xbc197c81\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13599:13607  operator */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13609:13613  from */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13615:13618  ids */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13620:13627  amounts */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13629:13633  data */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13555:13634  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup5\n      dup2\n      sub\n      dup5\n      mstore\n      dup8\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_145:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_147\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_145)\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup5\n      dup2\n      sub\n      dup4\n      mstore\n      dup7\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_148:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_150\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_148)\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup5\n      dup2\n      sub\n      dup3\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_151:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_153\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_151)\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_154\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_154:\n      pop\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_156\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      mload\n      0x01\n    tag_156:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13551:14038  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n      tag_158\n      jumpi\n      tag_161\n      tag_162\n      jump\t// in\n    tag_161:\n      dup1\n      tag_163\n      jumpi\n      pop\n      jump(tag_160)\n    tag_163:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13907:13921  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13914:13920  reason */\n      dup5\n      swap4\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13907:13921  revert(reason) */\n      swap2\n      swap3\n      dup4\n      swap3\n      0x44\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_137\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_135)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13551:14038  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n    tag_160:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13961:14023  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed\n      0x34\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13551:14038  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n    tag_158:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13683:13747  response != IERC1155Receiver(to).onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13679:13840  if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {... */\n      tag_169\n      jumpi\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13771:13821  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13679:13840  if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {... */\n    tag_169:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13635:13854  returns (bytes4 response) {... */\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":13276:14054  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14060:14253  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_125:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14179:14195  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14193:14194  1 */\n      0x01\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14179:14195  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14126:14142  uint256[] memory */\n      0x60\n      swap2\n      dup3\n      swap2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14179:14195  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14154:14195  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14216:14223  element */\n      dup3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14205:14210  array */\n      dup2\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14211:14212  0 */\n      0x00\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14205:14213  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_173\n      jumpi\n      invalid\n    tag_173:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14205:14223  array[0] = element */\n      mstore\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14241:14246  array */\n      swap3\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":14060:14253  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12529:13270  function _doSafeTransferAcceptanceCheck(... */\n    tag_130:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12748:12763  to.isContract() */\n      tag_175\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12748:12750  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12748:12761  to.isContract */\n      and\n      tag_143\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12748:12763  to.isContract() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12744:13264  if (to.isContract()) {... */\n      iszero\n      tag_95\n      jumpi\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12800:12802  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12783:12821  IERC1155Receiver(to).onERC1155Received */\n      and\n      0xf23a6e61\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12822:12830  operator */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12832:12836  from */\n      dup8\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12838:12840  id */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12842:12848  amount */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12850:12854  data */\n      dup7\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12783:12855  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_177:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_179\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_177)\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_180\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_180:\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_182\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_183\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_183:\n      pop\n      mload\n      0x01\n    tag_182:\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12779:13254  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_184\n      jumpi\n      tag_161\n      tag_162\n      jump\t// in\n    tag_184:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12904:12963  response != IERC1155Receiver(to).onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12900:13056  if (response != IERC1155Receiver(to).onERC1155Received.selector) {... */\n      tag_169\n      jumpi\n        /* \"contracts/contracts/token/ERC1155/ERC1155.sol\":12987:13037  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/contracts/utils/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n    tag_143:\n        /* \"contracts/contracts/utils/Address.sol\":1078:1098  extcodesize(account) */\n      extcodesize\n        /* \"contracts/contracts/utils/Address.sol\":1116:1124  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"contracts/contracts/utils/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"--CODEGEN--\":110:216   */\n    tag_197:\n        /* \"--CODEGEN--\":195:198   */\n      0xe0\n        /* \"--CODEGEN--\":191:206   */\n      shr\n      swap1\n        /* \"--CODEGEN--\":163:216   */\n      jump\t// out\n        /* \"--CODEGEN--\":224:963   */\n    tag_162:\n      0x00\n        /* \"--CODEGEN--\":297:301   */\n      0x44\n        /* \"--CODEGEN--\":279:295   */\n      returndatasize\n        /* \"--CODEGEN--\":276:302   */\n      lt\n        /* \"--CODEGEN--\":273:275   */\n      iszero\n      tag_200\n      jumpi\n        /* \"--CODEGEN--\":305:310   */\n      jump(tag_131)\n        /* \"--CODEGEN--\":273:275   */\n    tag_200:\n        /* \"--CODEGEN--\":339:340   */\n      0x04\n      dup2\n      dup3\n        /* \"--CODEGEN--\":318:341   */\n      returndatacopy\n        /* \"--CODEGEN--\":414:424   */\n      0x08c379a0\n        /* \"--CODEGEN--\":357:391   */\n      tag_201\n      dup3\n        /* \"--CODEGEN--\":382:390   */\n      mload\n        /* \"--CODEGEN--\":357:391   */\n      tag_197\n      jump\t// in\n    tag_201:\n        /* \"--CODEGEN--\":406:425   */\n      eq\n        /* \"--CODEGEN--\":396:398   */\n      tag_202\n      jumpi\n        /* \"--CODEGEN--\":429:434   */\n      jump(tag_131)\n        /* \"--CODEGEN--\":396:398   */\n    tag_202:\n        /* \"--CODEGEN--\":460:462   */\n      0x40\n        /* \"--CODEGEN--\":454:463   */\n      mload\n        /* \"--CODEGEN--\":496:512   */\n      returndatasize\n      not(0x03)\n        /* \"--CODEGEN--\":492:516   */\n      add\n        /* \"--CODEGEN--\":339:340   */\n      0x04\n        /* \"--CODEGEN--\":454:463   */\n      dup3\n        /* \"--CODEGEN--\":468:517   */\n      returndatacopy\n        /* \"--CODEGEN--\":543:547   */\n      dup1\n        /* \"--CODEGEN--\":537:548   */\n      mload\n        /* \"--CODEGEN--\":624:640   */\n      returndatasize\n        /* \"--CODEGEN--\":576:594   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":624:640   */\n      dup2\n        /* \"--CODEGEN--\":617:621   */\n      0x24\n        /* \"--CODEGEN--\":609:615   */\n      dup5\n        /* \"--CODEGEN--\":605:622   */\n      add\n        /* \"--CODEGEN--\":602:641   */\n      gt\n        /* \"--CODEGEN--\":576:594   */\n      dup2\n        /* \"--CODEGEN--\":568:574   */\n      dup5\n        /* \"--CODEGEN--\":565:595   */\n      gt\n        /* \"--CODEGEN--\":556:647   */\n      or\n        /* \"--CODEGEN--\":553:555   */\n      iszero\n      tag_203\n      jumpi\n        /* \"--CODEGEN--\":655:660   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_131)\n        /* \"--CODEGEN--\":553:555   */\n    tag_203:\n        /* \"--CODEGEN--\":693:699   */\n      dup3\n        /* \"--CODEGEN--\":687:691   */\n      dup5\n        /* \"--CODEGEN--\":683:700   */\n      add\n        /* \"--CODEGEN--\":672:700   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":725:728   */\n      dup3\n        /* \"--CODEGEN--\":719:729   */\n      mload\n        /* \"--CODEGEN--\":705:729   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":576:594   */\n      dup1\n        /* \"--CODEGEN--\":740:746   */\n      dup3\n        /* \"--CODEGEN--\":737:767   */\n      gt\n        /* \"--CODEGEN--\":734:736   */\n      iszero\n      tag_204\n      jumpi\n        /* \"--CODEGEN--\":770:775   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_131)\n        /* \"--CODEGEN--\":734:736   */\n    tag_204:\n      pop\n        /* \"--CODEGEN--\":847:863   */\n      returndatasize\n        /* \"--CODEGEN--\":841:845   */\n      dup4\n        /* \"--CODEGEN--\":837:864   */\n      add\n        /* \"--CODEGEN--\":807:811   */\n      0x20\n        /* \"--CODEGEN--\":814:820   */\n      dup3\n        /* \"--CODEGEN--\":802:805   */\n      dup5\n        /* \"--CODEGEN--\":794:821   */\n      add\n      add\n        /* \"--CODEGEN--\":829:865   */\n      gt\n        /* \"--CODEGEN--\":826:828   */\n      iszero\n      tag_205\n      jumpi\n        /* \"--CODEGEN--\":868:873   */\n      pop\n      pop\n      pop\n      jump(tag_131)\n        /* \"--CODEGEN--\":826:828   */\n    tag_205:\n        /* \"--CODEGEN--\":89:96   */\n      0x1f\n        /* \"--CODEGEN--\":73:87   */\n      add\n      not(0x1f)\n        /* \"--CODEGEN--\":69:97   */\n      and\n        /* \"--CODEGEN--\":892:942   */\n      dup2\n      add\n        /* \"--CODEGEN--\":807:811   */\n      0x20\n        /* \"--CODEGEN--\":892:942   */\n      add\n        /* \"--CODEGEN--\":460:462   */\n      0x40\n        /* \"--CODEGEN--\":881:943   */\n      mstore\n        /* \"--CODEGEN--\":900:903   */\n      swap2\n      pop\n      pop\n        /* \"--CODEGEN--\":267:963   */\n      swap1\n      jump\t// out\n    stop\n    data_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed 455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572\n    data_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503 455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73\n    data_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9 455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373\n    data_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c 455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373\n    data_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a 455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564\n    data_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d 455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686 455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564\n    data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf 455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572\n    data_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2 455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66\n    data_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5 455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368\n    data_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807 455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368\n\n    auxdata: 0xa26469706673582212203a8a637d975a52dc0de0c67e630e5fff16afe0c60d4719eb6531c329c61f172b64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x18F1 CODESIZE SUB DUP1 PUSH3 0x18F1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP PUSH3 0x101 SWAP2 POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL SWAP1 POP PUSH3 0x137 JUMP JUMPDEST PUSH3 0x10C DUP2 PUSH3 0x1BC JUMP JUMPDEST PUSH3 0x11E PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL PUSH3 0x137 JUMP JUMPDEST PUSH3 0x130 PUSH4 0x3A24D07 PUSH1 0xE2 SHL PUSH3 0x137 JUMP JUMPDEST POP PUSH3 0x271 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP1 DUP3 AND EQ ISZERO PUSH3 0x197 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433136353A20696E76616C696420696E7465726661636520696400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 MLOAD PUSH3 0x1D1 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1D5 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x218 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x248 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x248 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x248 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x22B JUMP JUMPDEST POP PUSH3 0x256 SWAP3 SWAP2 POP PUSH3 0x25A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x256 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x25B JUMP JUMPDEST PUSH2 0x1670 DUP1 PUSH3 0x281 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x529 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x661 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x680 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x144 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x189 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x718 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x47D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xA16 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4B9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4A1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xB94 JUMP JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x53F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xCB1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x14BB PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x70C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x70C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1613 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x79D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1540 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A5 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x7D0 JUMPI POP PUSH2 0x7D0 DUP6 PUSH2 0x7CB PUSH2 0xE7C JUMP JUMPDEST PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1565 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x815 PUSH2 0xE7C JUMP JUMPDEST SWAP1 POP PUSH2 0x825 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xA0E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x83F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x857 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x8C4 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1597 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE81 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x8FB SWAP1 DUP3 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP8 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP4 KECCAK256 SSTORE POP ADD PUSH2 0x828 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9AC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x994 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9EB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9D3 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA0E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF79 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xA58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15EA PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xA72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA9C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xB8C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAC2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x14E6 PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB20 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB44 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB79 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xAA2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBA6 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xBEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15C1 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0xBF9 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0xC3D PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1540 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCFE PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xD24 JUMPI POP PUSH2 0xD24 DUP6 PUSH2 0x7CB PUSH2 0xE7C JUMP JUMPDEST PUSH2 0xD5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1517 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD69 PUSH2 0xE7C JUMP JUMPDEST SWAP1 POP PUSH2 0xD89 DUP2 DUP8 DUP8 PUSH2 0xD7A DUP9 PUSH2 0x11F8 JUMP JUMPDEST PUSH2 0xD83 DUP9 PUSH2 0x11F8 JUMP JUMPDEST DUP8 PUSH2 0xA0E JUMP JUMPDEST PUSH2 0xDD0 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1597 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xE07 SWAP1 DUP5 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE DUP1 MLOAD DUP11 DUP5 AND SWAP4 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 PUSH2 0xA0E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x123C JUMP JUMPDEST CALLER JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xF10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEBD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF02 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xF72 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF8B DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13AD JUMP JUMPDEST ISZERO PUSH2 0xA0E JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1019 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1001 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1058 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1040 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1094 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x107C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x10C1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x110B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x11A0 JUMPI PUSH2 0x1117 PUSH2 0x13B9 JUMP JUMPDEST DUP1 PUSH2 0x1122 JUMPI POP PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD DUP5 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xED5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x145F PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x11EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1493 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x122B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x124E DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13AD JUMP JUMPDEST ISZERO PUSH2 0xA0E JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12DD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12C5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x130A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x132D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1352 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x134D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x135E JUMPI PUSH2 0x1117 PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x11EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1493 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x13C9 JUMPI PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY PUSH4 0x8C379A0 PUSH2 0x13DD DUP3 MLOAD PUSH2 0x13B3 JUMP JUMPDEST EQ PUSH2 0x13E7 JUMPI PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1417 JUMPI POP POP POP POP PUSH2 0xE7E JUMP JUMPDEST DUP3 DUP5 ADD SWAP3 POP DUP3 MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1431 JUMPI POP POP POP POP PUSH2 0xE7E JUMP JUMPDEST POP RETURNDATASIZE DUP4 ADD PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x1449 JUMPI POP POP POP PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F206E6F6E20455243313135 CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH19 0x656A656374656420746F6B656E734552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A2062617463682062 PUSH2 0x6C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A2063616C6C657220 PUSH10 0x73206E6F74206F776E65 PUSH19 0x206E6F7220617070726F766564455243313135 CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0x4552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F72207472616E73666572 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH20 0x657474696E6720617070726F76616C2073746174 PUSH22 0x7320666F722073656C66455243313135353A20616363 PUSH16 0x756E747320616E6420696473206C656E PUSH8 0x7468206D69736D61 PUSH21 0x6368455243313135353A2069647320616E6420616D PUSH16 0x756E7473206C656E677468206D69736D PUSH2 0x7463 PUSH9 0xA26469706673582212 KECCAK256 GASPRICE DUP11 PUSH4 0x7D975A52 0xDC 0xD 0xE0 0xC6 PUSH31 0x630E5FFF16AFE0C60D4719EB6531C329C61F172B64736F6C634300060C0033 ",
							"sourceMap": "512:13743:6:-:0;;;1966:352;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1966:352:6;;;;;;;;;;-1:-1:-1;1966:352:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1966:352:6;;-1:-1:-1;751:40:2;;-1:-1:-1;;;;770:20:2;-1:-1:-1;751:18:2;:40::i;:::-;2015:12:6;2023:3;2015:7;:12::i;:::-;2116:41;-1:-1:-1;;;2116:18:6;:41::i;:::-;2257:54;-1:-1:-1;;;2257:18:6;:54::i;:::-;1966:352;512:13743;;1482:198:2;-1:-1:-1;;;;;;1565:25:2;;;;;1557:66;;;;;-1:-1:-1;;;1557:66:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1633:33:2;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1633:40:2;1669:4;1633:40;;;1482:198::o;7590:86:6:-;7656:13;;;;:4;;:13;;;;;:::i;:::-;;7590:86;:::o;512:13743::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;512:13743:6;;;-1:-1:-1;512:13743:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461035a578063a22cb465146104cd578063e985e9c5146104fb578063f242432a1461052957610087565b8062fdd58e1461008c57806301ffc9a7146100ca5780630e89341c146101055780632eb2c2d614610197575b600080fd5b6100b8600480360360408110156100a257600080fd5b506001600160a01b0381351690602001356105f2565b60408051918252519081900360200190f35b6100f1600480360360208110156100e057600080fd5b50356001600160e01b031916610661565b604080519115158252519081900360200190f35b6101226004803603602081101561011b57600080fd5b5035610680565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015c578181015183820152602001610144565b50505050905090810190601f1680156101895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610358600480360360a08110156101ad57600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b8111156101e057600080fd5b8201836020820111156101f257600080fd5b803590602001918460208302840111600160201b8311171561021357600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561026257600080fd5b82018360208201111561027457600080fd5b803590602001918460208302840111600160201b8311171561029557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156102e457600080fd5b8201836020820111156102f657600080fd5b803590602001918460018302840111600160201b8311171561031757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610718945050505050565b005b61047d6004803603604081101561037057600080fd5b810190602081018135600160201b81111561038a57600080fd5b82018360208201111561039c57600080fd5b803590602001918460208302840111600160201b831117156103bd57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561040c57600080fd5b82018360208201111561041e57600080fd5b803590602001918460208302840111600160201b8311171561043f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610a16945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156104b95781810151838201526020016104a1565b505050509050019250505060405180910390f35b610358600480360360408110156104e357600080fd5b506001600160a01b0381351690602001351515610b94565b6100f16004803603604081101561051157600080fd5b506001600160a01b0381358116916020013516610c83565b610358600480360360a081101561053f57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b81111561057e57600080fd5b82018360208201111561059057600080fd5b803590602001918460018302840111600160201b831117156105b157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610cb1945050505050565b60006001600160a01b0383166106395760405162461bcd60e51b815260040180806020018281038252602b8152602001806114bb602b913960400191505060405180910390fd5b5060009081526001602090815260408083206001600160a01b03949094168352929052205490565b6001600160e01b03191660009081526020819052604090205460ff1690565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561070c5780601f106106e15761010080835404028352916020019161070c565b820191906000526020600020905b8154815290600101906020018083116106ef57829003601f168201915b50505050509050919050565b81518351146107585760405162461bcd60e51b81526004018080602001828103825260288152602001806116136028913960400191505060405180910390fd5b6001600160a01b03841661079d5760405162461bcd60e51b81526004018080602001828103825260258152602001806115406025913960400191505060405180910390fd5b6107a5610e7c565b6001600160a01b0316856001600160a01b031614806107d057506107d0856107cb610e7c565b610c83565b61080b5760405162461bcd60e51b81526004018080602001828103825260328152602001806115656032913960400191505060405180910390fd5b6000610815610e7c565b9050610825818787878787610a0e565b60005b845181101561092657600085828151811061083f57fe5b60200260200101519050600085838151811061085757fe5b602002602001015190506108c4816040518060600160405280602a8152602001611597602a91396001600086815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002054610e819092919063ffffffff16565b60008381526001602090815260408083206001600160a01b038e811685529252808320939093558a16815220546108fb9082610f18565b60009283526001602081815260408086206001600160a01b038d168752909152909320555001610828565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156109ac578181015183820152602001610994565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156109eb5781810151838201526020016109d3565b5050505090500194505050505060405180910390a4610a0e818787878787610f79565b505050505050565b60608151835114610a585760405162461bcd60e51b81526004018080602001828103825260298152602001806115ea6029913960400191505060405180910390fd5b6060835167ffffffffffffffff81118015610a7257600080fd5b50604051908082528060200260200182016040528015610a9c578160200160208202803683370190505b50905060005b8451811015610b8c5760006001600160a01b0316858281518110610ac257fe5b60200260200101516001600160a01b03161415610b105760405162461bcd60e51b81526004018080602001828103825260318152602001806114e66031913960400191505060405180910390fd5b60016000858381518110610b2057fe5b602002602001015181526020019081526020016000206000868381518110610b4457fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610b7957fe5b6020908102919091010152600101610aa2565b509392505050565b816001600160a01b0316610ba6610e7c565b6001600160a01b03161415610bec5760405162461bcd60e51b81526004018080602001828103825260298152602001806115c16029913960400191505060405180910390fd5b8060026000610bf9610e7c565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610c3d610e7c565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b6001600160a01b038416610cf65760405162461bcd60e51b81526004018080602001828103825260258152602001806115406025913960400191505060405180910390fd5b610cfe610e7c565b6001600160a01b0316856001600160a01b03161480610d245750610d24856107cb610e7c565b610d5f5760405162461bcd60e51b81526004018080602001828103825260298152602001806115176029913960400191505060405180910390fd5b6000610d69610e7c565b9050610d89818787610d7a886111f8565b610d83886111f8565b87610a0e565b610dd0836040518060600160405280602a8152602001611597602a913960008781526001602090815260408083206001600160a01b038d1684529091529020549190610e81565b60008581526001602090815260408083206001600160a01b038b81168552925280832093909355871681522054610e079084610f18565b60008581526001602090815260408083206001600160a01b03808b168086529184529382902094909455805188815291820187905280518a8416938616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a4610a0e81878787878761123c565b335b90565b60008184841115610f105760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed5578181015183820152602001610ebd565b50505050905090810190601f168015610f025780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610f72576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b610f8b846001600160a01b03166113ad565b15610a0e57836001600160a01b031663bc197c8187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015611019578181015183820152602001611001565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015611058578181015183820152602001611040565b50505050905001848103825285818151815260200191508051906020019080838360005b8381101561109457818101518382015260200161107c565b50505050905090810190601f1680156110c15780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b1580156110e657600080fd5b505af192505050801561110b57506040513d602081101561110657600080fd5b505160015b6111a0576111176113b9565b806111225750611169565b60405162461bcd60e51b8152602060048201818152835160248401528351849391928392604401919085019080838360008315610ed5578181015183820152602001610ebd565b60405162461bcd60e51b815260040180806020018281038252603481526020018061145f6034913960400191505060405180910390fd5b6001600160e01b0319811663bc197c8160e01b146111ef5760405162461bcd60e51b81526004018080602001828103825260288152602001806114936028913960400191505060405180910390fd5b50505050505050565b60408051600180825281830190925260609182919060208083019080368337019050509050828160008151811061122b57fe5b602090810291909101015292915050565b61124e846001600160a01b03166113ad565b15610a0e57836001600160a01b031663f23a6e6187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156112dd5781810151838201526020016112c5565b50505050905090810190601f16801561130a5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561132d57600080fd5b505af192505050801561135257506040513d602081101561134d57600080fd5b505160015b61135e576111176113b9565b6001600160e01b0319811663f23a6e6160e01b146111ef5760405162461bcd60e51b81526004018080602001828103825260288152602001806114936028913960400191505060405180910390fd5b3b151590565b60e01c90565b600060443d10156113c957610e7e565b600481823e6308c379a06113dd82516113b3565b146113e757610e7e565b6040513d600319016004823e80513d67ffffffffffffffff81602484011181841117156114175750505050610e7e565b828401925082519150808211156114315750505050610e7e565b503d8301602082840101111561144957505050610e7e565b601f01601f191681016020016040529150509056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368a26469706673582212203a8a637d975a52dc0de0c67e630e5fff16afe0c60d4719eb6531c329c61f172b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x529 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x661 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x680 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x144 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x189 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x718 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x47D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xA16 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4B9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4A1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xB94 JUMP JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x53F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xCB1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x14BB PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x70C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x70C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1613 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x79D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1540 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A5 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x7D0 JUMPI POP PUSH2 0x7D0 DUP6 PUSH2 0x7CB PUSH2 0xE7C JUMP JUMPDEST PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1565 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x815 PUSH2 0xE7C JUMP JUMPDEST SWAP1 POP PUSH2 0x825 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xA0E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x83F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x857 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x8C4 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1597 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE81 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x8FB SWAP1 DUP3 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP8 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP4 KECCAK256 SSTORE POP ADD PUSH2 0x828 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9AC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x994 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9EB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9D3 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA0E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF79 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xA58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15EA PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xA72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA9C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xB8C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAC2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x14E6 PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB20 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB44 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB79 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xAA2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBA6 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xBEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15C1 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0xBF9 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0xC3D PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1540 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCFE PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xD24 JUMPI POP PUSH2 0xD24 DUP6 PUSH2 0x7CB PUSH2 0xE7C JUMP JUMPDEST PUSH2 0xD5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1517 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD69 PUSH2 0xE7C JUMP JUMPDEST SWAP1 POP PUSH2 0xD89 DUP2 DUP8 DUP8 PUSH2 0xD7A DUP9 PUSH2 0x11F8 JUMP JUMPDEST PUSH2 0xD83 DUP9 PUSH2 0x11F8 JUMP JUMPDEST DUP8 PUSH2 0xA0E JUMP JUMPDEST PUSH2 0xDD0 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1597 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xE07 SWAP1 DUP5 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE DUP1 MLOAD DUP11 DUP5 AND SWAP4 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 PUSH2 0xA0E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x123C JUMP JUMPDEST CALLER JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xF10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEBD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF02 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xF72 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF8B DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13AD JUMP JUMPDEST ISZERO PUSH2 0xA0E JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1019 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1001 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1058 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1040 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1094 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x107C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x10C1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x110B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x11A0 JUMPI PUSH2 0x1117 PUSH2 0x13B9 JUMP JUMPDEST DUP1 PUSH2 0x1122 JUMPI POP PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD DUP5 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xED5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x145F PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x11EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1493 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x122B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x124E DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13AD JUMP JUMPDEST ISZERO PUSH2 0xA0E JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12DD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12C5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x130A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x132D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1352 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x134D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x135E JUMPI PUSH2 0x1117 PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x11EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1493 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x13C9 JUMPI PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY PUSH4 0x8C379A0 PUSH2 0x13DD DUP3 MLOAD PUSH2 0x13B3 JUMP JUMPDEST EQ PUSH2 0x13E7 JUMPI PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1417 JUMPI POP POP POP POP PUSH2 0xE7E JUMP JUMPDEST DUP3 DUP5 ADD SWAP3 POP DUP3 MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1431 JUMPI POP POP POP POP PUSH2 0xE7E JUMP JUMPDEST POP RETURNDATASIZE DUP4 ADD PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x1449 JUMPI POP POP POP PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F206E6F6E20455243313135 CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH19 0x656A656374656420746F6B656E734552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A2062617463682062 PUSH2 0x6C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A2063616C6C657220 PUSH10 0x73206E6F74206F776E65 PUSH19 0x206E6F7220617070726F766564455243313135 CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0x4552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F72207472616E73666572 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH20 0x657474696E6720617070726F76616C2073746174 PUSH22 0x7320666F722073656C66455243313135353A20616363 PUSH16 0x756E747320616E6420696473206C656E PUSH8 0x7468206D69736D61 PUSH21 0x6368455243313135353A2069647320616E6420616D PUSH16 0x756E7473206C656E677468206D69736D PUSH2 0x7463 PUSH9 0xA26469706673582212 KECCAK256 GASPRICE DUP11 PUSH4 0x7D975A52 0xDC 0xD 0xE0 0xC6 PUSH31 0x630E5FFF16AFE0C60D4719EB6531C329C61F172B64736F6C634300060C0033 ",
							"sourceMap": "512:13743:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2956:220;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2956:220:6;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;948:140:2;;;;;;;;;;;;;;;;-1:-1:-1;948:140:2;-1:-1:-1;;;;;;948:140:2;;:::i;:::-;;;;;;;;;;;;;;;;;;2717:97:6;;;;;;;;;;;;;;;;-1:-1:-1;2717:97:6;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5583:1184;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5583:1184:6;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:1184:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:1184:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5583:1184:6;;;;;;;;-1:-1:-1;5583:1184:6;;-1:-1:-1;;;;;5583:1184:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:1184:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5583:1184:6;;;;;;;;-1:-1:-1;5583:1184:6;;-1:-1:-1;;;;;5583:1184:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:1184:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5583:1184:6;;-1:-1:-1;5583:1184:6;;-1:-1:-1;;;;;5583:1184:6:i;:::-;;3333:615;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3333:615:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3333:615:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3333:615:6;;;;;;;;-1:-1:-1;3333:615:6;;-1:-1:-1;;;;;3333:615:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3333:615:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3333:615:6;;-1:-1:-1;3333:615:6;;-1:-1:-1;;;;;3333:615:6:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4016:306;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4016:306:6;;;;;;;;;;:::i;4389:158::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4389:158:6;;;;;;;;;;:::i;4614:897::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4614:897:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4614:897:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4614:897:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4614:897:6;;-1:-1:-1;4614:897:6;;-1:-1:-1;;;;;4614:897:6:i;2956:220::-;3034:7;-1:-1:-1;;;;;3061:21:6;;3053:77;;;;-1:-1:-1;;;3053:77:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3147:13:6;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;3147:22:6;;;;;;;;;;;;2956:220::o;948:140:2:-;-1:-1:-1;;;;;;1048:33:2;1025:4;1048:33;;;;;;;;;;;;;;948:140::o;2717:97:6:-;2803:4;2796:11;;;;;;;;-1:-1:-1;;2796:11:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2771:13;;2796:11;;2803:4;;2796:11;;2803:4;2796:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2717:97;;;:::o;5583:1184::-;5837:7;:14;5823:3;:10;:28;5815:81;;;;-1:-1:-1;;;5815:81:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5914:16:6;;5906:66;;;;-1:-1:-1;;;5906:66:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6011:12;:10;:12::i;:::-;-1:-1:-1;;;;;6003:20:6;:4;-1:-1:-1;;;;;6003:20:6;;:60;;;;6027:36;6044:4;6050:12;:10;:12::i;:::-;6027:16;:36::i;:::-;5982:157;;;;-1:-1:-1;;;5982:157:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6150:16;6169:12;:10;:12::i;:::-;6150:31;;6192:60;6213:8;6223:4;6229:2;6233:3;6238:7;6247:4;6192:20;:60::i;:::-;6268:9;6263:349;6287:3;:10;6283:1;:14;6263:349;;;6318:10;6331:3;6335:1;6331:6;;;;;;;;;;;;;;6318:19;;6351:14;6368:7;6376:1;6368:10;;;;;;;;;;;;;;6351:27;;6415:123;6456:6;6415:123;;;;;;;;;;;;;;;;;:9;:13;6425:2;6415:13;;;;;;;;;;;:19;6429:4;-1:-1:-1;;;;;6415:19:6;-1:-1:-1;;;;;6415:19:6;;;;;;;;;;;;;:23;;:123;;;;;:::i;:::-;6393:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6393:19:6;;;;;;;;;;:145;;;;6572:17;;;;;;:29;;6594:6;6572:21;:29::i;:::-;6552:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6552:17:6;;;;;;;;;;:49;-1:-1:-1;6299:3:6;6263:349;;;;6657:2;-1:-1:-1;;;;;6627:47:6;6651:4;-1:-1:-1;;;;;6627:47:6;6641:8;-1:-1:-1;;;;;6627:47:6;;6661:3;6666:7;6627:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6685:75;6721:8;6731:4;6737:2;6741:3;6746:7;6755:4;6685:35;:75::i;:::-;5583:1184;;;;;;:::o;3333:615::-;3490:16;3549:3;:10;3530:8;:15;:29;3522:83;;;;-1:-1:-1;;;3522:83:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3616:30;3663:8;:15;3649:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3649:30:6;;3616:63;;3695:9;3690:221;3714:8;:15;3710:1;:19;3690:221;;;3781:1;-1:-1:-1;;;;;3758:25:6;:8;3767:1;3758:11;;;;;;;;;;;;;;-1:-1:-1;;;;;3758:25:6;;;3750:87;;;;-1:-1:-1;;;3750:87:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3870:9;:17;3880:3;3884:1;3880:6;;;;;;;;;;;;;;3870:17;;;;;;;;;;;:30;3888:8;3897:1;3888:11;;;;;;;;;;;;;;-1:-1:-1;;;;;3870:30:6;-1:-1:-1;;;;;3870:30:6;;;;;;;;;;;;;3851:13;3865:1;3851:16;;;;;;;;;;;;;;;;;:49;3731:3;;3690:221;;;-1:-1:-1;3928:13:6;3333:615;-1:-1:-1;;;3333:615:6:o;4016:306::-;4134:8;-1:-1:-1;;;;;4118:24:6;:12;:10;:12::i;:::-;-1:-1:-1;;;;;4118:24:6;;;4110:78;;;;-1:-1:-1;;;4110:78:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:8;4199:18;:32;4218:12;:10;:12::i;:::-;-1:-1:-1;;;;;4199:32:6;;;;;;;;;;;;;;;;;-1:-1:-1;4199:32:6;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;4199:53:6;;;;;;;;;;;4282:12;:10;:12::i;:::-;-1:-1:-1;;;;;4267:48:6;;4306:8;4267:48;;;;;;;;;;;;;;;;;;;;4016:306;;:::o;4389:158::-;-1:-1:-1;;;;;4503:27:6;;;4480:4;4503:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;4389:158::o;4614:897::-;-1:-1:-1;;;;;4829:16:6;;4821:66;;;;-1:-1:-1;;;4821:66:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4926:12;:10;:12::i;:::-;-1:-1:-1;;;;;4918:20:6;:4;-1:-1:-1;;;;;4918:20:6;;:60;;;;4942:36;4959:4;4965:12;:10;:12::i;4942:36::-;4897:148;;;;-1:-1:-1;;;4897:148:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5056:16;5075:12;:10;:12::i;:::-;5056:31;;5098:96;5119:8;5129:4;5135:2;5139:21;5157:2;5139:17;:21::i;:::-;5162:25;5180:6;5162:17;:25::i;:::-;5189:4;5098:20;:96::i;:::-;5227:77;5251:6;5227:77;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5227:19:6;;;;;;;;;;;:77;:23;:77::i;:::-;5205:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5205:19:6;;;;;;;;;;:99;;;;5334:17;;;;;;:29;;5356:6;5334:21;:29::i;:::-;5314:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5314:17:6;;;;;;;;;;;;;:49;;;;5379:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5436:68;5467:8;5477:4;5483:2;5487;5491:6;5499:4;5436:30;:68::i;590:104:0:-;677:10;590:104;;:::o;1746:187:4:-;1832:7;1867:12;1859:6;;;;1851:29;;;;-1:-1:-1;;;1851:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1902:5:4;;;1746:187::o;874:176::-;932:7;963:5;;;986:6;;;;978:46;;;;;-1:-1:-1;;;978:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:1;874:176;-1:-1:-1;;;874:176:4:o;13276:778:6:-;13520:15;:2;-1:-1:-1;;;;;13520:13:6;;:15::i;:::-;13516:532;;;13572:2;-1:-1:-1;;;;;13555:43:6;;13599:8;13609:4;13615:3;13620:7;13629:4;13555:79;;;;;;;;;;;;;-1:-1:-1;;;;;13555:79:6;;;;;;-1:-1:-1;;;;;13555:79:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13555:79:6;;;13551:487;;;;:::i;:::-;;;;;;;;13907:14;;-1:-1:-1;;;13907:14:6;;;;;;;;;;;;;;;;;13914:6;;13907:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13551:487;13961:62;;-1:-1:-1;;;13961:62:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13551:487;-1:-1:-1;;;;;;13683:64:6;;-1:-1:-1;;;13683:64:6;13679:161;;13771:50;;-1:-1:-1;;;13771:50:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13679:161;13635:219;13276:778;;;;;;:::o;14060:193::-;14179:16;;;14193:1;14179:16;;;;;;;;;14126;;;;14179;;;;;;;;;;;;-1:-1:-1;14179:16:6;14154:41;;14216:7;14205:5;14211:1;14205:8;;;;;;;;;;;;;;;;;:18;14241:5;14060:193;-1:-1:-1;;14060:193:6:o;12529:741::-;12748:15;:2;-1:-1:-1;;;;;12748:13:6;;:15::i;:::-;12744:520;;;12800:2;-1:-1:-1;;;;;12783:38:6;;12822:8;12832:4;12838:2;12842:6;12850:4;12783:72;;;;;;;;;;;;;-1:-1:-1;;;;;12783:72:6;;;;;;-1:-1:-1;;;;;12783:72:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12783:72:6;;;12779:475;;;;:::i;:::-;-1:-1:-1;;;;;;12904:59:6;;-1:-1:-1;;;12904:59:6;12900:156;;12987:50;;-1:-1:-1;;;12987:50:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;718:413:12;1078:20;1116:8;;;718:413::o;110:106:-1:-;195:3;191:15;;163:53::o;224:739::-;;297:4;279:16;276:26;273:2;;;305:5;;273:2;339:1;-1:-1;;318:23;414:10;357:34;-1:-1;382:8;357:34;:::i;:::-;406:19;396:2;;429:5;;396:2;460;454:9;496:16;-1:-1;;492:24;339:1;454:9;468:49;543:4;537:11;624:16;576:18;624:16;617:4;609:6;605:17;602:39;576:18;568:6;565:30;556:91;553:2;;;655:5;;;;;;553:2;693:6;687:4;683:17;672:28;;725:3;719:10;705:24;;576:18;740:6;737:30;734:2;;;770:5;;;;;;734:2;;847:16;841:4;837:27;807:4;814:6;802:3;794:27;;829:36;826:2;;;868:5;;;;;826:2;89:7;73:14;-1:-1;;69:28;892:50;;807:4;892:50;460:2;881:62;900:3;-1:-1;;267:696;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1148800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "1306",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "1186",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "100000000"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "tag",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "100000000"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "tag",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 751,
									"end": 791,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 751,
									"end": 791,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1FFC9A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 770,
									"end": 790,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 751,
									"end": 769,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 751,
									"end": 791,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 751,
									"end": 791,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 751,
									"end": 791,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2023,
									"end": 2026,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2015,
									"end": 2022,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2015,
									"end": 2027,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2116,
									"end": 2157,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6CDB3D13"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2116,
									"end": 2134,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2116,
									"end": 2157,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2116,
									"end": 2157,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 2116,
									"end": 2157,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2257,
									"end": 2311,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3A24D07"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2257,
									"end": 2275,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2257,
									"end": 2311,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2257,
									"end": 2311,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 2257,
									"end": 2311,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1966,
									"end": 2318,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1482,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1565,
									"end": 1590,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"source": 2,
									"value": "1C"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"source": 2,
									"value": "4552433136353A20696E76616C696420696E7465726661636520696400000000"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "PUSH",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1557,
									"end": 1623,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1666,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1669,
									"end": 1673,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1633,
									"end": 1673,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 1680,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 7590,
									"end": 7676,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 7590,
									"end": 7676,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7660,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 7656,
									"end": 7660,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7656,
									"end": 7669,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7590,
									"end": 7676,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7590,
									"end": 7676,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 14255,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a8a637d975a52dc0de0c67e630e5fff16afe0c60d4719eb6531c329c61f172b64736f6c634300060c0033",
									".code": [
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"source": 6,
											"value": "4E1273F4"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"source": 6,
											"value": "4E1273F4"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"source": 6,
											"value": "A22CB465"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"source": 6,
											"value": "E985E9C5"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"source": 6,
											"value": "F242432A"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"source": 6,
											"value": "FDD58E"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A7"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"source": 6,
											"value": "E89341C"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"source": 6,
											"value": "2EB2C2D6"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 14255,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "GT",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "GT",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "GT",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3041,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"source": 6,
											"value": "2B"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH data",
											"source": 6,
											"value": "1F4DE6A436172E7F7B1540476031CB037FC18EDE9CC346A56DA1697CBD352AA9"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"source": 6,
											"value": "2B"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3053,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3156,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 3176,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1029,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 948,
											"end": 1088,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2807,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2796,
											"end": 2807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2814,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5844,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5851,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5826,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5833,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5851,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH data",
											"source": 6,
											"value": "E909E0C9A8F96B4F9AF03B716811ECE20BEB070BE416893ED1D50619B5930807"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5815,
											"end": 5896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5914,
											"end": 5930,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5914,
											"end": 5930,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH data",
											"source": 6,
											"value": "6FAF1C67F278B07C6771DCF4C315A89C21C0EAED11D9AB3D51774DA1CFEF545D"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 5906,
											"end": 5972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 6011,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 6011,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6007,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6023,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6063,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 6003,
											"end": 6063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 6044,
											"end": 6048,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6050,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 6050,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 6050,
											"end": 6062,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6050,
											"end": 6062,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 6050,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 6027,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH data",
											"source": 6,
											"value": "70A41C66829F5508884CDA9EF3D2F72551B34F23E4035BE97941681123D2D686"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 5982,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6150,
											"end": 6166,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 6169,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 6169,
											"end": 6181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6150,
											"end": 6181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6150,
											"end": 6181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6192,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 6213,
											"end": 6221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6223,
											"end": 6227,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6229,
											"end": 6231,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6236,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6245,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6251,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6192,
											"end": 6212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 6192,
											"end": 6252,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6192,
											"end": 6252,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 6192,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6268,
											"end": 6277,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6287,
											"end": 6290,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6287,
											"end": 6297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6283,
											"end": 6284,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6283,
											"end": 6297,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6318,
											"end": 6328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6331,
											"end": 6334,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6335,
											"end": 6336,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6318,
											"end": 6337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6318,
											"end": 6337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6351,
											"end": 6365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6368,
											"end": 6375,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6368,
											"end": 6378,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6351,
											"end": 6378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6351,
											"end": 6378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 6456,
											"end": 6462,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH data",
											"source": 6,
											"value": "8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6424,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6425,
											"end": 6427,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6433,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 6415,
											"end": 6438,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 6415,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6402,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6406,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6412,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6538,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6538,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6538,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6538,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6589,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6594,
											"end": 6600,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6572,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 6572,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6565,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6569,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6601,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6299,
											"end": 6302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6612,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6657,
											"end": 6659,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6651,
											"end": 6655,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6649,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6661,
											"end": 6664,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6673,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6674,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 6685,
											"end": 6760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 6721,
											"end": 6729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 6735,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6737,
											"end": 6739,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6741,
											"end": 6744,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6746,
											"end": 6753,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6755,
											"end": 6759,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6685,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 6685,
											"end": 6760,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6685,
											"end": 6760,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 6685,
											"end": 6760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 6767,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3506,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3549,
											"end": 3552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3559,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3530,
											"end": 3538,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3530,
											"end": 3545,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3530,
											"end": 3559,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH data",
											"source": 6,
											"value": "E155F5D69798C6205436A388A4F3A5FD42F54147B40F4D63A2C8071FF8A9FEE5"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3522,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3646,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3663,
											"end": 3671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3678,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3722,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3729,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3711,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3729,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3781,
											"end": 3782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3758,
											"end": 3783,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3766,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3768,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3769,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3758,
											"end": 3783,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3783,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3783,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH data",
											"source": 6,
											"value": "1FBBB69D10332726591DC7EE4A23A94661EDA2BEC5CE6BF93A68249147DC8D9C"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3750,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3879,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3883,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3884,
											"end": 3885,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3880,
											"end": 3886,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3887,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3896,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3897,
											"end": 3898,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3870,
											"end": 3900,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3864,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3866,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3900,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3731,
											"end": 3734,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3731,
											"end": 3734,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3690,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3928,
											"end": 3941,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3333,
											"end": 3948,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4134,
											"end": 4142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4118,
											"end": 4142,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4118,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4118,
											"end": 4142,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4142,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4142,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH data",
											"source": 6,
											"value": "DF9806C6DC743DE602E49918A67B580590D69AB768BDB59F977C0A884A91A7C2"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4110,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4252,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4218,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4218,
											"end": 4230,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4218,
											"end": 4230,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4218,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4231,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4241,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4252,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4282,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4282,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "PUSH",
											"source": 6,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 4306,
											"end": 4314,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4315,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4016,
											"end": 4322,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4480,
											"end": 4484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4530,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4503,
											"end": 4540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4547,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4614,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4829,
											"end": 4845,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4845,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH data",
											"source": 6,
											"value": "6FAF1C67F278B07C6771DCF4C315A89C21C0EAED11D9AB3D51774DA1CFEF545D"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4821,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4926,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4926,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4918,
											"end": 4938,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4922,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4918,
											"end": 4938,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4938,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4978,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4942,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4959,
											"end": 4963,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4965,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 4965,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 4965,
											"end": 4977,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4942,
											"end": 4978,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4942,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH data",
											"source": 6,
											"value": "394AC917F53B95EE25DB2A5DA5874C5B1F0AF95A4FDF34992FF8B19C458F239A"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4897,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5072,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5075,
											"end": 5087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5075,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 5075,
											"end": 5087,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5075,
											"end": 5087,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5075,
											"end": 5087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5087,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5056,
											"end": 5087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5119,
											"end": 5127,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5129,
											"end": 5133,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5137,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5157,
											"end": 5159,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5139,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5139,
											"end": 5160,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5139,
											"end": 5160,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5139,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5180,
											"end": 5186,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 5179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5162,
											"end": 5187,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5162,
											"end": 5187,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5162,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5189,
											"end": 5193,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 5098,
											"end": 5194,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5098,
											"end": 5194,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5098,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5251,
											"end": 5257,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH data",
											"source": 6,
											"value": "8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "PUSH",
											"source": 6,
											"value": "2A"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5236,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5240,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5227,
											"end": 5304,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5214,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5218,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5224,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5304,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5304,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5304,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5362,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5334,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5323,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5327,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5331,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5363,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5363,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5363,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "PUSH",
											"source": 6,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5425,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 5436,
											"end": 5504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 5467,
											"end": 5475,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5477,
											"end": 5481,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5483,
											"end": 5485,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5489,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5491,
											"end": 5497,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5503,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5436,
											"end": 5466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5436,
											"end": 5504,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 590,
											"end": 694,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 590,
											"end": 694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 677,
											"end": 687,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 590,
											"end": 694,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 590,
											"end": 694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 590,
											"end": 694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 590,
											"end": 694,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1832,
											"end": 1839,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1902,
											"end": 1907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1902,
											"end": 1907,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1902,
											"end": 1907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1933,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 932,
											"end": 939,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 963,
											"end": 968,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 963,
											"end": 968,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 963,
											"end": 968,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 986,
											"end": 992,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 986,
											"end": 992,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 986,
											"end": 992,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 986,
											"end": 992,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "1B"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 978,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1043,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 874,
											"end": 1050,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13520,
											"end": 13535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 13520,
											"end": 13522,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13520,
											"end": 13533,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13520,
											"end": 13533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 13520,
											"end": 13535,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13520,
											"end": 13535,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 13520,
											"end": 13535,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13516,
											"end": 14048,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13516,
											"end": 14048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 13516,
											"end": 14048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13572,
											"end": 13574,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13555,
											"end": 13598,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13598,
											"name": "PUSH",
											"source": 6,
											"value": "BC197C81"
										},
										{
											"begin": 13599,
											"end": 13607,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 13609,
											"end": 13613,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 13615,
											"end": 13618,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13620,
											"end": 13627,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13629,
											"end": 13633,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 13555,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13914,
											"end": 13920,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13914,
											"end": 13920,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 13907,
											"end": 13921,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH data",
											"source": 6,
											"value": "AA752FB1526000E5241602AFFC3D70EF506DA48A27EA57140102B439E655ED"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13961,
											"end": 14023,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 13551,
											"end": 14038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13683,
											"end": 13747,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13683,
											"end": 13747,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13683,
											"end": 13747,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 13679,
											"end": 13840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 13679,
											"end": 13840,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH data",
											"source": 6,
											"value": "587CCCAD73A80A7F013DB13C596F4FEBC1968DC77E1D3589D5E7A509A3D6503"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13771,
											"end": 13821,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13679,
											"end": 13840,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 13679,
											"end": 13840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13635,
											"end": 13854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13276,
											"end": 14054,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 14193,
											"end": 14194,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14126,
											"end": 14142,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 14126,
											"end": 14142,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14126,
											"end": 14142,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14126,
											"end": 14142,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14179,
											"end": 14195,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14154,
											"end": 14195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14154,
											"end": 14195,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14216,
											"end": 14223,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14210,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14211,
											"end": 14212,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14213,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14241,
											"end": 14246,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14060,
											"end": 14253,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 12529,
											"end": 13270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12748,
											"end": 12763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 12748,
											"end": 12750,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12748,
											"end": 12761,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12748,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 12748,
											"end": 12763,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12748,
											"end": 12763,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 12748,
											"end": 12763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12744,
											"end": 13264,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12744,
											"end": 13264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 12744,
											"end": 13264,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12800,
											"end": 12802,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12783,
											"end": 12821,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12821,
											"name": "PUSH",
											"source": 6,
											"value": "F23A6E61"
										},
										{
											"begin": 12822,
											"end": 12830,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 12832,
											"end": 12836,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 12838,
											"end": 12840,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12842,
											"end": 12848,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12850,
											"end": 12854,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 12783,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 12779,
											"end": 13254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12904,
											"end": 12963,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12904,
											"end": 12963,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12904,
											"end": 12963,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 12900,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 12900,
											"end": 13056,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH data",
											"source": 6,
											"value": "587CCCAD73A80A7F013DB13C596F4FEBC1968DC77E1D3589D5E7A509A3D6503"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 110,
											"end": 216,
											"name": "tag",
											"source": -1,
											"value": "197"
										},
										{
											"begin": 110,
											"end": 216,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 195,
											"end": 198,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": 191,
											"end": 206,
											"name": "SHR",
											"source": -1
										},
										{
											"begin": 191,
											"end": 206,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 163,
											"end": 216,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 224,
											"end": 963,
											"name": "tag",
											"source": -1,
											"value": "162"
										},
										{
											"begin": 224,
											"end": 963,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 224,
											"end": 963,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 301,
											"name": "PUSH",
											"source": -1,
											"value": "44"
										},
										{
											"begin": 279,
											"end": 295,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 276,
											"end": 302,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 273,
											"end": 275,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 273,
											"end": 275,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "200"
										},
										{
											"begin": 273,
											"end": 275,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 305,
											"end": 310,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "131"
										},
										{
											"begin": 305,
											"end": 310,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 273,
											"end": 275,
											"name": "tag",
											"source": -1,
											"value": "200"
										},
										{
											"begin": 273,
											"end": 275,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 339,
											"end": 340,
											"name": "PUSH",
											"source": -1,
											"value": "4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 318,
											"end": 341,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 414,
											"end": 424,
											"name": "PUSH",
											"source": -1,
											"value": "8C379A0"
										},
										{
											"begin": 357,
											"end": 391,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "201"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 382,
											"end": 390,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 357,
											"end": 391,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "197"
										},
										{
											"begin": 357,
											"end": 391,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 357,
											"end": 391,
											"name": "tag",
											"source": -1,
											"value": "201"
										},
										{
											"begin": 357,
											"end": 391,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 406,
											"end": 425,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 396,
											"end": 398,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "202"
										},
										{
											"begin": 396,
											"end": 398,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 429,
											"end": 434,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "131"
										},
										{
											"begin": 429,
											"end": 434,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 396,
											"end": 398,
											"name": "tag",
											"source": -1,
											"value": "202"
										},
										{
											"begin": 396,
											"end": 398,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 460,
											"end": 462,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 463,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 496,
											"end": 512,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 492,
											"end": 516,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 339,
											"end": 340,
											"name": "PUSH",
											"source": -1,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 463,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 468,
											"end": 517,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 543,
											"end": 547,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 537,
											"end": 548,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 624,
											"end": 640,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 624,
											"end": 640,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 617,
											"end": 621,
											"name": "PUSH",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 605,
											"end": 622,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 602,
											"end": 641,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 576,
											"end": 594,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 568,
											"end": 574,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 565,
											"end": 595,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 556,
											"end": 647,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "203"
										},
										{
											"begin": 553,
											"end": 555,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "131"
										},
										{
											"begin": 655,
											"end": 660,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "tag",
											"source": -1,
											"value": "203"
										},
										{
											"begin": 553,
											"end": 555,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 693,
											"end": 699,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 687,
											"end": 691,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 683,
											"end": 700,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 672,
											"end": 700,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 672,
											"end": 700,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 725,
											"end": 728,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 705,
											"end": 729,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 705,
											"end": 729,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 576,
											"end": 594,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 740,
											"end": 746,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 737,
											"end": 767,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 734,
											"end": 736,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 734,
											"end": 736,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "204"
										},
										{
											"begin": 734,
											"end": 736,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 770,
											"end": 775,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 770,
											"end": 775,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 770,
											"end": 775,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 770,
											"end": 775,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 770,
											"end": 775,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "131"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 734,
											"end": 736,
											"name": "tag",
											"source": -1,
											"value": "204"
										},
										{
											"begin": 734,
											"end": 736,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 734,
											"end": 736,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 863,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 841,
											"end": 845,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 837,
											"end": 864,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 807,
											"end": 811,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 814,
											"end": 820,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 802,
											"end": 805,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 794,
											"end": 821,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 794,
											"end": 821,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 829,
											"end": 865,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 826,
											"end": 828,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 826,
											"end": 828,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "205"
										},
										{
											"begin": 826,
											"end": 828,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 868,
											"end": 873,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 868,
											"end": 873,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 868,
											"end": 873,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 868,
											"end": 873,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "131"
										},
										{
											"begin": 868,
											"end": 873,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 826,
											"end": 828,
											"name": "tag",
											"source": -1,
											"value": "205"
										},
										{
											"begin": 826,
											"end": 828,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 89,
											"end": 96,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 73,
											"end": 87,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 69,
											"end": 97,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 892,
											"end": 942,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 892,
											"end": 942,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 807,
											"end": 811,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 892,
											"end": 942,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 460,
											"end": 462,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 943,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 900,
											"end": 903,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 267,
											"end": 963,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 267,
											"end": 963,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									],
									".data": {
										"1F4DE6A436172E7F7B1540476031CB037FC18EDE9CC346A56DA1697CBD352AA9": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
										"1FBBB69D10332726591DC7EE4A23A94661EDA2BEC5CE6BF93A68249147DC8D9C": "455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
										"394AC917F53B95EE25DB2A5DA5874C5B1F0AF95A4FDF34992FF8B19C458F239A": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
										"587CCCAD73A80A7F013DB13C596F4FEBC1968DC77E1D3589D5E7A509A3D6503": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
										"6FAF1C67F278B07C6771DCF4C315A89C21C0EAED11D9AB3D51774DA1CFEF545D": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
										"70A41C66829F5508884CDA9EF3D2F72551B34F23E4035BE97941681123D2D686": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
										"8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
										"AA752FB1526000E5241602AFFC3D70EF506DA48A27EA57140102B439E655ED": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
										"DF9806C6DC743DE602E49918A67B580590D69AB768BDB59F977C0A884A91A7C2": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
										"E155F5D69798C6205436A388A4F3A5FD42F54147B40F4D63A2C8071FF8A9FEE5": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
										"E909E0C9A8F96B4F9AF03B716811ECE20BEB070BE416893ED1D50619B5930807": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368"
									}
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"contracts/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xb046d18f9d09683ca1c0ed6d80c61da8a8a7d9b30bad70a17b898538683eff74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4728713afa6ae36cc9e92c7107c796a313add3ec20f813be2cde76c814486b2a\",\"dweb:/ipfs/QmUJBTXvYaGDF5PVnd5pUvYerc9DRXvqANDzgCzAp3FkkA\"]},\"contracts/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]},\"contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xcb4d489d714897ac44bfd868ac61850cad221177142e2ff7b77474dbbcd8632d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df97fe73917806c90620792dadea71599267ea958e398f746effff25b80cdbfd\",\"dweb:/ipfs/Qmbk2RXS1kctvfQ9N9bHuMU7vLGEjzvUvuDddQmxzhBySr\"]},\"contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea5c8207b135b93afb8cce651a26b1606d0c6e967edc06091e261de7475dace5\",\"dweb:/ipfs/QmXWQHU45hJWmuCiWKjR3tsVh11LwkNEW6fs2Yhvd41Q7a\"]},\"contracts/contracts/token/ERC1155/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xcf122601a1c4816aad0efe37e4c8a9eb744fedd150076363bf54c6641f1332a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cafba550cfbd0fb873282581a4a1186eab3bff1cfd1dcfbf577d4a5b418528ab\",\"dweb:/ipfs/QmdQSLFUmkaf96nzjvJ6eqBcWoJrEd1z36Mh8PPctrbgDb\"]},\"contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x0bc1d0b8fa3b262a6fb98b88dceab8b3348903b95dcc5909b9074fb19a3d2da5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1a2d7b10e484742885d2042f66e8150bfc143a08756a269fb207c4c553b55aa\",\"dweb:/ipfs/Qmbhi8dodhRZS6mqL2T8WfMzmEwPzgSwpuGVHtKF5F6QDp\"]},\"contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 319,
								"contract": "contracts/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							},
							{
								"astId": 781,
								"contract": "contracts/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 787,
								"contract": "contracts/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 789,
								"contract": "contracts/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/token/ERC1155/ERC1155Burnable.sol": {
				"ERC1155Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"contracts/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xb046d18f9d09683ca1c0ed6d80c61da8a8a7d9b30bad70a17b898538683eff74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4728713afa6ae36cc9e92c7107c796a313add3ec20f813be2cde76c814486b2a\",\"dweb:/ipfs/QmUJBTXvYaGDF5PVnd5pUvYerc9DRXvqANDzgCzAp3FkkA\"]},\"contracts/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]},\"contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xcb4d489d714897ac44bfd868ac61850cad221177142e2ff7b77474dbbcd8632d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df97fe73917806c90620792dadea71599267ea958e398f746effff25b80cdbfd\",\"dweb:/ipfs/Qmbk2RXS1kctvfQ9N9bHuMU7vLGEjzvUvuDddQmxzhBySr\"]},\"contracts/contracts/token/ERC1155/ERC1155Burnable.sol\":{\"keccak256\":\"0x2b30e87a7188124f4a198195f7d660149e1ed59ec587c1122239a266ec173937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://645e8db35eb4e70a94ef52d9d994f7442b550c939df2e860b60939c6cbaea284\",\"dweb:/ipfs/QmZN92zh4xMa1DrxA2223cfWsvrj25GNXjT1DDbDpUzHJ4\"]},\"contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea5c8207b135b93afb8cce651a26b1606d0c6e967edc06091e261de7475dace5\",\"dweb:/ipfs/QmXWQHU45hJWmuCiWKjR3tsVh11LwkNEW6fs2Yhvd41Q7a\"]},\"contracts/contracts/token/ERC1155/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xcf122601a1c4816aad0efe37e4c8a9eb744fedd150076363bf54c6641f1332a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cafba550cfbd0fb873282581a4a1186eab3bff1cfd1dcfbf577d4a5b418528ab\",\"dweb:/ipfs/QmdQSLFUmkaf96nzjvJ6eqBcWoJrEd1z36Mh8PPctrbgDb\"]},\"contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x0bc1d0b8fa3b262a6fb98b88dceab8b3348903b95dcc5909b9074fb19a3d2da5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1a2d7b10e484742885d2042f66e8150bfc143a08756a269fb207c4c553b55aa\",\"dweb:/ipfs/Qmbhi8dodhRZS6mqL2T8WfMzmEwPzgSwpuGVHtKF5F6QDp\"]},\"contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 319,
								"contract": "contracts/contracts/token/ERC1155/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							},
							{
								"astId": 781,
								"contract": "contracts/contracts/token/ERC1155/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 787,
								"contract": "contracts/contracts/token/ERC1155/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 789,
								"contract": "contracts/contracts/token/ERC1155/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_uri",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/token/ERC1155/ERC1155Pausable.sol": {
				"ERC1155Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1155 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"paused()": "5c975abb",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1155 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/token/ERC1155/ERC1155Pausable.sol\":\"ERC1155Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"contracts/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xb046d18f9d09683ca1c0ed6d80c61da8a8a7d9b30bad70a17b898538683eff74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4728713afa6ae36cc9e92c7107c796a313add3ec20f813be2cde76c814486b2a\",\"dweb:/ipfs/QmUJBTXvYaGDF5PVnd5pUvYerc9DRXvqANDzgCzAp3FkkA\"]},\"contracts/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]},\"contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9a9cf02622cd7a64261b10534fc3260449da25c98c9e96d1b4ae8110a20e5806\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2df142592d1dc267d9549049ee3317fa190d2f87eaa565f86ab05ec83f7ab8f5\",\"dweb:/ipfs/QmSkJtcfWo7c42KnL5hho6GFxK6HRNV91XABx1P7xDtfLV\"]},\"contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xcb4d489d714897ac44bfd868ac61850cad221177142e2ff7b77474dbbcd8632d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df97fe73917806c90620792dadea71599267ea958e398f746effff25b80cdbfd\",\"dweb:/ipfs/Qmbk2RXS1kctvfQ9N9bHuMU7vLGEjzvUvuDddQmxzhBySr\"]},\"contracts/contracts/token/ERC1155/ERC1155Pausable.sol\":{\"keccak256\":\"0x382b29d273adccf7a56ba97e9df5738298678a212cb3fadd3d52bd1adc462f4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://633909e3de10ca6d76ee2d5a5eae44e9e6410dbccb13eb5b23d1b1efc327fdd8\",\"dweb:/ipfs/QmdSjUAeYCufQixwruKdhm763DmTVnygZ3aeCZpZ9qCPv1\"]},\"contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea5c8207b135b93afb8cce651a26b1606d0c6e967edc06091e261de7475dace5\",\"dweb:/ipfs/QmXWQHU45hJWmuCiWKjR3tsVh11LwkNEW6fs2Yhvd41Q7a\"]},\"contracts/contracts/token/ERC1155/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xcf122601a1c4816aad0efe37e4c8a9eb744fedd150076363bf54c6641f1332a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cafba550cfbd0fb873282581a4a1186eab3bff1cfd1dcfbf577d4a5b418528ab\",\"dweb:/ipfs/QmdQSLFUmkaf96nzjvJ6eqBcWoJrEd1z36Mh8PPctrbgDb\"]},\"contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x0bc1d0b8fa3b262a6fb98b88dceab8b3348903b95dcc5909b9074fb19a3d2da5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1a2d7b10e484742885d2042f66e8150bfc143a08756a269fb207c4c553b55aa\",\"dweb:/ipfs/Qmbhi8dodhRZS6mqL2T8WfMzmEwPzgSwpuGVHtKF5F6QDp\"]},\"contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]},\"contracts/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 319,
								"contract": "contracts/contracts/token/ERC1155/ERC1155Pausable.sol:ERC1155Pausable",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							},
							{
								"astId": 781,
								"contract": "contracts/contracts/token/ERC1155/ERC1155Pausable.sol:ERC1155Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 787,
								"contract": "contracts/contracts/token/ERC1155/ERC1155Pausable.sol:ERC1155Pausable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 789,
								"contract": "contracts/contracts/token/ERC1155/ERC1155Pausable.sol:ERC1155Pausable",
								"label": "_uri",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 2675,
								"contract": "contracts/contracts/token/ERC1155/ERC1155Pausable.sol:ERC1155Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "4",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]},\"contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea5c8207b135b93afb8cce651a26b1606d0c6e967edc06091e261de7475dace5\",\"dweb:/ipfs/QmXWQHU45hJWmuCiWKjR3tsVh11LwkNEW6fs2Yhvd41Q7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/token/ERC1155/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/token/ERC1155/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]},\"contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x31691ad0817f8cb338531b78d2ab2989027d9f27e6f8e62492b754fed9429b10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea5c8207b135b93afb8cce651a26b1606d0c6e967edc06091e261de7475dace5\",\"dweb:/ipfs/QmXWQHU45hJWmuCiWKjR3tsVh11LwkNEW6fs2Yhvd41Q7a\"]},\"contracts/contracts/token/ERC1155/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xcf122601a1c4816aad0efe37e4c8a9eb744fedd150076363bf54c6641f1332a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cafba550cfbd0fb873282581a4a1186eab3bff1cfd1dcfbf577d4a5b418528ab\",\"dweb:/ipfs/QmdQSLFUmkaf96nzjvJ6eqBcWoJrEd1z36Mh8PPctrbgDb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"_Available since v3.1._\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xfa152b6e88a1dc50780e8f1580426dc23ad2e1e2c2f086a088adf206a202f453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5127b264994adab88fae419b1c493efc5acd07134c19ee5c0397e50018291ebf\",\"dweb:/ipfs/QmWwJZVhvdmvUCdimbb6R2Jiu59zjPqm6XTMchM6LaEHAp\"]},\"contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x0bc1d0b8fa3b262a6fb98b88dceab8b3348903b95dcc5909b9074fb19a3d2da5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1a2d7b10e484742885d2042f66e8150bfc143a08756a269fb207c4c553b55aa\",\"dweb:/ipfs/Qmbhi8dodhRZS6mqL2T8WfMzmEwPzgSwpuGVHtKF5F6QDp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "_Available since v3.1._",
						"version": 1
					}
				}
			},
			"contracts/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/utils/Address.sol\":126:5880  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/utils/Address.sol\":126:5880  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d64eec9853bdabe533dbdcfe865ceb1b55b80aaafec7ef2acda415bb04c3cdcd64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d64eec9853bdabe533dbdcfe865ceb1b55b80aaafec7ef2acda415bb04c3cdcd64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0x4E 0xEC SWAP9 MSTORE8 0xBD 0xAB 0xE5 CALLER 0xDB 0xDC INVALID DUP7 0x5C 0xEB SHL SSTORE 0xB8 EXP 0xAA INVALID 0xC7 0xEF 0x2A 0xCD LOG4 ISZERO 0xBB DIV 0xC3 0xCD 0xCD PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "126:5754:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d64eec9853bdabe533dbdcfe865ceb1b55b80aaafec7ef2acda415bb04c3cdcd64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0x4E 0xEC SWAP9 MSTORE8 0xBD 0xAB 0xE5 CALLER 0xDB 0xDC INVALID DUP7 0x5C 0xEB SHL SSTORE 0xB8 EXP 0xAA INVALID 0xC7 0xEF 0x2A 0xCD LOG4 ISZERO 0xBB DIV 0xC3 0xCD 0xCD PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "126:5754:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 5880,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "INVALID",
									"source": 12
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 126,
									"end": 5880,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d64eec9853bdabe533dbdcfe865ceb1b55b80aaafec7ef2acda415bb04c3cdcd64736f6c634300060c0033",
									".code": [
										{
											"begin": 126,
											"end": 5880,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 126,
											"end": 5880,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf5fa8cbdffa5ef8be49b246b5628facc30b71707e78a45d80d93b64eff3fe390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://774e78a9ff32792cc95db4d2ceaf3a7965bb7f0bea5e6cb7cff182b450d44b37\",\"dweb:/ipfs/QmRRMC4uj7eAcLW7chynA3sNEYULMFazdLwQHKHQPyzAbA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/utils/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/contracts/utils/EnumerableSet.sol\":724:7786  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/contracts/utils/EnumerableSet.sol\":724:7786  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204968ad49185999a0ccb2a448814bc90cd7cd7e965111b9329a59f04a0227342d64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204968ad49185999a0ccb2a448814bc90cd7cd7e965111b9329a59f04a0227342d64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 PUSH9 0xAD49185999A0CCB2A4 0x48 DUP2 0x4B 0xC9 0xC 0xD7 0xCD PUSH31 0x965111B9329A59F04A0227342D64736F6C634300060C003300000000000000 ",
							"sourceMap": "724:7062:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204968ad49185999a0ccb2a448814bc90cd7cd7e965111b9329a59f04a0227342d64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 PUSH9 0xAD49185999A0CCB2A4 0x48 DUP2 0x4B 0xC9 0xC 0xD7 0xCD PUSH31 0x965111B9329A59F04A0227342D64736F6C634300060C003300000000000000 ",
							"sourceMap": "724:7062:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 724,
									"end": 7786,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "INVALID",
									"source": 13
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 724,
									"end": 7786,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204968ad49185999a0ccb2a448814bc90cd7cd7e965111b9329a59f04a0227342d64736f6c634300060c0033",
									".code": [
										{
											"begin": 724,
											"end": 7786,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 724,
											"end": 7786,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 724,
											"end": 7786,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 724,
											"end": 7786,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 724,
											"end": 7786,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 7786,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 724,
											"end": 7786,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 7786,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 724,
											"end": 7786,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/utils/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xb2a11b236f073662f5a196995863f51c11d006bf7c3de158b316dfa1506c4b79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8651649cf0b9efa18c3b01c030276fa320d41adbdc286833417e7f36e357b2f3\",\"dweb:/ipfs/QmafhM2Nd1aP43QVB1eRRZaqRXQKswNfQcWi8U8xjrxCfN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"contracts/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x5d1b1dcbc0396f44c1c8d554857f71e3187503bf1e54062bf9ec6782e21f3a08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9aa7fa580393aab7ca3d9f606f5ab7434d51e1c0f3632a593fca82c80ef8cc4c\",\"dweb:/ipfs/QmRy84N7QfkwBM2AeR7UB5G1PPHdRLi6s1iyzAwCzevcHe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2675,
								"contract": "contracts/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/contracts/GSN/Context.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/GSN/Context.sol",
					"exportedSymbols": {
						"Context": [
							22
						]
					},
					"id": 23,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "660:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "677:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "677:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "670:17:0"
											}
										]
									},
									"documentation": null,
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "609:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "643:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "643:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "642:17:0"
									},
									"scope": 22,
									"src": "590:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "765:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "775:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "775:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "915:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "915:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "908:15:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "717:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 21,
												"src": "751:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "751:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "750:14:0"
									},
									"scope": 22,
									"src": "700:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 23,
							"src": "558:374:0"
						}
					],
					"src": "33:900:0"
				},
				"id": 0
			},
			"contracts/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							305
						]
					},
					"id": 306,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 24,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "contracts/contracts/utils/EnumerableSet.sol",
							"file": "../utils/EnumerableSet.sol",
							"id": 25,
							"nodeType": "ImportDirective",
							"scope": 306,
							"sourceUnit": 2658,
							"src": "58:36:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/utils/Address.sol",
							"file": "../utils/Address.sol",
							"id": 26,
							"nodeType": "ImportDirective",
							"scope": 306,
							"sourceUnit": 2263,
							"src": "95:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/GSN/Context.sol",
							"file": "../GSN/Context.sol",
							"id": 27,
							"nodeType": "ImportDirective",
							"scope": 306,
							"sourceUnit": 23,
							"src": "126:28:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 29,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "1468:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 30,
									"nodeType": "InheritanceSpecifier",
									"src": "1468:7:1"
								}
							],
							"contractDependencies": [
								22
							],
							"contractKind": "contract",
							"documentation": {
								"id": 28,
								"nodeType": "StructuredDocumentation",
								"src": "156:1276:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 305,
							"linearizedBaseContracts": [
								305,
								22
							],
							"name": "AccessControl",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 33,
									"libraryName": {
										"contractScope": null,
										"id": 31,
										"name": "EnumerableSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2657,
										"src": "1488:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_EnumerableSet_$2657",
											"typeString": "library EnumerableSet"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1482:49:1",
									"typeName": {
										"contractScope": null,
										"id": 32,
										"name": "EnumerableSet.AddressSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2453,
										"src": "1506:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$2453_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"id": 36,
									"libraryName": {
										"contractScope": null,
										"id": 34,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2262,
										"src": "1542:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$2262",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1536:26:1",
									"typeName": {
										"id": 35,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1554:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 41,
									"members": [
										{
											"constant": false,
											"id": 38,
											"mutability": "mutable",
											"name": "members",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 41,
											"src": "1594:32:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressSet_$2453_storage_ptr",
												"typeString": "struct EnumerableSet.AddressSet"
											},
											"typeName": {
												"contractScope": null,
												"id": 37,
												"name": "EnumerableSet.AddressSet",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 2453,
												"src": "1594:24:1",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2453_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 40,
											"mutability": "mutable",
											"name": "adminRole",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 41,
											"src": "1636:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 39,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1636:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nodeType": "StructDefinition",
									"scope": 305,
									"src": "1568:92:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 45,
									"mutability": "mutable",
									"name": "_roles",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 305,
									"src": "1666:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$41_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 44,
										"keyType": {
											"id": 42,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1675:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1666:29:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$41_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"contractScope": null,
											"id": 43,
											"name": "RoleData",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 41,
											"src": "1686:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$41_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 48,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 305,
									"src": "1717:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 46,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1717:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783030",
										"id": 47,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1762:4:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1773:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 57,
									"name": "RoleAdminChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 57,
												"src": "2093:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 50,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 57,
												"src": "2115:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 52,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2115:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 57,
												"src": "2150:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 54,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2150:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2092:87:1"
									},
									"src": "2070:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "2186:198:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {_setupRole}."
									},
									"id": 66,
									"name": "RoleGranted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 66,
												"src": "2407:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 59,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 66,
												"src": "2429:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 66,
												"src": "2454:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2406:71:1"
									},
									"src": "2389:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "2484:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 75,
									"name": "RoleRevoked",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 75,
												"src": "2782:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 68,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2782:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 75,
												"src": "2804:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2804:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 75,
												"src": "2829:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2829:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2781:71:1"
									},
									"src": "2764:89:1"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "3015:62:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 90,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3062:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 85,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "3032:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$41_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 87,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 86,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "3039:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3032:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$41_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 38,
															"src": "3032:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2453_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2522,
														"src": "3032:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$2453_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2453_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3032:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 84,
												"id": 92,
												"nodeType": "Return",
												"src": "3025:45:1"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "2859:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 94,
												"src": "2957:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 77,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2957:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 94,
												"src": "2971:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2971:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2956:31:1"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 94,
												"src": "3009:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 82,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3008:6:1"
									},
									"scope": 305,
									"src": "2940:137:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "3317:53:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 102,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "3334:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$41_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 104,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 103,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 97,
																	"src": "3341:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3334:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$41_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 105,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 38,
															"src": "3334:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2453_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2536,
														"src": "3334:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$2453_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$2453_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3334:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 101,
												"id": 108,
												"nodeType": "Return",
												"src": "3327:36:1"
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3083:157:1",
										"text": " @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."
									},
									"functionSelector": "ca15c873",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "3273:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 96,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3273:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3272:14:1"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "3308:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3307:9:1"
									},
									"scope": 305,
									"src": "3245:125:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "4037:54:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 125,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "4078:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 120,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "4054:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$41_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 122,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 121,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4061:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4054:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$41_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 123,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 38,
															"src": "4054:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2453_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 124,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2559,
														"src": "4054:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$2453_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$2453_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4054:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 127,
												"nodeType": "Return",
												"src": "4047:37:1"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "3376:574:1",
										"text": " @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."
									},
									"functionSelector": "9010d07c",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 129,
												"src": "3978:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 112,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3978:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 129,
												"src": "3992:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3992:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3977:29:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 129,
												"src": "4028:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4028:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4027:9:1"
									},
									"scope": 305,
									"src": "3955:136:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "4338:46:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 137,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4355:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$41_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 139,
														"indexExpression": {
															"argumentTypes": null,
															"id": 138,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4362:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4355:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$41_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 40,
													"src": "4355:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 136,
												"id": 141,
												"nodeType": "Return",
												"src": "4348:29:1"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "4097:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "4294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4294:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4293:14:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "4329:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 134,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4328:9:1"
									},
									"scope": 305,
									"src": "4272:112:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "4699:158:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 153,
																			"name": "_roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 45,
																			"src": "4725:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$41_storage_$",
																				"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																			}
																		},
																		"id": 155,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 154,
																			"name": "role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 146,
																			"src": "4732:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4725:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoleData_$41_storage",
																			"typeString": "struct AccessControl.RoleData storage ref"
																		}
																	},
																	"id": 156,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "adminRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 40,
																	"src": "4725:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 157,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "4749:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4749:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 152,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "4717:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4717:45:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74",
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4764:49:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811",
																"typeString": "literal_string \"AccessControl: sender must be an admin to grant\""
															},
															"value": "AccessControl: sender must be an admin to grant"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811",
																"typeString": "literal_string \"AccessControl: sender must be an admin to grant\""
															}
														],
														"id": 151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4709:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4709:105:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "4709:105:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 164,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4836:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 165,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "4842:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 163,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "4825:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4825:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "4825:25:1"
											}
										]
									},
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "4390:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 169,
												"src": "4653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 145,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 169,
												"src": "4667:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4652:31:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4699:0:1"
									},
									"scope": 305,
									"src": "4634:223:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "5157:160:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 179,
																			"name": "_roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 45,
																			"src": "5183:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$41_storage_$",
																				"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																			}
																		},
																		"id": 181,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 180,
																			"name": "role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 172,
																			"src": "5190:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5183:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoleData_$41_storage",
																			"typeString": "struct AccessControl.RoleData storage ref"
																		}
																	},
																	"id": 182,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "adminRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 40,
																	"src": "5183:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 183,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "5207:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5207:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 178,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "5175:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5175:45:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65",
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5222:50:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3",
																"typeString": "literal_string \"AccessControl: sender must be an admin to revoke\""
															},
															"value": "AccessControl: sender must be an admin to revoke"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3",
																"typeString": "literal_string \"AccessControl: sender must be an admin to revoke\""
															}
														],
														"id": 177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5167:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5167:106:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5167:106:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 190,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5296:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 191,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5302:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 189,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "5284:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5284:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "5284:26:1"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "4863:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 195,
												"src": "5111:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 171,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5111:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 195,
												"src": "5125:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5125:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5110:31:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5157:0:1"
									},
									"scope": 305,
									"src": "5091:226:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5876:137:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 204,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "5894:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 205,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "5905:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5905:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5894:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5919:49:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5886:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "5886:83:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 212,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5992:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 213,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "5998:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 211,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "5980:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5980:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "5980:26:1"
											}
										]
									},
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "5323:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 217,
												"src": "5830:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 197,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5830:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 217,
												"src": "5844:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5844:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5829:31:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5876:0:1"
									},
									"scope": 305,
									"src": "5808:205:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "6646:42:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 226,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "6667:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 227,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "6673:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 225,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "6656:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "6656:25:1"
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "6019:554:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ===="
									},
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "6598:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6598:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "6612:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6612:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6597:31:1"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6646:0:1"
									},
									"scope": 305,
									"src": "6578:110:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6886:123:1",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 240,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "6918:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 241,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "6924:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$41_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 243,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 242,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "6931:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6924:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$41_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "adminRole",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 40,
															"src": "6924:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 245,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "6948:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 239,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "6901:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6901:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "EmitStatement",
												"src": "6896:62:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 248,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "6968:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$41_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 250,
															"indexExpression": {
																"argumentTypes": null,
																"id": 249,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "6975:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6968:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$41_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 40,
														"src": "6968:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 252,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "6993:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6968:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "6968:34:1"
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "6694:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 256,
												"src": "6836:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 233,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6836:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "adminRole",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 256,
												"src": "6850:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 235,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6850:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6835:33:1"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6886:0:1"
									},
									"scope": 305,
									"src": "6813:196:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "7074:125:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "7113:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 263,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "7088:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$41_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 265,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 264,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 258,
																	"src": "7095:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7088:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$41_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 38,
															"src": "7088:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2453_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 267,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2476,
														"src": "7088:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$2453_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2453_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7088:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 278,
												"nodeType": "IfStatement",
												"src": "7084:109:1",
												"trueBody": {
													"id": 277,
													"nodeType": "Block",
													"src": "7123:70:1",
													"statements": [
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 271,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "7154:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 272,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7160:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 273,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "7169:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7169:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 270,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "7142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7142:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 276,
															"nodeType": "EmitStatement",
															"src": "7137:45:1"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 280,
												"src": "7035:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7035:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 280,
												"src": "7049:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7034:31:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7074:0:1"
									},
									"scope": 305,
									"src": "7015:184:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "7265:128:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 292,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "7307:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 287,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "7279:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$41_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 289,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 288,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 282,
																	"src": "7286:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7279:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$41_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 38,
															"src": "7279:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$2453_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 291,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2499,
														"src": "7279:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$2453_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$2453_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7279:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 302,
												"nodeType": "IfStatement",
												"src": "7275:112:1",
												"trueBody": {
													"id": 301,
													"nodeType": "Block",
													"src": "7317:70:1",
													"statements": [
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 295,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "7348:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 296,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "7354:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 297,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "7363:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7363:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 294,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 75,
																	"src": "7336:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7336:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 300,
															"nodeType": "EmitStatement",
															"src": "7331:45:1"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 304,
												"src": "7226:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 281,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 304,
												"src": "7240:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7240:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7225:31:1"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7265:0:1"
									},
									"scope": 305,
									"src": "7205:188:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 306,
							"src": "1433:5962:1"
						}
					],
					"src": "33:7363:1"
				},
				"id": 1
			},
			"contracts/contracts/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							362
						]
					},
					"id": 363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 307,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "contracts/contracts/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 308,
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 375,
							"src": "58:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 310,
										"name": "IERC165",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 374,
										"src": "274:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC165_$374",
											"typeString": "contract IERC165"
										}
									},
									"id": 311,
									"nodeType": "InheritanceSpecifier",
									"src": "274:7:2"
								}
							],
							"contractDependencies": [
								374
							],
							"contractKind": "contract",
							"documentation": {
								"id": 309,
								"nodeType": "StructuredDocumentation",
								"src": "83:171:2",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts may inherit from this and call {_registerInterface} to declare\n their support of an interface."
							},
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362,
								374
							],
							"name": "ERC165",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 314,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ERC165",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 362,
									"src": "371:57:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 312,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "371:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783031666663396137",
										"id": 313,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "418:10:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33540519_by_1",
											"typeString": "int_const 33540519"
										},
										"value": "0x01ffc9a7"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "435:82:2",
										"text": " @dev Mapping of interface ids to whether or not it's supported."
									},
									"id": 319,
									"mutability": "mutable",
									"name": "_supportedInterfaces",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 362,
									"src": "522:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
										"typeString": "mapping(bytes4 => bool)"
									},
									"typeName": {
										"id": 318,
										"keyType": {
											"id": 316,
											"name": "bytes4",
											"nodeType": "ElementaryTypeName",
											"src": "530:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes4",
												"typeString": "bytes4"
											}
										},
										"nodeType": "Mapping",
										"src": "522:23:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
											"typeString": "mapping(bytes4 => bool)"
										},
										"valueType": {
											"id": 317,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "540:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "605:193:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 323,
															"name": "_INTERFACE_ID_ERC165",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "770:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 322,
														"name": "_registerInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "751:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4)"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "751:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "751:40:2"
											}
										]
									},
									"documentation": null,
									"id": 327,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "593:2:2"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:0:2"
									},
									"scope": 362,
									"src": "581:217:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										373
									],
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "1031:57:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 336,
														"name": "_supportedInterfaces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1048:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
															"typeString": "mapping(bytes4 => bool)"
														}
													},
													"id": 338,
													"indexExpression": {
														"argumentTypes": null,
														"id": 337,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "1069:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1048:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 335,
												"id": 339,
												"nodeType": "Return",
												"src": "1041:40:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "804:139:2",
										"text": " @dev See {IERC165-supportsInterface}.\n Time complexity O(1), guaranteed to always use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 332,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1007:8:2"
									},
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 341,
												"src": "975:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 329,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "975:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "974:20:2"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 341,
												"src": "1025:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 333,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1025:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1024:6:2"
									},
									"scope": 362,
									"src": "948:140:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "1547:133:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 348,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 344,
																"src": "1565:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30786666666666666666",
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1580:10:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967295_by_1",
																	"typeString": "int_const 4294967295"
																},
																"value": "0xffffffff"
															},
															"src": "1565:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552433136353a20696e76616c696420696e74657266616365206964",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1592:30:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
																"typeString": "literal_string \"ERC165: invalid interface id\""
															},
															"value": "ERC165: invalid interface id"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
																"typeString": "literal_string \"ERC165: invalid interface id\""
															}
														],
														"id": 347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1557:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1557:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "1557:66:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 354,
															"name": "_supportedInterfaces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "1633:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
																"typeString": "mapping(bytes4 => bool)"
															}
														},
														"id": 356,
														"indexExpression": {
															"argumentTypes": null,
															"id": 355,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "1654:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1633:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1669:4:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1633:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "1633:40:2"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "1094:383:2",
										"text": " @dev Registers the contract as an implementer of the interface defined by\n `interfaceId`. Support of the actual ERC165 interface is automatic and\n registering its interface id is not required.\n See {IERC165-supportsInterface}.\n Requirements:\n - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`)."
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_registerInterface",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 361,
												"src": "1510:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 343,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1510:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1509:20:2"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1547:0:2"
									},
									"scope": 362,
									"src": "1482:198:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "255:1427:2"
						}
					],
					"src": "33:1650:2"
				},
				"id": 2
			},
			"contracts/contracts/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							374
						]
					},
					"id": 375,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 365,
								"nodeType": "StructuredDocumentation",
								"src": "58:279:3",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 374,
							"linearizedBaseContracts": [
								374
							],
							"name": "IERC165",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "362:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 373,
												"src": "734:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 367,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "734:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "733:20:3"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 373,
												"src": "777:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 370,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "776:6:3"
									},
									"scope": 374,
									"src": "707:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 375,
							"src": "338:447:3"
						}
					],
					"src": "33:753:3"
				},
				"id": 3
			},
			"contracts/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							570
						]
					},
					"id": 571,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 376,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 377,
								"nodeType": "StructuredDocumentation",
								"src": "58:563:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 570,
							"linearizedBaseContracts": [
								570
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "941:109:4",
										"statements": [
											{
												"assignments": [
													388
												],
												"declarations": [
													{
														"constant": false,
														"id": 388,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 402,
														"src": "951:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 387,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "951:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 392,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 389,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "963:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 390,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "967:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "963:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "951:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 394,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "986:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 395,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "991:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "986:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "994:29:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 393,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "978:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "978:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "978:46:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 388,
													"src": "1042:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 386,
												"id": 401,
												"nodeType": "Return",
												"src": "1035:8:4"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "645:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 403,
												"src": "887:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 403,
												"src": "898:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "886:22:4"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 403,
												"src": "932:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "931:9:4"
									},
									"scope": 570,
									"src": "874:176:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "1388:67:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 414,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "1409:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 415,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "1412:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1415:32:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 413,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															420,
															448
														],
														"referencedDeclaration": 448,
														"src": "1405:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1405:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 412,
												"id": 418,
												"nodeType": "Return",
												"src": "1398:50:4"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "1056:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 420,
												"src": "1334:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 420,
												"src": "1345:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1333:22:4"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 420,
												"src": "1379:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1378:9:4"
									},
									"scope": 570,
									"src": "1321:134:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "1841:92:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 433,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "1859:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 434,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "1864:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1859:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 436,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "1867:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1851:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1851:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "1851:29:4"
											},
											{
												"assignments": [
													440
												],
												"declarations": [
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 447,
														"src": "1890:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 439,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1890:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 444,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 441,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "1902:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 442,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "1906:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1902:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1890:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 445,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 440,
													"src": "1925:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 431,
												"id": 446,
												"nodeType": "Return",
												"src": "1918:8:4"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "1461:280:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 448,
												"src": "1759:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 448,
												"src": "1770:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 448,
												"src": "1781:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 426,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1781:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1758:50:4"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 448,
												"src": "1832:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1831:9:4"
									},
									"scope": 570,
									"src": "1746:187:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "2247:392:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 458,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "2479:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2484:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2479:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 464,
												"nodeType": "IfStatement",
												"src": "2475:45:4",
												"trueBody": {
													"id": 463,
													"nodeType": "Block",
													"src": "2487:33:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2508:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 457,
															"id": 462,
															"nodeType": "Return",
															"src": "2501:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													466
												],
												"declarations": [
													{
														"constant": false,
														"id": 466,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 482,
														"src": "2530:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 465,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2530:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 470,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 467,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "2542:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 468,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "2546:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2542:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2530:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 472,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "2565:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 473,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "2569:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2565:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 475,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "2574:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2565:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2577:35:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2557:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2557:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "2557:56:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 480,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 466,
													"src": "2631:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 457,
												"id": 481,
												"nodeType": "Return",
												"src": "2624:8:4"
											}
										]
									},
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "1939:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "2193:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2193:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "2204:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2192:22:4"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "2238:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2238:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2237:9:4"
									},
									"scope": 570,
									"src": "2180:459:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "3168:63:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 494,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "3189:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 495,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "3192:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3195:28:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 493,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															500,
															528
														],
														"referencedDeclaration": 528,
														"src": "3185:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3185:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 492,
												"id": 498,
												"nodeType": "Return",
												"src": "3178:46:4"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "2645:451:4",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 500,
												"src": "3114:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3114:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 500,
												"src": "3125:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3125:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3113:22:4"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 500,
												"src": "3159:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3159:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3158:9:4"
									},
									"scope": 570,
									"src": "3101:130:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "3808:177:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 513,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "3826:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3830:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3826:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 516,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "3833:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 512,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3818:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "3818:28:4"
											},
											{
												"assignments": [
													520
												],
												"declarations": [
													{
														"constant": false,
														"id": 520,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 527,
														"src": "3856:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 519,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3856:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 524,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 521,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "3868:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 522,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "3872:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3868:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3856:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 525,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 520,
													"src": "3977:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 511,
												"id": 526,
												"nodeType": "Return",
												"src": "3970:8:4"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "3237:471:4",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 528,
												"src": "3726:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3726:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 528,
												"src": "3737:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 528,
												"src": "3748:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 506,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3748:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3725:50:4"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 528,
												"src": "3799:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3799:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3798:9:4"
									},
									"scope": 570,
									"src": "3713:272:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "4503:61:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 539,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "4524:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 540,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "4527:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4530:26:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 538,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															545,
															569
														],
														"referencedDeclaration": 569,
														"src": "4520:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4520:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 537,
												"id": 543,
												"nodeType": "Return",
												"src": "4513:44:4"
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "3991:440:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 545,
												"src": "4449:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4449:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 545,
												"src": "4460:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4460:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4448:22:4"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 545,
												"src": "4494:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4493:9:4"
									},
									"scope": 570,
									"src": "4436:128:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "5130:68:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 558,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "5148:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5153:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5148:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 561,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "5156:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5140:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5140:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "5140:29:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 564,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "5186:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 565,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "5190:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5186:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 556,
												"id": 567,
												"nodeType": "Return",
												"src": "5179:12:4"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "4570:460:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 569,
												"src": "5048:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5048:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 569,
												"src": "5059:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5059:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 569,
												"src": "5070:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 551,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5070:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5047:50:4"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 569,
												"src": "5121:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5121:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5120:9:4"
									},
									"scope": 570,
									"src": "5035:163:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 571,
							"src": "622:4578:4"
						}
					],
					"src": "33:5168:4"
				},
				"id": 4
			},
			"contracts/contracts/presets/ERC1155PresetMinterPauser.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/presets/ERC1155PresetMinterPauser.sol",
					"exportedSymbols": {
						"ERC1155PresetMinterPauser": [
							751
						]
					},
					"id": 752,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 572,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "contracts/contracts/access/AccessControl.sol",
							"file": "../access/AccessControl.sol",
							"id": 573,
							"nodeType": "ImportDirective",
							"scope": 752,
							"sourceUnit": 306,
							"src": "58:37:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/GSN/Context.sol",
							"file": "../GSN/Context.sol",
							"id": 574,
							"nodeType": "ImportDirective",
							"scope": 752,
							"sourceUnit": 23,
							"src": "96:28:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/token/ERC1155/ERC1155.sol",
							"file": "../token/ERC1155/ERC1155.sol",
							"id": 575,
							"nodeType": "ImportDirective",
							"scope": 752,
							"sourceUnit": 1773,
							"src": "125:38:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/token/ERC1155/ERC1155Burnable.sol",
							"file": "../token/ERC1155/ERC1155Burnable.sol",
							"id": 576,
							"nodeType": "ImportDirective",
							"scope": 752,
							"sourceUnit": 1842,
							"src": "164:46:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/token/ERC1155/ERC1155Pausable.sol",
							"file": "../token/ERC1155/ERC1155Pausable.sol",
							"id": 577,
							"nodeType": "ImportDirective",
							"scope": 752,
							"sourceUnit": 1890,
							"src": "211:46:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 579,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "866:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 580,
									"nodeType": "InheritanceSpecifier",
									"src": "866:7:5"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 581,
										"name": "AccessControl",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 305,
										"src": "875:13:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AccessControl_$305",
											"typeString": "contract AccessControl"
										}
									},
									"id": 582,
									"nodeType": "InheritanceSpecifier",
									"src": "875:13:5"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 583,
										"name": "ERC1155Burnable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1841,
										"src": "890:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC1155Burnable_$1841",
											"typeString": "contract ERC1155Burnable"
										}
									},
									"id": 584,
									"nodeType": "InheritanceSpecifier",
									"src": "890:15:5"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 585,
										"name": "ERC1155Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1889,
										"src": "907:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC1155Pausable_$1889",
											"typeString": "contract ERC1155Pausable"
										}
									},
									"id": 586,
									"nodeType": "InheritanceSpecifier",
									"src": "907:15:5"
								}
							],
							"contractDependencies": [
								22,
								305,
								362,
								374,
								1772,
								1841,
								1889,
								2011,
								2026,
								2747
							],
							"contractKind": "contract",
							"documentation": {
								"id": 578,
								"nodeType": "StructuredDocumentation",
								"src": "259:568:5",
								"text": " @dev {ERC1155} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts."
							},
							"fullyImplemented": true,
							"id": 751,
							"linearizedBaseContracts": [
								751,
								1889,
								2747,
								1841,
								1772,
								2026,
								2011,
								362,
								374,
								305,
								22
							],
							"name": "ERC1155PresetMinterPauser",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 591,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 751,
									"src": "929:62:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 587,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "929:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "4d494e5445525f524f4c45",
												"id": 589,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "977:13:5",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 588,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "967:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 590,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "967:24:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 596,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 751,
									"src": "997:62:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 592,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "997:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "5041555345525f524f4c45",
												"id": 594,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1045:13:5",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 593,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "1035:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 595,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1035:24:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "1256:156:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 606,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "1277:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 607,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1297:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1297:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 605,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "1266:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1266:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "1266:44:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 612,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "1332:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 613,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1345:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1345:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 611,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "1321:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1321:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "1321:37:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 618,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "1379:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 619,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1392:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1392:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 617,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "1368:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1368:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "1368:37:5"
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "1066:134:5",
										"text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE`, and `PAUSER_ROLE` to the account that\n deploys the contract."
									},
									"id": 624,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 602,
													"name": "uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 599,
													"src": "1251:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 603,
											"modifierName": {
												"argumentTypes": null,
												"id": 601,
												"name": "ERC1155",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1772,
												"src": "1243:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC1155_$1772_$",
													"typeString": "type(contract ERC1155)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1243:12:5"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "uri",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 624,
												"src": "1217:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 598,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1217:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1216:19:5"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1256:0:5"
									},
									"scope": 751,
									"src": "1205:207:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "1711:158:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 638,
																	"name": "MINTER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "1737:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 639,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "1750:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1750:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 637,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "1729:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1729:34:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135355072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1765:58:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8955910be8371dda281e80fa38d092164791ccbd984aaa07b76276bef2682e9c",
																"typeString": "literal_string \"ERC1155PresetMinterPauser: must have minter role to mint\""
															},
															"value": "ERC1155PresetMinterPauser: must have minter role to mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8955910be8371dda281e80fa38d092164791ccbd984aaa07b76276bef2682e9c",
																"typeString": "literal_string \"ERC1155PresetMinterPauser: must have minter role to mint\""
															}
														],
														"id": 636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1721:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:103:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "1721:103:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 646,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "1841:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 647,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "1845:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 648,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "1849:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 649,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "1857:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 645,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1320,
														"src": "1835:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1835:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "1835:27:5"
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "1418:200:5",
										"text": " @dev Creates `amount` new tokens for `to`, of token type `id`.\n See {ERC1155-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
									},
									"functionSelector": "731133e9",
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 653,
												"src": "1637:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 653,
												"src": "1649:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1649:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 653,
												"src": "1661:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 653,
												"src": "1677:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 632,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1677:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1636:59:5"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1711:0:5"
									},
									"scope": 751,
									"src": "1623:246:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "2084:165:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 669,
																	"name": "MINTER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "2110:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 670,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "2123:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2123:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 668,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "2102:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2102:34:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135355072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2138:58:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8955910be8371dda281e80fa38d092164791ccbd984aaa07b76276bef2682e9c",
																"typeString": "literal_string \"ERC1155PresetMinterPauser: must have minter role to mint\""
															},
															"value": "ERC1155PresetMinterPauser: must have minter role to mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8955910be8371dda281e80fa38d092164791ccbd984aaa07b76276bef2682e9c",
																"typeString": "literal_string \"ERC1155PresetMinterPauser: must have minter role to mint\""
															}
														],
														"id": 667,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2094:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2094:103:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "2094:103:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 677,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "2219:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 678,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "2223:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 679,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "2228:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 680,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "2237:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 676,
														"name": "_mintBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1428,
														"src": "2208:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2208:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "2208:34:5"
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "1875:91:5",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] variant of {mint}."
									},
									"functionSelector": "1f7fdffa",
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintBatch",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 684,
												"src": "1990:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1990:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 684,
												"src": "2002:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 657,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2002:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 658,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2002:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 684,
												"src": "2024:24:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 660,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2024:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 661,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2024:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 684,
												"src": "2050:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 663,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2050:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1989:79:5"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2084:0:5"
									},
									"scope": 751,
									"src": "1971:278:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "2486:139:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 690,
																	"name": "PAUSER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "2512:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 691,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "2525:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2525:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 689,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "2504:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2504:34:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135355072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f207061757365",
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2540:59:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d5053a301adec69bf5c7c3782556a354b14090e41fa7ca93c4de3863fd6a98b9",
																"typeString": "literal_string \"ERC1155PresetMinterPauser: must have pauser role to pause\""
															},
															"value": "ERC1155PresetMinterPauser: must have pauser role to pause"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d5053a301adec69bf5c7c3782556a354b14090e41fa7ca93c4de3863fd6a98b9",
																"typeString": "literal_string \"ERC1155PresetMinterPauser: must have pauser role to pause\""
															}
														],
														"id": 688,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2496:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2496:104:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "2496:104:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 697,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2730,
														"src": "2610:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2610:8:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "2610:8:5"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "2255:194:5",
										"text": " @dev Pauses all token transfers.\n See {ERC1155Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
									},
									"functionSelector": "8456cb59",
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2468:2:5"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2486:0:5"
									},
									"scope": 751,
									"src": "2454:171:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "2868:143:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 707,
																	"name": "PAUSER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "2894:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 708,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "2907:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2907:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 706,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "2886:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2886:34:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135355072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2922:61:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_be510562063387b7714478be5eff01a8c39efbb1b76d9be224d34aac440c9e31",
																"typeString": "literal_string \"ERC1155PresetMinterPauser: must have pauser role to unpause\""
															},
															"value": "ERC1155PresetMinterPauser: must have pauser role to unpause"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_be510562063387b7714478be5eff01a8c39efbb1b76d9be224d34aac440c9e31",
																"typeString": "literal_string \"ERC1155PresetMinterPauser: must have pauser role to unpause\""
															}
														],
														"id": 705,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2878:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2878:106:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "2878:106:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 714,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2746,
														"src": "2994:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2994:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "2994:10:5"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "2631:198:5",
										"text": " @dev Unpauses all token transfers.\n See {ERC1155Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
									},
									"functionSelector": "3f4ba83a",
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:5"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2868:0:5"
									},
									"scope": 751,
									"src": "2834:177:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1611,
										1888
									],
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "3276:83:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 741,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "3313:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 742,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "3323:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 743,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "3329:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 744,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "3333:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 745,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "3338:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 746,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "3347:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 738,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "3286:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_ERC1155PresetMinterPauser_$751",
																"typeString": "contract super ERC1155PresetMinterPauser"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1888,
														"src": "3286:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3286:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "3286:66:5"
											}
										]
									},
									"documentation": null,
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 736,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"contractScope": null,
												"id": 734,
												"name": "ERC1155",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1772,
												"src": "3246:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC1155_$1772",
													"typeString": "contract ERC1155"
												}
											},
											{
												"contractScope": null,
												"id": 735,
												"name": "ERC1155Pausable",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1889,
												"src": "3255:15:5",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC1155Pausable_$1889",
													"typeString": "contract ERC1155Pausable"
												}
											}
										],
										"src": "3237:34:5"
									},
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 750,
												"src": "3056:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3056:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 750,
												"src": "3082:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 750,
												"src": "3104:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3104:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 750,
												"src": "3124:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 725,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3124:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 726,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3124:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 750,
												"src": "3154:24:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 728,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3154:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 729,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3154:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 750,
												"src": "3188:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 731,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3188:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3046:165:5"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3276:0:5"
									},
									"scope": 751,
									"src": "3017:342:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 752,
							"src": "828:2533:5"
						}
					],
					"src": "33:3329:5"
				},
				"id": 5
			},
			"contracts/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"ERC1155": [
							1772
						]
					},
					"id": 1773,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 753,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "contracts/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 754,
							"nodeType": "ImportDirective",
							"scope": 1773,
							"sourceUnit": 2012,
							"src": "58:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/token/ERC1155/IERC1155MetadataURI.sol",
							"file": "./IERC1155MetadataURI.sol",
							"id": 755,
							"nodeType": "ImportDirective",
							"scope": 1773,
							"sourceUnit": 2027,
							"src": "83:35:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 756,
							"nodeType": "ImportDirective",
							"scope": 1773,
							"sourceUnit": 2068,
							"src": "119:32:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/GSN/Context.sol",
							"file": "../../GSN/Context.sol",
							"id": 757,
							"nodeType": "ImportDirective",
							"scope": 1773,
							"sourceUnit": 23,
							"src": "152:31:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/introspection/ERC165.sol",
							"file": "../../introspection/ERC165.sol",
							"id": 758,
							"nodeType": "ImportDirective",
							"scope": 1773,
							"sourceUnit": 363,
							"src": "184:40:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 759,
							"nodeType": "ImportDirective",
							"scope": 1773,
							"sourceUnit": 571,
							"src": "225:33:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 760,
							"nodeType": "ImportDirective",
							"scope": 1773,
							"sourceUnit": 2263,
							"src": "259:33:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 762,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "532:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 763,
									"nodeType": "InheritanceSpecifier",
									"src": "532:7:6"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 764,
										"name": "ERC165",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 362,
										"src": "541:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC165_$362",
											"typeString": "contract ERC165"
										}
									},
									"id": 765,
									"nodeType": "InheritanceSpecifier",
									"src": "541:6:6"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 766,
										"name": "IERC1155",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2011,
										"src": "549:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1155_$2011",
											"typeString": "contract IERC1155"
										}
									},
									"id": 767,
									"nodeType": "InheritanceSpecifier",
									"src": "549:8:6"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 768,
										"name": "IERC1155MetadataURI",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2026,
										"src": "559:19:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1155MetadataURI_$2026",
											"typeString": "contract IERC1155MetadataURI"
										}
									},
									"id": 769,
									"nodeType": "InheritanceSpecifier",
									"src": "559:19:6"
								}
							],
							"contractDependencies": [
								22,
								362,
								374,
								2011,
								2026
							],
							"contractKind": "contract",
							"documentation": {
								"id": 761,
								"nodeType": "StructuredDocumentation",
								"src": "294:217:6",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1772,
							"linearizedBaseContracts": [
								1772,
								2026,
								2011,
								362,
								374,
								22
							],
							"name": "ERC1155",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 772,
									"libraryName": {
										"contractScope": null,
										"id": 770,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 570,
										"src": "591:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$570",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "585:27:6",
									"typeName": {
										"id": 771,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "604:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 775,
									"libraryName": {
										"contractScope": null,
										"id": 773,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2262,
										"src": "623:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$2262",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "617:26:6",
									"typeName": {
										"id": 774,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "635:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 781,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1772,
									"src": "698:66:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 780,
										"keyType": {
											"id": 776,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "707:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "698:48:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 779,
											"keyType": {
												"id": 777,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "726:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "718:27:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 778,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "737:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 787,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1772,
									"src": "821:72:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 786,
										"keyType": {
											"id": 782,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "830:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "821:45:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 785,
											"keyType": {
												"id": 783,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "849:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "841:24:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 784,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "860:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 789,
									"mutability": "mutable",
									"name": "_uri",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1772,
									"src": "1014:19:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 788,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1014:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 792,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ERC1155",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1772,
									"src": "1706:58:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 790,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "1706:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786439623637613236",
										"id": 791,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1754:10:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3652614694_by_1",
											"typeString": "int_const 3652614694"
										},
										"value": "0xd9b67a26"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 795,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ERC1155_METADATA_URI",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1772,
									"src": "1845:71:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 793,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "1845:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783065383933343163",
										"id": 794,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1906:10:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_243872796_by_1",
											"typeString": "int_const 243872796"
										},
										"value": "0x0e89341c"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "2005:313:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 802,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "2023:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 801,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "2015:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2015:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "2015:12:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 806,
															"name": "_INTERFACE_ID_ERC1155",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "2135:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 805,
														"name": "_registerInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "2116:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4)"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2116:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "2116:41:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 810,
															"name": "_INTERFACE_ID_ERC1155_METADATA_URI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "2276:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 809,
														"name": "_registerInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "2257:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2257:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "2257:54:6"
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "1923:38:6",
										"text": " @dev See {_setURI}."
									},
									"id": 814,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "uri",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 814,
												"src": "1979:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 797,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1979:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1978:19:6"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2005:0:6"
									},
									"scope": 1772,
									"src": "1966:352:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2025
									],
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "2786:28:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 823,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 789,
													"src": "2803:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 822,
												"id": 824,
												"nodeType": "Return",
												"src": "2796:11:6"
											}
										]
									},
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "2324:388:6",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 819,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2753:8:6"
									},
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 826,
												"src": "2730:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2729:9:6"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 826,
												"src": "2771:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 820,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2771:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2770:15:6"
									},
									"scope": 1772,
									"src": "2717:97:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1949
									],
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "3043:133:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 838,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "3061:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3080:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3072:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 839,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3072:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3072:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3061:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3084:45:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 837,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3053:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3053:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "3053:77:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 847,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "3147:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 849,
														"indexExpression": {
															"argumentTypes": null,
															"id": 848,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "3157:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3147:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 851,
													"indexExpression": {
														"argumentTypes": null,
														"id": 850,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "3161:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3147:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 836,
												"id": 852,
												"nodeType": "Return",
												"src": "3140:29:6"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "2820:131:6",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 833,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3016:8:6"
									},
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 854,
												"src": "2975:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2975:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 854,
												"src": "2992:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2992:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2974:29:6"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 854,
												"src": "3034:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3034:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3033:9:6"
									},
									"scope": 1772,
									"src": "2956:220:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1962
									],
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "3512:436:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 869,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "3530:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3530:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 871,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "3549:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3549:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3530:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3561:43:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 868,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3522:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3522:83:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "3522:83:6"
											},
											{
												"assignments": [
													881
												],
												"declarations": [
													{
														"constant": false,
														"id": 881,
														"mutability": "mutable",
														"name": "batchBalances",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 930,
														"src": "3616:30:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 879,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3616:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 880,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "3616:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 888,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 885,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "3663:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3663:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3649:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 882,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3653:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 883,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "3653:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3649:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3616:63:6"
											},
											{
												"body": {
													"id": 926,
													"nodeType": "Block",
													"src": "3736:175:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 901,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 858,
																				"src": "3758:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 903,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 902,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 890,
																				"src": "3767:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3758:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 906,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3781:1:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 905,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3773:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 904,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3773:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3773:10:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"src": "3758:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3785:51:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c",
																			"typeString": "literal_string \"ERC1155: batch balance query for the zero address\""
																		},
																		"value": "ERC1155: batch balance query for the zero address"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c",
																			"typeString": "literal_string \"ERC1155: batch balance query for the zero address\""
																		}
																	],
																	"id": 900,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3750:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3750:87:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 911,
															"nodeType": "ExpressionStatement",
															"src": "3750:87:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 912,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 881,
																		"src": "3851:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 914,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 913,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "3865:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3851:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 915,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 781,
																			"src": "3870:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 919,
																		"indexExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 916,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 861,
																				"src": "3880:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 918,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 917,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 890,
																				"src": "3884:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3880:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3870:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 923,
																	"indexExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 920,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 858,
																			"src": "3888:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 922,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 921,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 890,
																			"src": "3897:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3888:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3870:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3851:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 925,
															"nodeType": "ExpressionStatement",
															"src": "3851:49:6"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 893,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "3710:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 894,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "3714:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3714:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3710:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 927,
												"initializationExpression": {
													"assignments": [
														890
													],
													"declarations": [
														{
															"constant": false,
															"id": 890,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 927,
															"src": "3695:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 889,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3695:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 892,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3707:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3695:13:6"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3731:3:6",
														"subExpression": {
															"argumentTypes": null,
															"id": 897,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "3733:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 899,
													"nodeType": "ExpressionStatement",
													"src": "3731:3:6"
												},
												"nodeType": "ForStatement",
												"src": "3690:221:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 928,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 881,
													"src": "3928:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 867,
												"id": 929,
												"nodeType": "Return",
												"src": "3921:20:6"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "3182:146:6",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 863,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3464:8:6"
									},
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "accounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 931,
												"src": "3366:25:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 856,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3366:7:6",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 857,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3366:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 931,
												"src": "3401:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 859,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3401:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 860,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3401:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3356:71:6"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 931,
												"src": "3490:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 864,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3490:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 865,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3490:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3489:18:6"
									},
									"scope": 1772,
									"src": "3333:615:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1970
									],
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "4100:222:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 941,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "4118:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4118:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 943,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "4134:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4118:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4144:43:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 940,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4110:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4110:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "4110:78:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 948,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "4199:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 952,
															"indexExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 949,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "4218:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4218:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4199:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 953,
														"indexExpression": {
															"argumentTypes": null,
															"id": 951,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "4232:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4199:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 954,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "4244:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4199:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "4199:53:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 958,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "4282:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4282:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 960,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "4296:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 961,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "4306:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 957,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1932,
														"src": "4267:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4267:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 963,
												"nodeType": "EmitStatement",
												"src": "4262:53:6"
											}
										]
									},
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "3954:57:6",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 938,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4091:8:6"
									},
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 965,
												"src": "4043:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4043:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 965,
												"src": "4061:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 935,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4061:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4042:33:6"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4100:0:6"
									},
									"scope": 1772,
									"src": "4016:306:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1980
									],
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "4486:61:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 976,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "4503:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 978,
														"indexExpression": {
															"argumentTypes": null,
															"id": 977,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "4522:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4503:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 980,
													"indexExpression": {
														"argumentTypes": null,
														"id": 979,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "4531:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4503:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 975,
												"id": 981,
												"nodeType": "Return",
												"src": "4496:44:6"
											}
										]
									},
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "4328:56:6",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 972,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4462:8:6"
									},
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 983,
												"src": "4415:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 983,
												"src": "4432:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4432:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4414:35:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 983,
												"src": "4480:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 973,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4480:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4479:6:6"
									},
									"scope": 1772,
									"src": "4389:158:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1994
									],
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "4811:700:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 999,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "4829:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4843:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4835:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4835:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4835:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4829:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4847:39:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 998,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4821:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4821:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "4821:66:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1009,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "4918:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1010,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "4926:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4926:12:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "4918:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1014,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 986,
																		"src": "4959:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1015,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "4965:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4965:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 1013,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "4942:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4942:36:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4918:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4992:43:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 1008,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:148:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "4897:148:6"
											},
											{
												"assignments": [
													1023
												],
												"declarations": [
													{
														"constant": false,
														"id": 1023,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1088,
														"src": "5056:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1022,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5056:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1026,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1024,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "5075:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5075:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5056:31:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1028,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "5119:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1029,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "5129:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1030,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "5135:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1032,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 990,
																	"src": "5157:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1031,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "5139:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5139:21:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1035,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "5180:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1034,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "5162:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5162:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1037,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "5189:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1027,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "5098:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "5098:96:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1040,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "5205:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 1043,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1041,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "5215:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5205:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1044,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1042,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "5219:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5205:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1051,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "5251:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5259:44:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																},
																"value": "ERC1155: insufficient balance for transfer"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1045,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 781,
																		"src": "5227:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1047,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1046,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 990,
																		"src": "5237:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5227:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1049,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1048,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 986,
																	"src": "5241:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5227:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 448,
															"src": "5227:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5227:77:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5205:99:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "5205:99:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1056,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "5314:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 1059,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1057,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "5324:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5314:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1060,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1058,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "5328:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5314:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1067,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "5356:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1061,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 781,
																		"src": "5334:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1063,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1062,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 990,
																		"src": "5344:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5334:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1065,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1064,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "5348:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5334:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 403,
															"src": "5334:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5334:29:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5314:49:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "5314:49:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1072,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "5394:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1073,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "5404:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1074,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "5410:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1075,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "5414:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1076,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "5418:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1071,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1908,
														"src": "5379:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5379:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1078,
												"nodeType": "EmitStatement",
												"src": "5374:51:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1080,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "5467:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1081,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "5477:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1082,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "5483:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1083,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "5487:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1084,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "5491:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1085,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "5499:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1079,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "5436:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5436:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "5436:68:6"
											}
										]
									},
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "4553:56:6",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 996,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4798:8:6"
									},
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1089,
												"src": "4649:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4649:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1089,
												"src": "4671:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1089,
												"src": "4691:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4691:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1089,
												"src": "4711:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4711:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1089,
												"src": "4735:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 993,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4735:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4639:119:6"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4811:0:6"
									},
									"scope": 1772,
									"src": "4614:897:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2010
									],
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "5805:962:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1107,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "5823:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5823:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1109,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "5837:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5837:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5823:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5853:42:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5815:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5815:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "5815:81:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1116,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "5914:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5928:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5920:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1117,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5920:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5920:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5914:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5932:39:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 1115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5906:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5906:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "5906:66:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1126,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "6003:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1127,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "6011:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6011:12:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "6003:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1131,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1092,
																		"src": "6044:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1132,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "6050:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 1133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6050:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 1130,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "6027:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6027:36:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6003:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6077:52:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 1125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5982:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5982:157:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "5982:157:6"
											},
											{
												"assignments": [
													1140
												],
												"declarations": [
													{
														"constant": false,
														"id": 1140,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1226,
														"src": "6150:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1139,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6150:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1143,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1141,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "6169:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6169:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6150:31:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1145,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "6213:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1146,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "6223:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1147,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "6229:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1148,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "6233:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1149,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "6238:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1150,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "6247:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1144,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "6192:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6192:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "6192:60:6"
											},
											{
												"body": {
													"id": 1207,
													"nodeType": "Block",
													"src": "6304:308:6",
													"statements": [
														{
															"assignments": [
																1165
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1165,
																	"mutability": "mutable",
																	"name": "id",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1207,
																	"src": "6318:10:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1164,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6318:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1169,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1166,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "6331:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1168,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1167,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "6335:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6331:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6318:19:6"
														},
														{
															"assignments": [
																1171
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1171,
																	"mutability": "mutable",
																	"name": "amount",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1207,
																	"src": "6351:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1170,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6351:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1175,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1172,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "6368:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1174,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1173,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "6376:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6368:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6351:27:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1176,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 781,
																			"src": "6393:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1179,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1177,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1165,
																			"src": "6403:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6393:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1180,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1178,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1092,
																		"src": "6407:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6393:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1187,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1171,
																			"src": "6456:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																			"id": 1188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6480:44:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																				"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																			},
																			"value": "ERC1155: insufficient balance for transfer"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																				"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1181,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 781,
																					"src": "6415:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1183,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1182,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1165,
																					"src": "6425:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6415:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1185,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1184,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1092,
																				"src": "6429:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6415:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 448,
																		"src": "6415:23:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																		}
																	},
																	"id": 1189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6415:123:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6393:145:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1191,
															"nodeType": "ExpressionStatement",
															"src": "6393:145:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1192,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 781,
																			"src": "6552:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1195,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1193,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1165,
																			"src": "6562:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6552:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1196,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1194,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "6566:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6552:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1203,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1171,
																			"src": "6594:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1197,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 781,
																					"src": "6572:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1199,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1198,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1165,
																					"src": "6582:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6572:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1201,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1200,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1094,
																				"src": "6586:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6572:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 403,
																		"src": "6572:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6572:29:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6552:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1206,
															"nodeType": "ExpressionStatement",
															"src": "6552:49:6"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1157,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "6283:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1158,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "6287:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6287:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6283:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1208,
												"initializationExpression": {
													"assignments": [
														1154
													],
													"declarations": [
														{
															"constant": false,
															"id": 1154,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1208,
															"src": "6268:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1153,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6268:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1156,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6280:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6268:13:6"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6299:3:6",
														"subExpression": {
															"argumentTypes": null,
															"id": 1161,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "6301:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1163,
													"nodeType": "ExpressionStatement",
													"src": "6299:3:6"
												},
												"nodeType": "ForStatement",
												"src": "6263:349:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1210,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "6641:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1211,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "6651:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1212,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "6657:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1213,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "6661:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1214,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "6666:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1209,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1923,
														"src": "6627:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6627:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1216,
												"nodeType": "EmitStatement",
												"src": "6622:52:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1218,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "6721:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1219,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "6731:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1220,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "6737:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1221,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "6741:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1222,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "6746:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1223,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "6755:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1217,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "6685:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6685:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1225,
												"nodeType": "ExpressionStatement",
												"src": "6685:75:6"
											}
										]
									},
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "5517:61:6",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1104,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5792:8:6"
									},
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1227,
												"src": "5623:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5623:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1227,
												"src": "5645:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1227,
												"src": "5665:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1095,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5665:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1096,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5665:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1227,
												"src": "5695:24:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1098,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5695:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1099,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "5695:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1227,
												"src": "5729:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1101,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5729:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5613:139:6"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5805:0:6"
									},
									"scope": 1772,
									"src": "5583:1184:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "7646:30:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1233,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "7656:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1234,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "7663:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "7656:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "7656:13:6"
											}
										]
									},
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "6773:812:6",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "newuri",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1238,
												"src": "7607:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1229,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7607:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7606:22:6"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7646:0:6"
									},
									"scope": 1772,
									"src": "7590:86:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "8155:476:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1251,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "8173:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8192:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8184:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1252,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8184:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8184:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8173:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8196:35:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 1250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8165:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8165:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "8165:67:6"
											},
											{
												"assignments": [
													1261
												],
												"declarations": [
													{
														"constant": false,
														"id": 1261,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1319,
														"src": "8243:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1260,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8243:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1264,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1262,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "8262:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8262:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8243:31:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1266,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "8306:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8324:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8316:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1267,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8316:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8316:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1271,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "8328:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1273,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1243,
																	"src": "8355:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1272,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "8337:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8337:21:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1276,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1245,
																	"src": "8378:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1275,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "8360:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8360:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1278,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "8387:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1265,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "8285:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8285:107:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "8285:107:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1281,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "8403:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 1284,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1282,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "8413:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8403:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1285,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1283,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "8417:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8403:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1292,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "8455:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1286,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 781,
																		"src": "8428:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1288,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1287,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1243,
																		"src": "8438:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8428:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1290,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1289,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "8442:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8428:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 403,
															"src": "8428:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8428:34:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8403:59:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "8403:59:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1297,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "8492:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8510:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8502:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1298,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8502:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8502:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1302,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "8514:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1303,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "8523:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1304,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "8527:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1296,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1908,
														"src": "8477:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8477:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1306,
												"nodeType": "EmitStatement",
												"src": "8472:62:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1308,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "8576:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8594:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8586:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1309,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8586:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8586:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1313,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "8598:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1314,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "8607:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1315,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "8611:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1316,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "8619:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1307,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "8545:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8545:79:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1318,
												"nodeType": "ExpressionStatement",
												"src": "8545:79:6"
											}
										]
									},
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "7682:372:6",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n Emits a {TransferSingle} event.\n Requirements:\n - `account` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1320,
												"src": "8074:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8074:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1320,
												"src": "8091:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8091:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1320,
												"src": "8103:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8103:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1320,
												"src": "8119:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8119:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8073:64:6"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8155:0:6"
									},
									"scope": 1772,
									"src": "8059:572:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "9092:584:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1335,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "9110:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9124:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9116:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1336,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9116:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9116:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9110:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9128:35:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 1334,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9102:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9102:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "9102:62:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1345,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1326,
																	"src": "9182:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "9182:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1347,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1329,
																	"src": "9196:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "9196:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9182:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9212:42:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9174:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9174:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "9174:81:6"
											},
											{
												"assignments": [
													1354
												],
												"declarations": [
													{
														"constant": false,
														"id": 1354,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1427,
														"src": "9266:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1353,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9266:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1357,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1355,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "9285:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9285:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9266:31:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1359,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "9329:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9347:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9339:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1360,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9339:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9339:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1364,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "9351:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1365,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "9355:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1366,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "9360:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1367,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "9369:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1358,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "9308:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9308:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "9308:66:6"
											},
											{
												"body": {
													"id": 1402,
													"nodeType": "Block",
													"src": "9423:86:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1381,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 781,
																			"src": "9437:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1386,
																		"indexExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1382,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1326,
																				"src": "9447:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1384,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1383,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1371,
																				"src": "9451:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9447:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9437:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1387,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1385,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1323,
																		"src": "9455:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9437:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1392,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 781,
																					"src": "9476:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1396,
																				"indexExpression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 1393,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1326,
																						"src": "9486:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 1395,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 1394,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1371,
																						"src": "9490:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9486:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "9476:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1398,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1397,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1323,
																				"src": "9494:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9476:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1388,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1329,
																				"src": "9461:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1390,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1389,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1371,
																				"src": "9469:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9461:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 403,
																		"src": "9461:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9461:37:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9437:61:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1401,
															"nodeType": "ExpressionStatement",
															"src": "9437:61:6"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1374,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "9402:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1375,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "9406:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "9406:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9402:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1403,
												"initializationExpression": {
													"assignments": [
														1371
													],
													"declarations": [
														{
															"constant": false,
															"id": 1371,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1403,
															"src": "9390:6:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1370,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "9390:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1373,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9399:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9390:10:6"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9418:3:6",
														"subExpression": {
															"argumentTypes": null,
															"id": 1378,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "9418:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1380,
													"nodeType": "ExpressionStatement",
													"src": "9418:3:6"
												},
												"nodeType": "ForStatement",
												"src": "9385:124:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1405,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "9538:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9556:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9548:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1406,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9548:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9548:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1410,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "9560:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1411,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "9564:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1412,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "9569:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1404,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1923,
														"src": "9524:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9524:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1414,
												"nodeType": "EmitStatement",
												"src": "9519:58:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1416,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "9624:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9642:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9634:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1417,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9634:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9634:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1421,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "9646:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1422,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "9650:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1423,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "9655:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1424,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "9664:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1415,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "9588:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9588:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "9588:81:6"
											}
										]
									},
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "8637:334:6",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1428,
												"src": "8996:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8996:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1428,
												"src": "9008:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1324,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9008:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1325,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "9008:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1428,
												"src": "9030:24:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1327,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9030:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1328,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "9030:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1428,
												"src": "9056:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1330,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9056:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8995:79:6"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9092:0:6"
									},
									"scope": 1772,
									"src": "8976:700:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1496,
										"nodeType": "Block",
										"src": "10002:461:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1439,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "10020:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10039:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10031:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1440,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10031:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10031:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10020:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10043:37:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1438,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10012:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10012:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "10012:69:6"
											},
											{
												"assignments": [
													1449
												],
												"declarations": [
													{
														"constant": false,
														"id": 1449,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1496,
														"src": "10092:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1448,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10092:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1452,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1450,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "10111:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10111:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10092:31:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1454,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "10155:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1455,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "10165:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10182:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10174:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1456,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10174:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10174:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1461,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1433,
																	"src": "10204:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1460,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "10186:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10186:21:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1464,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1435,
																	"src": "10227:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1463,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "10209:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10209:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10236:2:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1453,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "10134:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10134:105:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "10134:105:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1469,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "10250:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 1472,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1470,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "10260:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10250:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1473,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1471,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "10264:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10250:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1480,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1435,
																"src": "10315:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10335:38:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																	"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																},
																"value": "ERC1155: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																	"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1474,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 781,
																		"src": "10275:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1476,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1475,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1433,
																		"src": "10285:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10275:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1478,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1477,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "10289:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10275:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 448,
															"src": "10275:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10275:108:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10250:133:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1484,
												"nodeType": "ExpressionStatement",
												"src": "10250:133:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1486,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1449,
															"src": "10414:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1487,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "10424:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10441:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10433:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1488,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10433:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10433:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1492,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "10445:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1493,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "10449:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1485,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1908,
														"src": "10399:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10399:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1495,
												"nodeType": "EmitStatement",
												"src": "10394:62:6"
											}
										]
									},
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "9682:238:6",
										"text": " @dev Destroys `amount` tokens of token type `id` from `account`\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens of token type `id`."
									},
									"id": 1497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1497,
												"src": "9940:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9940:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1497,
												"src": "9957:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9957:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1497,
												"src": "9969:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9969:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9939:45:6"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10002:0:6"
									},
									"scope": 1772,
									"src": "9925:538:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "10759:603:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1510,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1500,
																"src": "10777:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10796:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10788:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1511,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10788:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10788:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10777:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10800:37:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10769:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10769:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1518,
												"nodeType": "ExpressionStatement",
												"src": "10769:69:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1520,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "10856:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "10856:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1522,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "10870:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "10870:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10856:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10886:42:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1519,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10848:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10848:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "10848:81:6"
											},
											{
												"assignments": [
													1529
												],
												"declarations": [
													{
														"constant": false,
														"id": 1529,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1591,
														"src": "10940:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1528,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10940:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1532,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1530,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "10959:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10959:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10940:31:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1534,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "11003:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1535,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1500,
															"src": "11013:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11030:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11022:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11022:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11022:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1540,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "11034:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1541,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "11039:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11048:2:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1533,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "10982:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10982:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "10982:69:6"
											},
											{
												"body": {
													"id": 1578,
													"nodeType": "Block",
													"src": "11100:182:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1556,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 781,
																			"src": "11114:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1561,
																		"indexExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1557,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1503,
																				"src": "11124:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1559,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1558,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1546,
																				"src": "11128:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11124:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11114:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1562,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1560,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1500,
																		"src": "11132:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11114:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1571,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1506,
																				"src": "11191:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1573,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1572,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1546,
																				"src": "11199:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11191:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																			"id": 1574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11219:38:6",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																				"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																			},
																			"value": "ERC1155: burn amount exceeds balance"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																				"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1563,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 781,
																					"src": "11143:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1567,
																				"indexExpression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 1564,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1503,
																						"src": "11153:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 1566,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 1565,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1546,
																						"src": "11157:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "11153:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "11143:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1569,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1568,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1500,
																				"src": "11161:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11143:26:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 448,
																		"src": "11143:30:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																		}
																	},
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11143:128:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11114:157:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1577,
															"nodeType": "ExpressionStatement",
															"src": "11114:157:6"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1549,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1546,
														"src": "11079:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1550,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "11083:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "11083:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11079:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1579,
												"initializationExpression": {
													"assignments": [
														1546
													],
													"declarations": [
														{
															"constant": false,
															"id": 1546,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1579,
															"src": "11067:6:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1545,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "11067:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1548,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11076:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11067:10:6"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11095:3:6",
														"subExpression": {
															"argumentTypes": null,
															"id": 1553,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1546,
															"src": "11095:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1555,
													"nodeType": "ExpressionStatement",
													"src": "11095:3:6"
												},
												"nodeType": "ForStatement",
												"src": "11062:220:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1581,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "11311:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1582,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1500,
															"src": "11321:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11338:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11330:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1583,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11330:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11330:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1587,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "11342:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1588,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "11347:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1580,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1923,
														"src": "11297:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11297:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1590,
												"nodeType": "EmitStatement",
												"src": "11292:63:6"
											}
										]
									},
									"documentation": {
										"id": 1498,
										"nodeType": "StructuredDocumentation",
										"src": "10469:183:6",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1592,
												"src": "10677:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10677:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1592,
												"src": "10694:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1501,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10694:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1502,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "10694:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1592,
												"src": "10716:24:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1504,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10716:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1505,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "10716:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10676:65:6"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10759:0:6"
									},
									"scope": 1772,
									"src": "10657:705:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "12520:3:6",
										"statements": []
									},
									"documentation": {
										"id": 1593,
										"nodeType": "StructuredDocumentation",
										"src": "11368:923:6",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1611,
												"src": "12335:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12335:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1611,
												"src": "12361:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12361:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1611,
												"src": "12383:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12383:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1611,
												"src": "12403:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1600,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12403:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1601,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "12403:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1611,
												"src": "12433:24:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1603,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12433:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1604,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "12433:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1611,
												"src": "12467:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1606,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12467:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12325:165:6"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12520:0:6"
									},
									"scope": 1772,
									"src": "12296:227:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1675,
										"nodeType": "Block",
										"src": "12734:536:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 1626,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "12748:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2087,
														"src": "12748:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12748:15:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1674,
												"nodeType": "IfStatement",
												"src": "12744:520:6",
												"trueBody": {
													"id": 1673,
													"nodeType": "Block",
													"src": "12765:499:6",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1655,
																		"nodeType": "Block",
																		"src": "12882:188:6",
																		"statements": [
																			{
																				"condition": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1648,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1642,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1640,
																						"src": "12904:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 1644,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1617,
																										"src": "12933:2:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1643,
																									"name": "IERC1155Receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2067,
																									"src": "12916:16:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$2067_$",
																										"typeString": "type(contract IERC1155Receiver)"
																									}
																								},
																								"id": 1645,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12916:20:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC1155Receiver_$2067",
																									"typeString": "contract IERC1155Receiver"
																								}
																							},
																							"id": 1646,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2048,
																							"src": "12916:38:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																								"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																							}
																						},
																						"id": 1647,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": null,
																						"src": "12916:47:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "12904:59:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": null,
																				"id": 1654,
																				"nodeType": "IfStatement",
																				"src": "12900:156:6",
																				"trueBody": {
																					"id": 1653,
																					"nodeType": "Block",
																					"src": "12965:91:6",
																					"statements": [
																						{
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1650,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12994:42:6",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1649,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										-19,
																										-19
																									],
																									"referencedDeclaration": -19,
																									"src": "12987:6:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1651,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12987:50:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1652,
																							"nodeType": "ExpressionStatement",
																							"src": "12987:50:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1656,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1641,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1640,
																				"mutability": "mutable",
																				"name": "response",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1656,
																				"src": "12865:15:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1639,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "12865:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"src": "12864:17:6"
																	},
																	"src": "12856:214:6"
																},
																{
																	"block": {
																		"id": 1664,
																		"nodeType": "Block",
																		"src": "13105:47:6",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1661,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1658,
																							"src": "13130:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1660,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							-19,
																							-19
																						],
																						"referencedDeclaration": -19,
																						"src": "13123:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1662,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13123:14:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1663,
																				"nodeType": "ExpressionStatement",
																				"src": "13123:14:6"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1665,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1659,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1658,
																				"mutability": "mutable",
																				"name": "reason",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1665,
																				"src": "13083:20:6",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1657,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "13083:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"src": "13082:22:6"
																	},
																	"src": "13071:81:6"
																},
																{
																	"block": {
																		"id": 1670,
																		"nodeType": "Block",
																		"src": "13159:95:6",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1667,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13184:54:6",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1666,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							-19,
																							-19
																						],
																						"referencedDeclaration": -19,
																						"src": "13177:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1668,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13177:62:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1669,
																				"nodeType": "ExpressionStatement",
																				"src": "13177:62:6"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1671,
																	"nodeType": "TryCatchClause",
																	"parameters": null,
																	"src": "13153:101:6"
																}
															],
															"externalCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1633,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1613,
																		"src": "12822:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1634,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1615,
																		"src": "12832:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1635,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "12838:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1636,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1621,
																		"src": "12842:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1637,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1623,
																		"src": "12850:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1630,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1617,
																				"src": "12800:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1629,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2067,
																			"src": "12783:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$2067_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12783:20:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$2067",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2048,
																	"src": "12783:38:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12783:72:6",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1672,
															"nodeType": "TryStatement",
															"src": "12779:475:6"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1676,
												"src": "12578:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12578:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1676,
												"src": "12604:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12604:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1676,
												"src": "12626:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12626:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1676,
												"src": "12646:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12646:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1676,
												"src": "12666:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12666:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1676,
												"src": "12690:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12690:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12568:145:6"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12734:0:6"
									},
									"scope": 1772,
									"src": "12529:741:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1742,
										"nodeType": "Block",
										"src": "13506:548:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 1693,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "13520:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2087,
														"src": "13520:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13520:15:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1741,
												"nodeType": "IfStatement",
												"src": "13516:532:6",
												"trueBody": {
													"id": 1740,
													"nodeType": "Block",
													"src": "13537:511:6",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1722,
																		"nodeType": "Block",
																		"src": "13661:193:6",
																		"statements": [
																			{
																				"condition": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1715,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1709,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1707,
																						"src": "13683:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 1711,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1682,
																										"src": "13712:2:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1710,
																									"name": "IERC1155Receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2067,
																									"src": "13695:16:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$2067_$",
																										"typeString": "type(contract IERC1155Receiver)"
																									}
																								},
																								"id": 1712,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13695:20:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC1155Receiver_$2067",
																									"typeString": "contract IERC1155Receiver"
																								}
																							},
																							"id": 1713,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2066,
																							"src": "13695:43:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																								"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																							}
																						},
																						"id": 1714,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": null,
																						"src": "13695:52:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "13683:64:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": null,
																				"id": 1721,
																				"nodeType": "IfStatement",
																				"src": "13679:161:6",
																				"trueBody": {
																					"id": 1720,
																					"nodeType": "Block",
																					"src": "13749:91:6",
																					"statements": [
																						{
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1717,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "13778:42:6",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1716,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										-19,
																										-19
																									],
																									"referencedDeclaration": -19,
																									"src": "13771:6:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1718,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "13771:50:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1719,
																							"nodeType": "ExpressionStatement",
																							"src": "13771:50:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1723,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1708,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1707,
																				"mutability": "mutable",
																				"name": "response",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1723,
																				"src": "13644:15:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1706,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "13644:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"src": "13643:17:6"
																	},
																	"src": "13635:219:6"
																},
																{
																	"block": {
																		"id": 1731,
																		"nodeType": "Block",
																		"src": "13889:47:6",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1728,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1725,
																							"src": "13914:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1727,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							-19,
																							-19
																						],
																						"referencedDeclaration": -19,
																						"src": "13907:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1729,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13907:14:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1730,
																				"nodeType": "ExpressionStatement",
																				"src": "13907:14:6"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1732,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1726,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1725,
																				"mutability": "mutable",
																				"name": "reason",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1732,
																				"src": "13867:20:6",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1724,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "13867:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"src": "13866:22:6"
																	},
																	"src": "13855:81:6"
																},
																{
																	"block": {
																		"id": 1737,
																		"nodeType": "Block",
																		"src": "13943:95:6",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 1734,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13968:54:6",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1733,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							-19,
																							-19
																						],
																						"referencedDeclaration": -19,
																						"src": "13961:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1735,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13961:62:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1736,
																				"nodeType": "ExpressionStatement",
																				"src": "13961:62:6"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1738,
																	"nodeType": "TryCatchClause",
																	"parameters": null,
																	"src": "13937:101:6"
																}
															],
															"externalCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1700,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1678,
																		"src": "13599:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1701,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1680,
																		"src": "13609:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1702,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1685,
																		"src": "13615:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1703,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1688,
																		"src": "13620:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1704,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1690,
																		"src": "13629:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1697,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1682,
																				"src": "13572:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1696,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2067,
																			"src": "13555:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$2067_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13555:20:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$2067",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2066,
																	"src": "13555:43:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13555:79:6",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1739,
															"nodeType": "TryStatement",
															"src": "13551:487:6"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1743,
												"src": "13330:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1743,
												"src": "13356:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1743,
												"src": "13378:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13378:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1743,
												"src": "13398:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1683,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13398:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1684,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "13398:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1743,
												"src": "13428:24:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1686,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "13428:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1687,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "13428:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1743,
												"src": "13462:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1689,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13462:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13320:165:6"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13506:0:6"
									},
									"scope": 1772,
									"src": "13276:778:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1770,
										"nodeType": "Block",
										"src": "14144:109:6",
										"statements": [
											{
												"assignments": [
													1755
												],
												"declarations": [
													{
														"constant": false,
														"id": 1755,
														"mutability": "mutable",
														"name": "array",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1770,
														"src": "14154:22:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1753,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14154:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1754,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "14154:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1761,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14193:1:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "14179:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1756,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14183:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1757,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "14183:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14179:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14154:41:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1762,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1755,
															"src": "14205:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1764,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14211:1:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14205:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1765,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1745,
														"src": "14216:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14205:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1767,
												"nodeType": "ExpressionStatement",
												"src": "14205:18:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1768,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1755,
													"src": "14241:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1750,
												"id": 1769,
												"nodeType": "Return",
												"src": "14234:12:6"
											}
										]
									},
									"documentation": null,
									"id": 1771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "element",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1771,
												"src": "14087:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14087:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14086:17:6"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1771,
												"src": "14126:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1747,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "14126:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1748,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "14126:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14125:18:6"
									},
									"scope": 1772,
									"src": "14060:193:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1773,
							"src": "512:13743:6"
						}
					],
					"src": "33:14223:6"
				},
				"id": 6
			},
			"contracts/contracts/token/ERC1155/ERC1155Burnable.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/token/ERC1155/ERC1155Burnable.sol",
					"exportedSymbols": {
						"ERC1155Burnable": [
							1841
						]
					},
					"id": 1842,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1774,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "contracts/contracts/token/ERC1155/ERC1155.sol",
							"file": "./ERC1155.sol",
							"id": 1775,
							"nodeType": "ImportDirective",
							"scope": 1842,
							"sourceUnit": 1773,
							"src": "58:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1777,
										"name": "ERC1155",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1772,
										"src": "298:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC1155_$1772",
											"typeString": "contract ERC1155"
										}
									},
									"id": 1778,
									"nodeType": "InheritanceSpecifier",
									"src": "298:7:7"
								}
							],
							"contractDependencies": [
								22,
								362,
								374,
								1772,
								2011,
								2026
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1776,
								"nodeType": "StructuredDocumentation",
								"src": "83:177:7",
								"text": " @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use.\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1841,
							"linearizedBaseContracts": [
								1841,
								1772,
								2026,
								2011,
								362,
								374,
								22
							],
							"name": "ERC1155Burnable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1807,
										"nodeType": "Block",
										"src": "385:207:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1788,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1780,
																	"src": "416:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1789,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "427:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 1790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "427:12:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "416:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1793,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1780,
																		"src": "460:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1794,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "469:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 1795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "469:12:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 1792,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "443:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "443:39:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "416:66:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "496:43:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 1787,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "395:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "395:154:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1800,
												"nodeType": "ExpressionStatement",
												"src": "395:154:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1802,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1780,
															"src": "566:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1803,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1782,
															"src": "575:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1804,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "579:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1801,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "560:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "560:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1806,
												"nodeType": "ExpressionStatement",
												"src": "560:25:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "f5298aca",
									"id": 1808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1808,
												"src": "326:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1808,
												"src": "343:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1808,
												"src": "355:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "355:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "325:44:7"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "385:0:7"
									},
									"scope": 1841,
									"src": "312:280:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1839,
										"nodeType": "Block",
										"src": "696:214:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1820,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1810,
																	"src": "727:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1821,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "738:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 1822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "738:12:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "727:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1825,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1810,
																		"src": "771:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1826,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "780:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 1827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "780:12:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 1824,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "754:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "754:39:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "727:66:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "807:43:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 1819,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "706:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "706:154:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1832,
												"nodeType": "ExpressionStatement",
												"src": "706:154:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1834,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "882:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1835,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "891:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1836,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "896:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1833,
														"name": "_burnBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1592,
														"src": "871:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "871:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1838,
												"nodeType": "ExpressionStatement",
												"src": "871:32:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "6b20c454",
									"id": 1840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnBatch",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1840,
												"src": "617:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1840,
												"src": "634:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1811,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "634:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1812,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "634:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "values",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1840,
												"src": "656:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1814,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "656:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1815,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "656:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "616:64:7"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "696:0:7"
									},
									"scope": 1841,
									"src": "598:312:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1842,
							"src": "261:651:7"
						}
					],
					"src": "33:880:7"
				},
				"id": 7
			},
			"contracts/contracts/token/ERC1155/ERC1155Pausable.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/token/ERC1155/ERC1155Pausable.sol",
					"exportedSymbols": {
						"ERC1155Pausable": [
							1889
						]
					},
					"id": 1890,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1843,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "contracts/contracts/token/ERC1155/ERC1155.sol",
							"file": "./ERC1155.sol",
							"id": 1844,
							"nodeType": "ImportDirective",
							"scope": 1890,
							"sourceUnit": 1773,
							"src": "58:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/contracts/utils/Pausable.sol",
							"file": "../../utils/Pausable.sol",
							"id": 1845,
							"nodeType": "ImportDirective",
							"scope": 1890,
							"sourceUnit": 2748,
							"src": "82:34:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1847,
										"name": "ERC1155",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1772,
										"src": "457:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC1155_$1772",
											"typeString": "contract ERC1155"
										}
									},
									"id": 1848,
									"nodeType": "InheritanceSpecifier",
									"src": "457:7:8"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1849,
										"name": "Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2747,
										"src": "466:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Pausable_$2747",
											"typeString": "contract Pausable"
										}
									},
									"id": 1850,
									"nodeType": "InheritanceSpecifier",
									"src": "466:8:8"
								}
							],
							"contractDependencies": [
								22,
								362,
								374,
								1772,
								2011,
								2026,
								2747
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1846,
								"nodeType": "StructuredDocumentation",
								"src": "118:301:8",
								"text": " @dev ERC1155 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1889,
							"linearizedBaseContracts": [
								1889,
								2747,
								1772,
								2026,
								2011,
								362,
								374,
								22
							],
							"name": "ERC1155Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1611
									],
									"body": {
										"id": 1887,
										"nodeType": "Block",
										"src": "855:160:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1872,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1853,
															"src": "892:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1873,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "902:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1874,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "908:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1875,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1860,
															"src": "912:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1876,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "917:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1877,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "926:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1869,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "865:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_ERC1155Pausable_$1889",
																"typeString": "contract super ERC1155Pausable"
															}
														},
														"id": 1871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1611,
														"src": "865:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "865:66:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1879,
												"nodeType": "ExpressionStatement",
												"src": "865:66:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "950:9:8",
															"subExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1881,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2693,
																	"src": "951:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 1882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "951:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135355061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564",
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "961:46:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_382791644f51336ed3667770955aa8eb4efb839029c48708cadb22e92d271435",
																"typeString": "literal_string \"ERC1155Pausable: token transfer while paused\""
															},
															"value": "ERC1155Pausable: token transfer while paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_382791644f51336ed3667770955aa8eb4efb839029c48708cadb22e92d271435",
																"typeString": "literal_string \"ERC1155Pausable: token transfer while paused\""
															}
														],
														"id": 1880,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "942:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:66:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1886,
												"nodeType": "ExpressionStatement",
												"src": "942:66:8"
											}
										]
									},
									"documentation": {
										"id": 1851,
										"nodeType": "StructuredDocumentation",
										"src": "481:136:8",
										"text": " @dev See {ERC1155-_beforeTokenTransfer}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 1888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1867,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "842:8:8"
									},
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1888,
												"src": "661:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1888,
												"src": "687:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1888,
												"src": "709:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1888,
												"src": "729:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1858,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "729:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1859,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "729:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1888,
												"src": "759:24:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1861,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "759:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1862,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "759:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1888,
												"src": "793:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1864,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "651:165:8"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "855:0:8"
									},
									"scope": 1889,
									"src": "622:393:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1890,
							"src": "420:597:8"
						}
					],
					"src": "33:985:8"
				},
				"id": 8
			},
			"contracts/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							2011
						]
					},
					"id": 2012,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1891,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"absolutePath": "contracts/contracts/introspection/IERC165.sol",
							"file": "../../introspection/IERC165.sol",
							"id": 1892,
							"nodeType": "ImportDirective",
							"scope": 2012,
							"sourceUnit": 375,
							"src": "58:41:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1894,
										"name": "IERC165",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 374,
										"src": "289:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC165_$374",
											"typeString": "contract IERC165"
										}
									},
									"id": 1895,
									"nodeType": "InheritanceSpecifier",
									"src": "289:7:9"
								}
							],
							"contractDependencies": [
								374
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1893,
								"nodeType": "StructuredDocumentation",
								"src": "101:165:9",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 2011,
							"linearizedBaseContracts": [
								2011,
								374
							],
							"name": "IERC1155",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1896,
										"nodeType": "StructuredDocumentation",
										"src": "303:121:9",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 1908,
									"name": "TransferSingle",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1908,
												"src": "450:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1908,
												"src": "476:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "476:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1908,
												"src": "498:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1908,
												"src": "518:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1906,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1908,
												"src": "530:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "530:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "449:95:9"
									},
									"src": "429:116:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1909,
										"nodeType": "StructuredDocumentation",
										"src": "551:144:9",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 1923,
									"name": "TransferBatch",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1923,
												"src": "720:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1923,
												"src": "746:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1923,
												"src": "768:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1918,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1923,
												"src": "788:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1916,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "788:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1917,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "788:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1923,
												"src": "803:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1919,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "803:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1920,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "803:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "719:101:9"
									},
									"src": "700:121:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1924,
										"nodeType": "StructuredDocumentation",
										"src": "827:147:9",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 1932,
									"name": "ApprovalForAll",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1932,
												"src": "1000:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1932,
												"src": "1025:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1932,
												"src": "1051:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1929,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1051:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "999:66:9"
									},
									"src": "979:87:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1933,
										"nodeType": "StructuredDocumentation",
										"src": "1072:343:9",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 1939,
									"name": "URI",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1939,
												"src": "1430:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1934,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1430:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1939,
												"src": "1444:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1444:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1429:34:9"
									},
									"src": "1420:44:9"
								},
								{
									"body": null,
									"documentation": {
										"id": 1940,
										"nodeType": "StructuredDocumentation",
										"src": "1470:173:9",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1949,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1949,
												"src": "1667:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1949,
												"src": "1684:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1666:29:9"
									},
									"returnParameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1949,
												"src": "1719:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1719:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1718:9:9"
									},
									"scope": 2011,
									"src": "1648:80:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1950,
										"nodeType": "StructuredDocumentation",
										"src": "1734:188:9",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "accounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1962,
												"src": "1951:27:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1951,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1951:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1952,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1951:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1962,
												"src": "1980:22:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1954,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1980:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1955,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1980:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1950:53:9"
									},
									"returnParameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1962,
												"src": "2027:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1958,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2027:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1959,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2027:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2026:18:9"
									},
									"scope": 2011,
									"src": "1927:118:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1963,
										"nodeType": "StructuredDocumentation",
										"src": "2051:248:9",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1970,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1970,
												"src": "2331:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1970,
												"src": "2349:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2349:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2330:33:9"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2372:0:9"
									},
									"scope": 2011,
									"src": "2304:69:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1971,
										"nodeType": "StructuredDocumentation",
										"src": "2379:135:9",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1980,
												"src": "2545:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2545:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1980,
												"src": "2562:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2562:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2544:35:9"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1980,
												"src": "2603:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1977,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2603:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2602:6:9"
									},
									"scope": 2011,
									"src": "2519:90:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "2615:559:9",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1994,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1994,
												"src": "3205:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1994,
												"src": "3219:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1994,
												"src": "3231:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3231:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1994,
												"src": "3243:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3243:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1994,
												"src": "3259:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1990,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3259:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3204:75:9"
									},
									"returnParameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3288:0:9"
									},
									"scope": 2011,
									"src": "3179:110:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1995,
										"nodeType": "StructuredDocumentation",
										"src": "3295:390:9",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 2010,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2010,
												"src": "3721:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3721:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2010,
												"src": "3735:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3735:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2010,
												"src": "3747:22:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2000,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3747:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2001,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3747:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2010,
												"src": "3771:26:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2003,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3771:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2004,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "3771:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2010,
												"src": "3799:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2006,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3799:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3720:99:9"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3828:0:9"
									},
									"scope": 2011,
									"src": "3690:139:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2012,
							"src": "267:3564:9"
						}
					],
					"src": "33:3799:9"
				},
				"id": 9
			},
			"contracts/contracts/token/ERC1155/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/token/ERC1155/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155MetadataURI": [
							2026
						]
					},
					"id": 2027,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2013,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:10"
						},
						{
							"absolutePath": "contracts/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 2014,
							"nodeType": "ImportDirective",
							"scope": 2027,
							"sourceUnit": 2012,
							"src": "58:24:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2016,
										"name": "IERC1155",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2011,
										"src": "312:8:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1155_$2011",
											"typeString": "contract IERC1155"
										}
									},
									"id": 2017,
									"nodeType": "InheritanceSpecifier",
									"src": "312:8:10"
								}
							],
							"contractDependencies": [
								374,
								2011
							],
							"contractKind": "interface",
							"documentation": {
								"id": 2015,
								"nodeType": "StructuredDocumentation",
								"src": "84:194:10",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 2026,
							"linearizedBaseContracts": [
								2026,
								2011,
								374
							],
							"name": "IERC1155MetadataURI",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 2018,
										"nodeType": "StructuredDocumentation",
										"src": "327:192:10",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 2025,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2025,
												"src": "537:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "536:12:10"
									},
									"returnParameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2025,
												"src": "572:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2022,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "572:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "571:15:10"
									},
									"scope": 2026,
									"src": "524:63:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2027,
							"src": "279:310:10"
						}
					],
					"src": "33:557:10"
				},
				"id": 10
			},
			"contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							2067
						]
					},
					"id": 2068,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2028,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"absolutePath": "contracts/contracts/introspection/IERC165.sol",
							"file": "../../introspection/IERC165.sol",
							"id": 2029,
							"nodeType": "ImportDirective",
							"scope": 2068,
							"sourceUnit": 375,
							"src": "58:41:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2031,
										"name": "IERC165",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 374,
										"src": "166:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC165_$374",
											"typeString": "contract IERC165"
										}
									},
									"id": 2032,
									"nodeType": "InheritanceSpecifier",
									"src": "166:7:11"
								}
							],
							"contractDependencies": [
								374
							],
							"contractKind": "interface",
							"documentation": {
								"id": 2030,
								"nodeType": "StructuredDocumentation",
								"src": "101:34:11",
								"text": " _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 2067,
							"linearizedBaseContracts": [
								2067,
								374
							],
							"name": "IERC1155Receiver",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 2033,
										"nodeType": "StructuredDocumentation",
										"src": "181:816:11",
										"text": "@dev Handles the receipt of a single ERC1155 token type. This function is\ncalled at the end of a `safeTransferFrom` after the balance has been updated.\nTo accept the transfer, this must return\n`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n(i.e. 0xf23a6e61, or its own function selector).\n@param operator The address which initiated the transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param id The ID of the token being transferred\n@param value The amount of tokens being transferred\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 2048,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2048,
												"src": "1038:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1038:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2048,
												"src": "1064:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1064:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2048,
												"src": "1086:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2048,
												"src": "1106:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1106:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2048,
												"src": "1129:19:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2042,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1129:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1028:126:11"
									},
									"returnParameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2048,
												"src": "1188:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2045,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1188:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1187:8:11"
									},
									"scope": 2067,
									"src": "1002:194:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 2049,
										"nodeType": "StructuredDocumentation",
										"src": "1202:977:11",
										"text": "@dev Handles the receipt of a multiple ERC1155 token types. This function\nis called at the end of a `safeBatchTransferFrom` after the balances have\nbeen updated. To accept the transfer(s), this must return\n`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n(i.e. 0xbc197c81, or its own function selector).\n@param operator The address which initiated the batch transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param ids An array containing ids of each token being transferred (order and length must match values array)\n@param values An array containing amounts of each token being transferred (order and length must match ids array)\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 2066,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2066,
												"src": "2225:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2066,
												"src": "2251:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2251:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2066,
												"src": "2273:22:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2054,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2273:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2055,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2273:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "values",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2066,
												"src": "2305:25:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2057,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2305:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2058,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "2305:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2066,
												"src": "2340:19:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2060,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2340:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2215:150:11"
									},
									"returnParameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2066,
												"src": "2399:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2063,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2399:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2398:8:11"
									},
									"scope": 2067,
									"src": "2184:223:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2068,
							"src": "136:2273:11"
						}
					],
					"src": "33:2377:11"
				},
				"id": 11
			},
			"contracts/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2262
						]
					},
					"id": 2263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2069,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2070,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:12",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2262,
							"linearizedBaseContracts": [
								2262
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2086,
										"nodeType": "Block",
										"src": "784:347:12",
										"statements": [
											{
												"assignments": [
													2079
												],
												"declarations": [
													{
														"constant": false,
														"id": 2079,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2086,
														"src": "981:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2078,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2080,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1068:32:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1070:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1090:7:12"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1078:11:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "1078:20:12"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1070:4:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2073,
														"isOffset": false,
														"isSlot": false,
														"src": "1090:7:12",
														"valueSize": 1
													},
													{
														"declaration": 2079,
														"isOffset": false,
														"isSlot": false,
														"src": "1070:4:12",
														"valueSize": 1
													}
												],
												"id": 2081,
												"nodeType": "InlineAssembly",
												"src": "1059:41:12"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2082,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2079,
														"src": "1116:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2083,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1123:1:12",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1116:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2077,
												"id": 2085,
												"nodeType": "Return",
												"src": "1109:15:12"
											}
										]
									},
									"documentation": {
										"id": 2071,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:12",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 2087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2087,
												"src": "738:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "737:17:12"
									},
									"returnParameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2087,
												"src": "778:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2075,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "777:6:12"
									},
									"scope": 2262,
									"src": "718:413:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2120,
										"nodeType": "Block",
										"src": "2119:320:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2098,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2145:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2262",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2262",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2137:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2096,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2137:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2137:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2137:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2101,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2092,
																"src": "2162:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2137:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2170:31:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 2095,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2129:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2129:73:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2105,
												"nodeType": "ExpressionStatement",
												"src": "2129:73:12"
											},
											{
												"assignments": [
													2107,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2107,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2120,
														"src": "2291:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2106,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2291:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 2114,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 2112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:2:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 2108,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2090,
																"src": "2309:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2309:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 2110,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2092,
																"src": "2332:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2309:31:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2290:54:12"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2116,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2107,
															"src": "2362:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2371:60:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 2115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2354:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2354:78:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2119,
												"nodeType": "ExpressionStatement",
												"src": "2354:78:12"
											}
										]
									},
									"documentation": {
										"id": 2088,
										"nodeType": "StructuredDocumentation",
										"src": "1137:906:12",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2121,
												"src": "2067:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2067:15:12",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2121,
												"src": "2094:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2066:43:12"
									},
									"returnParameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2119:0:12"
									},
									"scope": 2262,
									"src": "2048:391:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2137,
										"nodeType": "Block",
										"src": "3269:82:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2132,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2124,
															"src": "3297:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2133,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2126,
															"src": "3305:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3311:32:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 2131,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2138,
															2158
														],
														"referencedDeclaration": 2158,
														"src": "3284:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3284:60:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2130,
												"id": 2136,
												"nodeType": "Return",
												"src": "3277:67:12"
											}
										]
									},
									"documentation": {
										"id": 2122,
										"nodeType": "StructuredDocumentation",
										"src": "2445:730:12",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 2138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2138,
												"src": "3202:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2138,
												"src": "3218:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2125,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3218:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3201:35:12"
									},
									"returnParameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2138,
												"src": "3255:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2128,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3255:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3254:14:12"
									},
									"scope": 2262,
									"src": "3180:171:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2157,
										"nodeType": "Block",
										"src": "3690:77:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2151,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2141,
															"src": "3730:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2152,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2143,
															"src": "3738:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3744:1:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 2154,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2145,
															"src": "3747:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2150,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2261,
														"src": "3707:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3707:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2149,
												"id": 2156,
												"nodeType": "Return",
												"src": "3700:60:12"
											}
										]
									},
									"documentation": {
										"id": 2139,
										"nodeType": "StructuredDocumentation",
										"src": "3357:211:12",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2158,
												"src": "3595:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3595:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2158,
												"src": "3611:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3611:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2158,
												"src": "3630:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2144,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3630:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3594:63:12"
									},
									"returnParameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2158,
												"src": "3676:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2147,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3676:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3675:14:12"
									},
									"scope": 2262,
									"src": "3573:194:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2177,
										"nodeType": "Block",
										"src": "4242:111:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2171,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2161,
															"src": "4281:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2172,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2163,
															"src": "4289:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2173,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2165,
															"src": "4295:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 2174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 2170,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2178,
															2211
														],
														"referencedDeclaration": 2211,
														"src": "4259:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2169,
												"id": 2176,
												"nodeType": "Return",
												"src": "4252:94:12"
											}
										]
									},
									"documentation": {
										"id": 2159,
										"nodeType": "StructuredDocumentation",
										"src": "3773:351:12",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 2178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2178,
												"src": "4160:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4160:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2178,
												"src": "4176:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4176:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2178,
												"src": "4195:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4195:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4159:50:12"
									},
									"returnParameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2178,
												"src": "4228:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4227:14:12"
									},
									"scope": 2262,
									"src": "4129:224:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2210,
										"nodeType": "Block",
										"src": "4742:172:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2195,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4768:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2262",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2262",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4760:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2193,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4760:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4760:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4760:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2198,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2185,
																"src": "4785:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4760:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 2200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4792:40:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 2192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4752:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4752:81:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2202,
												"nodeType": "ExpressionStatement",
												"src": "4752:81:12"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2204,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2181,
															"src": "4873:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2205,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2183,
															"src": "4881:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2206,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2185,
															"src": "4887:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2207,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2187,
															"src": "4894:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2203,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2261,
														"src": "4850:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4850:57:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2191,
												"id": 2209,
												"nodeType": "Return",
												"src": "4843:64:12"
											}
										]
									},
									"documentation": {
										"id": 2179,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:12",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2211,
												"src": "4632:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4632:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2211,
												"src": "4648:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2182,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4648:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2211,
												"src": "4667:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4667:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2211,
												"src": "4682:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2186,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4682:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4631:78:12"
									},
									"returnParameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2211,
												"src": "4728:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2189,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4728:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4727:14:12"
									},
									"scope": 2262,
									"src": "4601:313:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2260,
										"nodeType": "Block",
										"src": "5064:814:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2226,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "5093:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2225,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2087,
																"src": "5082:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5082:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5102:31:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 2224,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5074:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5074:60:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2230,
												"nodeType": "ExpressionStatement",
												"src": "5074:60:12"
											},
											{
												"assignments": [
													2232,
													2234
												],
												"declarations": [
													{
														"constant": false,
														"id": 2232,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2260,
														"src": "5205:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2231,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5205:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2234,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2260,
														"src": "5219:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2233,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5219:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2241,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2239,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "5277:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 2235,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2213,
																"src": "5246:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5246:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 2237,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2217,
																"src": "5266:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5246:30:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5246:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5204:78:12"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 2242,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2232,
													"src": "5296:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2258,
													"nodeType": "Block",
													"src": "5353:519:12",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2246,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2234,
																		"src": "5437:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5437:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5457:1:12",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5437:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2256,
																"nodeType": "Block",
																"src": "5809:53:12",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2253,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2219,
																					"src": "5834:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2252,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "5827:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5827:20:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2255,
																		"nodeType": "ExpressionStatement",
																		"src": "5827:20:12"
																	}
																]
															},
															"id": 2257,
															"nodeType": "IfStatement",
															"src": "5433:429:12",
															"trueBody": {
																"id": 2251,
																"nodeType": "Block",
																"src": "5460:343:12",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "5644:145:12",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "5666:40:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "5695:10:12"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "5689:5:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5689:17:12"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "5670:15:12",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5738:2:12",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "5742:10:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5734:3:12"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5734:19:12"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "5755:15:12"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "5727:6:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5727:44:12"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5727:44:12"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 2234,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "5695:10:12",
																				"valueSize": 1
																			},
																			{
																				"declaration": 2234,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "5742:10:12",
																				"valueSize": 1
																			}
																		],
																		"id": 2250,
																		"nodeType": "InlineAssembly",
																		"src": "5635:154:12"
																	}
																]
															}
														}
													]
												},
												"id": 2259,
												"nodeType": "IfStatement",
												"src": "5292:580:12",
												"trueBody": {
													"id": 2245,
													"nodeType": "Block",
													"src": "5305:42:12",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2243,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "5326:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2223,
															"id": 2244,
															"nodeType": "Return",
															"src": "5319:17:12"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 2261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2261,
												"src": "4952:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4952:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2261,
												"src": "4968:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4968:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2261,
												"src": "4987:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4987:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2261,
												"src": "5005:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2218,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4951:81:12"
									},
									"returnParameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2261,
												"src": "5050:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2221,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5050:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5049:14:12"
									},
									"scope": 2262,
									"src": "4920:958:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2263,
							"src": "126:5754:12"
						}
					],
					"src": "33:5848:12"
				},
				"id": 12
			},
			"contracts/contracts/utils/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/utils/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							2657
						]
					},
					"id": 2658,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2264,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2265,
								"nodeType": "StructuredDocumentation",
								"src": "58:665:13",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`\n (`UintSet`) are supported."
							},
							"fullyImplemented": true,
							"id": 2657,
							"linearizedBaseContracts": [
								2657
							],
							"name": "EnumerableSet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 2273,
									"members": [
										{
											"constant": false,
											"id": 2268,
											"mutability": "mutable",
											"name": "_values",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2273,
											"src": "1246:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 2266,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1246:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2267,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "1246:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2272,
											"mutability": "mutable",
											"name": "_indexes",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2273,
											"src": "1397:37:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 2271,
												"keyType": {
													"id": 2269,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1397:28:13",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 2270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nodeType": "StructDefinition",
									"scope": 2657,
									"src": "1192:249:13",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2313,
										"nodeType": "Block",
										"src": "1680:335:13",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1694:22:13",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2284,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2276,
																"src": "1705:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"argumentTypes": null,
																"id": 2285,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "1710:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2283,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2412,
															"src": "1695:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2273_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 2286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1695:21:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2311,
													"nodeType": "Block",
													"src": "1972:37:13",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 2309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1993:5:13",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2282,
															"id": 2310,
															"nodeType": "Return",
															"src": "1986:12:13"
														}
													]
												},
												"id": 2312,
												"nodeType": "IfStatement",
												"src": "1690:319:13",
												"trueBody": {
													"id": 2308,
													"nodeType": "Block",
													"src": "1718:248:13",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2293,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "1749:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2288,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2276,
																			"src": "1732:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2291,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2268,
																		"src": "1732:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1732:16:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32)"
																	}
																},
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1732:23:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2295,
															"nodeType": "ExpressionStatement",
															"src": "1732:23:13"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2296,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2276,
																			"src": "1890:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2299,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2272,
																		"src": "1890:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 2300,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2298,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "1903:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1890:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2301,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2276,
																			"src": "1912:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2302,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2268,
																		"src": "1912:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1912:18:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1890:40:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2305,
															"nodeType": "ExpressionStatement",
															"src": "1890:40:13"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1951:4:13",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2282,
															"id": 2307,
															"nodeType": "Return",
															"src": "1944:11:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2274,
										"nodeType": "StructuredDocumentation",
										"src": "1447:159:13",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2314,
												"src": "1625:15:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 2275,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2273,
													"src": "1625:3:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2314,
												"src": "1642:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2277,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1642:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1624:32:13"
									},
									"returnParameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2314,
												"src": "1674:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2280,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1674:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1673:6:13"
									},
									"scope": 2657,
									"src": "1611:404:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2393,
										"nodeType": "Block",
										"src": "2255:1440:13",
										"statements": [
											{
												"assignments": [
													2325
												],
												"declarations": [
													{
														"constant": false,
														"id": 2325,
														"mutability": "mutable",
														"name": "valueIndex",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2393,
														"src": "2365:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2324,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2365:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2330,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2326,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2317,
															"src": "2386:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 2327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2272,
														"src": "2386:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 2329,
													"indexExpression": {
														"argumentTypes": null,
														"id": 2328,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2319,
														"src": "2399:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2386:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2365:40:13"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2331,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2325,
														"src": "2420:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2332,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2434:1:13",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2420:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2391,
													"nodeType": "Block",
													"src": "3652:37:13",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3673:5:13",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2323,
															"id": 2390,
															"nodeType": "Return",
															"src": "3666:12:13"
														}
													]
												},
												"id": 2392,
												"nodeType": "IfStatement",
												"src": "2416:1273:13",
												"trueBody": {
													"id": 2388,
													"nodeType": "Block",
													"src": "2437:1209:13",
													"statements": [
														{
															"assignments": [
																2335
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2335,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2388,
																	"src": "2777:21:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2334,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2777:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2339,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2336,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2325,
																	"src": "2801:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 2337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2814:1:13",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2801:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2777:38:13"
														},
														{
															"assignments": [
																2341
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2341,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2388,
																	"src": "2829:17:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2340,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2829:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2347,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2342,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2317,
																			"src": "2849:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2343,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2268,
																		"src": "2849:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2849:18:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 2345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2870:1:13",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2849:22:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2829:42:13"
														},
														{
															"assignments": [
																2349
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2349,
																	"mutability": "mutable",
																	"name": "lastvalue",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2388,
																	"src": "3111:17:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 2348,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "3111:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2354,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2350,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2317,
																		"src": "3131:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 2351,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2268,
																	"src": "3131:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 2353,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 2352,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2341,
																	"src": "3143:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3131:22:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3111:42:13"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2355,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2317,
																			"src": "3245:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2358,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2268,
																		"src": "3245:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2359,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2357,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2335,
																		"src": "3257:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3245:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 2360,
																	"name": "lastvalue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2349,
																	"src": "3274:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "3245:38:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2362,
															"nodeType": "ExpressionStatement",
															"src": "3245:38:13"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2363,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2317,
																			"src": "3349:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2366,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2272,
																		"src": "3349:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 2367,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2365,
																		"name": "lastvalue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2349,
																		"src": "3362:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3349:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 2368,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2335,
																		"src": "3375:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 2369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3391:1:13",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3375:17:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3349:43:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2372,
															"nodeType": "ExpressionStatement",
															"src": "3349:43:13"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2373,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2317,
																			"src": "3498:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2268,
																		"src": "3498:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3498:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3498:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2379,
															"nodeType": "ExpressionStatement",
															"src": "3498:17:13"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3583:26:13",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2380,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2317,
																			"src": "3590:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2381,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2272,
																		"src": "3590:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 2383,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2382,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2319,
																		"src": "3603:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3590:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2385,
															"nodeType": "ExpressionStatement",
															"src": "3583:26:13"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 2386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3631:4:13",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2323,
															"id": 2387,
															"nodeType": "Return",
															"src": "3624:11:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2315,
										"nodeType": "StructuredDocumentation",
										"src": "2021:157:13",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2394,
												"src": "2200:15:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 2316,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2273,
													"src": "2200:3:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2394,
												"src": "2217:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2318,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2199:32:13"
									},
									"returnParameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2394,
												"src": "2249:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2321,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2249:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2248:6:13"
									},
									"scope": 2657,
									"src": "2183:1512:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2411,
										"nodeType": "Block",
										"src": "3855:48:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2404,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2397,
																"src": "3872:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 2405,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2272,
															"src": "3872:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 2407,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2406,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2399,
															"src": "3885:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3872:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3895:1:13",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3872:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2403,
												"id": 2410,
												"nodeType": "Return",
												"src": "3865:31:13"
											}
										]
									},
									"documentation": {
										"id": 2395,
										"nodeType": "StructuredDocumentation",
										"src": "3701:70:13",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2412,
												"src": "3795:15:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 2396,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2273,
													"src": "3795:3:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2412,
												"src": "3812:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2398,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3812:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3794:32:13"
									},
									"returnParameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2412,
												"src": "3849:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2401,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3849:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3848:6:13"
									},
									"scope": 2657,
									"src": "3776:127:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2424,
										"nodeType": "Block",
										"src": "4049:42:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2420,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2415,
															"src": "4066:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 2421,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2268,
														"src": "4066:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 2422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4066:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2419,
												"id": 2423,
												"nodeType": "Return",
												"src": "4059:25:13"
											}
										]
									},
									"documentation": {
										"id": 2413,
										"nodeType": "StructuredDocumentation",
										"src": "3909:70:13",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 2425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2425,
												"src": "4001:15:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 2414,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2273,
													"src": "4001:3:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4000:17:13"
									},
									"returnParameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2425,
												"src": "4040:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4040:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4039:9:13"
									},
									"scope": 2657,
									"src": "3984:107:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2449,
										"nodeType": "Block",
										"src": "4499:125:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2436,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2428,
																		"src": "4517:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 2437,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2268,
																	"src": "4517:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 2438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4517:18:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2439,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2430,
																"src": "4538:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4517:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4545:36:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															},
															"value": "EnumerableSet: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															}
														],
														"id": 2435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4509:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4509:73:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2443,
												"nodeType": "ExpressionStatement",
												"src": "4509:73:13"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2444,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2428,
															"src": "4599:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 2445,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2268,
														"src": "4599:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 2447,
													"indexExpression": {
														"argumentTypes": null,
														"id": 2446,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2430,
														"src": "4611:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4599:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2434,
												"id": 2448,
												"nodeType": "Return",
												"src": "4592:25:13"
											}
										]
									},
									"documentation": {
										"id": 2426,
										"nodeType": "StructuredDocumentation",
										"src": "4096:322:13",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2450,
												"src": "4436:15:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 2427,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2273,
													"src": "4436:3:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2450,
												"src": "4453:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4435:32:13"
									},
									"returnParameters": {
										"id": 2434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2450,
												"src": "4490:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2432,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4489:9:13"
									},
									"scope": 2657,
									"src": "4423:201:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 2453,
									"members": [
										{
											"constant": false,
											"id": 2452,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2453,
											"src": "4677:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 2451,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 2273,
												"src": "4677:3:13",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nodeType": "StructDefinition",
									"scope": 2657,
									"src": "4649:45:13",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2475,
										"nodeType": "Block",
										"src": "4940:65:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2464,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2456,
																"src": "4962:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2453_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2465,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2452,
															"src": "4962:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2273_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2470,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2458,
																			"src": "4990:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4982:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2468,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4982:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4982:14:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4974:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2466,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4974:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4974:23:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2273_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2463,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2314,
														"src": "4957:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2273_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4957:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2462,
												"id": 2474,
												"nodeType": "Return",
												"src": "4950:48:13"
											}
										]
									},
									"documentation": {
										"id": 2454,
										"nodeType": "StructuredDocumentation",
										"src": "4700:159:13",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2476,
												"src": "4877:22:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2453_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2455,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2453,
													"src": "4877:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2453_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2476,
												"src": "4901:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4901:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4876:39:13"
									},
									"returnParameters": {
										"id": 2462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2461,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2476,
												"src": "4934:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2460,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4934:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4933:6:13"
									},
									"scope": 2657,
									"src": "4864:141:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2498,
										"nodeType": "Block",
										"src": "5252:68:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2487,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2479,
																"src": "5277:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2453_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2488,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2452,
															"src": "5277:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2273_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2493,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2481,
																			"src": "5305:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5297:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2491,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5297:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5297:14:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5289:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2489,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5289:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5289:23:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2273_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2486,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2394,
														"src": "5269:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2273_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5269:44:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2485,
												"id": 2497,
												"nodeType": "Return",
												"src": "5262:51:13"
											}
										]
									},
									"documentation": {
										"id": 2477,
										"nodeType": "StructuredDocumentation",
										"src": "5011:157:13",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2499,
												"src": "5189:22:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2453_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2478,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2453,
													"src": "5189:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2453_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2499,
												"src": "5213:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5213:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5188:39:13"
									},
									"returnParameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2499,
												"src": "5246:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2483,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5246:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5245:6:13"
									},
									"scope": 2657,
									"src": "5173:147:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2521,
										"nodeType": "Block",
										"src": "5487:70:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2510,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2502,
																"src": "5514:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2453_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2511,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2452,
															"src": "5514:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2273_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2516,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2504,
																			"src": "5542:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5534:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2514,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5534:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 2517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5534:14:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5526:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2512,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5526:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5526:23:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2273_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2509,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2412,
														"src": "5504:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2273_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5504:46:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2508,
												"id": 2520,
												"nodeType": "Return",
												"src": "5497:53:13"
											}
										]
									},
									"documentation": {
										"id": 2500,
										"nodeType": "StructuredDocumentation",
										"src": "5326:70:13",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2522,
												"src": "5419:22:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2453_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2501,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2453,
													"src": "5419:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2453_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2522,
												"src": "5443:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5443:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5418:39:13"
									},
									"returnParameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2522,
												"src": "5481:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2506,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5481:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5480:6:13"
									},
									"scope": 2657,
									"src": "5401:156:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2535,
										"nodeType": "Block",
										"src": "5710:43:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2531,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "5735:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2453_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2532,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2452,
															"src": "5735:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2273_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2273_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2530,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2425,
														"src": "5727:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2273_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5727:19:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2529,
												"id": 2534,
												"nodeType": "Return",
												"src": "5720:26:13"
											}
										]
									},
									"documentation": {
										"id": 2523,
										"nodeType": "StructuredDocumentation",
										"src": "5563:70:13",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 2536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2536,
												"src": "5654:22:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2453_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2524,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2453,
													"src": "5654:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2453_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5653:24:13"
									},
									"returnParameters": {
										"id": 2529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2536,
												"src": "5701:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5700:9:13"
									},
									"scope": 2657,
									"src": "5638:115:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2558,
										"nodeType": "Block",
										"src": "6168:64:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2551,
																				"name": "set",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2539,
																				"src": "6205:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AddressSet_$2453_storage_ptr",
																					"typeString": "struct EnumerableSet.AddressSet storage pointer"
																				}
																			},
																			"id": 2552,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "_inner",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2452,
																			"src": "6205:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2273_storage",
																				"typeString": "struct EnumerableSet.Set storage ref"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 2553,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "6217:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_Set_$2273_storage",
																				"typeString": "struct EnumerableSet.Set storage ref"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2550,
																		"name": "_at",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2450,
																		"src": "6201:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2273_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																			"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																		}
																	},
																	"id": 2554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6201:22:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6193:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2548,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6193:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6193:31:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6185:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2546,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6185:7:13",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 2556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6185:40:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 2545,
												"id": 2557,
												"nodeType": "Return",
												"src": "6178:47:13"
											}
										]
									},
									"documentation": {
										"id": 2537,
										"nodeType": "StructuredDocumentation",
										"src": "5758:322:13",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2559,
												"src": "6097:22:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2453_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2538,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2453,
													"src": "6097:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2453_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2559,
												"src": "6121:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6121:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6096:39:13"
									},
									"returnParameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2559,
												"src": "6159:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6159:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6158:9:13"
									},
									"scope": 2657,
									"src": "6085:147:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 2562,
									"members": [
										{
											"constant": false,
											"id": 2561,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 2562,
											"src": "6280:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 2560,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 2273,
												"src": "6280:3:13",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2273_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nodeType": "StructDefinition",
									"scope": 2657,
									"src": "6255:42:13",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2581,
										"nodeType": "Block",
										"src": "6540:56:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2573,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2565,
																"src": "6562:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2562_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2574,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2561,
															"src": "6562:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2273_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2577,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2567,
																	"src": "6582:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6574:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2575,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6574:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6574:14:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2273_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2572,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2314,
														"src": "6557:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2273_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6557:32:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2571,
												"id": 2580,
												"nodeType": "Return",
												"src": "6550:39:13"
											}
										]
									},
									"documentation": {
										"id": 2563,
										"nodeType": "StructuredDocumentation",
										"src": "6303:159:13",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2582,
												"src": "6480:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2562_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2564,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2562,
													"src": "6480:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2562_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2582,
												"src": "6501:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6501:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6479:36:13"
									},
									"returnParameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2582,
												"src": "6534:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2569,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6534:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6533:6:13"
									},
									"scope": 2657,
									"src": "6467:129:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2601,
										"nodeType": "Block",
										"src": "6840:59:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2593,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2585,
																"src": "6865:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2562_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2594,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2561,
															"src": "6865:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2273_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2597,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2587,
																	"src": "6885:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2596,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6877:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2595,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6877:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6877:14:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2273_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2592,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2394,
														"src": "6857:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2273_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6857:35:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2591,
												"id": 2600,
												"nodeType": "Return",
												"src": "6850:42:13"
											}
										]
									},
									"documentation": {
										"id": 2583,
										"nodeType": "StructuredDocumentation",
										"src": "6602:157:13",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2602,
												"src": "6780:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2562_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2584,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2562,
													"src": "6780:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2562_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2587,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2602,
												"src": "6801:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6801:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6779:36:13"
									},
									"returnParameters": {
										"id": 2591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2602,
												"src": "6834:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2589,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6834:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6833:6:13"
									},
									"scope": 2657,
									"src": "6764:135:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2621,
										"nodeType": "Block",
										"src": "7063:61:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2613,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2605,
																"src": "7090:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2562_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2614,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2561,
															"src": "7090:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2273_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2617,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2607,
																	"src": "7110:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7102:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2615,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7102:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7102:14:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2273_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2612,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2412,
														"src": "7080:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2273_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7080:37:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2611,
												"id": 2620,
												"nodeType": "Return",
												"src": "7073:44:13"
											}
										]
									},
									"documentation": {
										"id": 2603,
										"nodeType": "StructuredDocumentation",
										"src": "6905:70:13",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2622,
												"src": "6998:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2562_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2604,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2562,
													"src": "6998:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2562_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2622,
												"src": "7019:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7019:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6997:36:13"
									},
									"returnParameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2622,
												"src": "7057:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2609,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7057:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7056:6:13"
									},
									"scope": 2657,
									"src": "6980:144:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2635,
										"nodeType": "Block",
										"src": "7274:43:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2631,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2625,
																"src": "7299:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2562_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2632,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2561,
															"src": "7299:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2273_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2273_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2630,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2425,
														"src": "7291:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2273_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7291:19:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2629,
												"id": 2634,
												"nodeType": "Return",
												"src": "7284:26:13"
											}
										]
									},
									"documentation": {
										"id": 2623,
										"nodeType": "StructuredDocumentation",
										"src": "7130:70:13",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 2636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2636,
												"src": "7221:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2562_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2624,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2562,
													"src": "7221:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2562_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7220:21:13"
									},
									"returnParameters": {
										"id": 2629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2636,
												"src": "7265:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7265:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7264:9:13"
									},
									"scope": 2657,
									"src": "7205:112:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2655,
										"nodeType": "Block",
										"src": "7729:55:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2649,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2639,
																		"src": "7758:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$2562_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 2650,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2561,
																	"src": "7758:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$2273_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2651,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2641,
																	"src": "7770:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$2273_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2648,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2450,
																"src": "7754:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2273_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 2652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7754:22:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7746:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2646,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7746:7:13",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 2653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7746:31:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2645,
												"id": 2654,
												"nodeType": "Return",
												"src": "7739:38:13"
											}
										]
									},
									"documentation": {
										"id": 2637,
										"nodeType": "StructuredDocumentation",
										"src": "7322:322:13",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2656,
												"src": "7661:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2562_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 2638,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2562,
													"src": "7661:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2562_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2641,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2656,
												"src": "7682:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7682:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7660:36:13"
									},
									"returnParameters": {
										"id": 2645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2656,
												"src": "7720:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7720:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7719:9:13"
									},
									"scope": 2657,
									"src": "7649:135:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2658,
							"src": "724:7062:13"
						}
					],
					"src": "33:7754:13"
				},
				"id": 13
			},
			"contracts/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "contracts/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Pausable": [
							2747
						]
					},
					"id": 2748,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2659,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:14"
						},
						{
							"absolutePath": "contracts/contracts/GSN/Context.sol",
							"file": "../GSN/Context.sol",
							"id": 2660,
							"nodeType": "ImportDirective",
							"scope": 2748,
							"sourceUnit": 23,
							"src": "58:28:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2662,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "549:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 2663,
									"nodeType": "InheritanceSpecifier",
									"src": "549:7:14"
								}
							],
							"contractDependencies": [
								22
							],
							"contractKind": "contract",
							"documentation": {
								"id": 2661,
								"nodeType": "StructuredDocumentation",
								"src": "88:439:14",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 2747,
							"linearizedBaseContracts": [
								2747,
								22
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2664,
										"nodeType": "StructuredDocumentation",
										"src": "563:73:14",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 2668,
									"name": "Paused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2666,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2668,
												"src": "654:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "653:17:14"
									},
									"src": "641:30:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2669,
										"nodeType": "StructuredDocumentation",
										"src": "677:70:14",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 2673,
									"name": "Unpaused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2671,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2673,
												"src": "767:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "766:17:14"
									},
									"src": "752:32:14"
								},
								{
									"constant": false,
									"id": 2675,
									"mutability": "mutable",
									"name": "_paused",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2747,
									"src": "790:20:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2674,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "790:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2683,
										"nodeType": "Block",
										"src": "913:32:14",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2679,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2675,
														"src": "923:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 2680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "933:5:14",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "923:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2682,
												"nodeType": "ExpressionStatement",
												"src": "923:15:14"
											}
										]
									},
									"documentation": {
										"id": 2676,
										"nodeType": "StructuredDocumentation",
										"src": "817:67:14",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 2684,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "901:2:14"
									},
									"returnParameters": {
										"id": 2678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:0:14"
									},
									"scope": 2747,
									"src": "889:56:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2692,
										"nodeType": "Block",
										"src": "1085:31:14",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2690,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2675,
													"src": "1102:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2689,
												"id": 2691,
												"nodeType": "Return",
												"src": "1095:14:14"
											}
										]
									},
									"documentation": {
										"id": 2685,
										"nodeType": "StructuredDocumentation",
										"src": "951:84:14",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 2693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:2:14"
									},
									"returnParameters": {
										"id": 2689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2688,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2693,
												"src": "1079:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2687,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1079:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1078:6:14"
									},
									"scope": 2747,
									"src": "1040:76:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2703,
										"nodeType": "Block",
										"src": "1327:65:14",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1345:8:14",
															"subExpression": {
																"argumentTypes": null,
																"id": 2697,
																"name": "_paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2675,
																"src": "1346:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5061757361626c653a20706175736564",
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1355:18:14",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 2696,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1337:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1337:37:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2701,
												"nodeType": "ExpressionStatement",
												"src": "1337:37:14"
											},
											{
												"id": 2702,
												"nodeType": "PlaceholderStatement",
												"src": "1384:1:14"
											}
										]
									},
									"documentation": {
										"id": 2694,
										"nodeType": "StructuredDocumentation",
										"src": "1122:175:14",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2704,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1324:2:14"
									},
									"src": "1302:90:14",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2713,
										"nodeType": "Block",
										"src": "1592:68:14",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2708,
															"name": "_paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "1610:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 2709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1619:22:14",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 2707,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1602:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1602:40:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2711,
												"nodeType": "ExpressionStatement",
												"src": "1602:40:14"
											},
											{
												"id": 2712,
												"nodeType": "PlaceholderStatement",
												"src": "1652:1:14"
											}
										]
									},
									"documentation": {
										"id": 2705,
										"nodeType": "StructuredDocumentation",
										"src": "1398:167:14",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 2714,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1589:2:14"
									},
									"src": "1570:90:14",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2729,
										"nodeType": "Block",
										"src": "1844:66:14",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2720,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2675,
														"src": "1854:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 2721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1864:4:14",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1854:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2723,
												"nodeType": "ExpressionStatement",
												"src": "1854:14:14"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2725,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1890:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1890:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2724,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2668,
														"src": "1883:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1883:20:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2728,
												"nodeType": "EmitStatement",
												"src": "1878:25:14"
											}
										]
									},
									"documentation": {
										"id": 2715,
										"nodeType": "StructuredDocumentation",
										"src": "1666:124:14",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2730,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2718,
											"modifierName": {
												"argumentTypes": null,
												"id": 2717,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2704,
												"src": "1830:13:14",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1830:13:14"
										}
									],
									"name": "_pause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1810:2:14"
									},
									"returnParameters": {
										"id": 2719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1844:0:14"
									},
									"scope": 2747,
									"src": "1795:115:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2745,
										"nodeType": "Block",
										"src": "2090:69:14",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2736,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2675,
														"src": "2100:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 2737,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2110:5:14",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2100:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2739,
												"nodeType": "ExpressionStatement",
												"src": "2100:15:14"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2741,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2139:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2139:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2740,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2673,
														"src": "2130:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2130:22:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2744,
												"nodeType": "EmitStatement",
												"src": "2125:27:14"
											}
										]
									},
									"documentation": {
										"id": 2731,
										"nodeType": "StructuredDocumentation",
										"src": "1916:121:14",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 2746,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2734,
											"modifierName": {
												"argumentTypes": null,
												"id": 2733,
												"name": "whenPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2714,
												"src": "2079:10:14",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2079:10:14"
										}
									],
									"name": "_unpause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2059:2:14"
									},
									"returnParameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2090:0:14"
									},
									"scope": 2747,
									"src": "2042:117:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2748,
							"src": "528:1633:14"
						}
					],
					"src": "33:2129:14"
				},
				"id": 14
			}
		}
	}
}