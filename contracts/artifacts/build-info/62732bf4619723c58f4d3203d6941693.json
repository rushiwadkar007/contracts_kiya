{
	"id": "62732bf4619723c58f4d3203d6941693",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC11551.sol": {
				"content": "\n// File: contracts/contracts/utils/EnumerableSet.sol\n\n\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`\n * (`UintSet`) are supported.\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping (bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\n\n            bytes32 lastvalue = set._values[lastIndex];\n\n            // Move the last value to the index where the value to delete is\n            set._values[toDeleteIndex] = lastvalue;\n            // Update the index for the moved value\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        require(set._values.length > index, \"EnumerableSet: index out of bounds\");\n        return set._values[index];\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint256(_at(set._inner, index)));\n    }\n\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n}\n\n// File: contracts/contracts/utils/Address.sol\n\n\n\npragma solidity ^0.6.2;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        return _functionCallWithValue(target, data, value, errorMessage);\n    }\n\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: contracts/contracts/GSN/Context.sol\n\n\n\npragma solidity ^0.6.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n\n// File: contracts/contracts/access/AccessControl.sol\n\n\n\npragma solidity ^0.6.0;\n\n\n\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context {\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using Address for address;\n\n    struct RoleData {\n        EnumerableSet.AddressSet members;\n        bytes32 adminRole;\n    }\n\n    mapping (bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view returns (bool) {\n        return _roles[role].members.contains(account);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\n        return _roles[role].members.length();\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\n        return _roles[role].members.at(index);\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual {\n        require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to grant\");\n\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual {\n        require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to revoke\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        emit RoleAdminChanged(role, _roles[role].adminRole, adminRole);\n        _roles[role].adminRole = adminRole;\n    }\n\n    function _grantRole(bytes32 role, address account) private {\n        if (_roles[role].members.add(account)) {\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    function _revokeRole(bytes32 role, address account) private {\n        if (_roles[role].members.remove(account)) {\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n\n// File: contracts/contracts/introspection/IERC165.sol\n\n\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: contracts/contracts/token/ERC1155/IERC1155.sol\n\n\n\npragma solidity ^0.6.2;\n\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(address indexed operator, address indexed from, address indexed to, uint256[] ids, uint256[] values);\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data) external;\n}\n\n// File: contracts/contracts/token/ERC1155/IERC1155MetadataURI.sol\n\n\n\npragma solidity ^0.6.2;\n\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n\n// File: contracts/contracts/token/ERC1155/IERC1155Receiver.sol\n\n\n\npragma solidity ^0.6.0;\n\n\n/**\n * _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n\n    /**\n        @dev Handles the receipt of a single ERC1155 token type. This function is\n        called at the end of a `safeTransferFrom` after the balance has been updated.\n        To accept the transfer, this must return\n        `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n        (i.e. 0xf23a6e61, or its own function selector).\n        @param operator The address which initiated the transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param id The ID of the token being transferred\n        @param value The amount of tokens being transferred\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n    */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    )\n        external\n        returns(bytes4);\n\n    /**\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\n        is called at the end of a `safeBatchTransferFrom` after the balances have\n        been updated. To accept the transfer(s), this must return\n        `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n        (i.e. 0xbc197c81, or its own function selector).\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n    */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    )\n        external\n        returns(bytes4);\n}\n\n// File: contracts/contracts/introspection/ERC165.sol\n\n\n\npragma solidity ^0.6.0;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts may inherit from this and call {_registerInterface} to declare\n * their support of an interface.\n */\ncontract ERC165 is IERC165 {\n    /*\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\n     */\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\n\n    /**\n     * @dev Mapping of interface ids to whether or not it's supported.\n     */\n    mapping(bytes4 => bool) private _supportedInterfaces;\n\n    constructor () internal {\n        // Derived contracts need only register support for their own interfaces,\n        // we register support for ERC165 itself here\n        _registerInterface(_INTERFACE_ID_ERC165);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     *\n     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view override returns (bool) {\n        return _supportedInterfaces[interfaceId];\n    }\n\n    /**\n     * @dev Registers the contract as an implementer of the interface defined by\n     * `interfaceId`. Support of the actual ERC165 interface is automatic and\n     * registering its interface id is not required.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * Requirements:\n     *\n     * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).\n     */\n    function _registerInterface(bytes4 interfaceId) internal virtual {\n        require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\");\n        _supportedInterfaces[interfaceId] = true;\n    }\n}\n\n// File: contracts/contracts/math/SafeMath.sol\n\n\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n\n// File: contracts/contracts/token/ERC1155/ERC1155.sol\n\n\n\npragma solidity ^0.6.0;\n\n\n\n\n\n\n\n\n/**\n *\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using SafeMath for uint256;\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping (uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping (address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /*\n     *     bytes4(keccak256('balanceOf(address,uint256)')) == 0x00fdd58e\n     *     bytes4(keccak256('balanceOfBatch(address[],uint256[])')) == 0x4e1273f4\n     *     bytes4(keccak256('setApprovalForAll(address,bool)')) == 0xa22cb465\n     *     bytes4(keccak256('isApprovedForAll(address,address)')) == 0xe985e9c5\n     *     bytes4(keccak256('safeTransferFrom(address,address,uint256,uint256,bytes)')) == 0xf242432a\n     *     bytes4(keccak256('safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)')) == 0x2eb2c2d6\n     *\n     *     => 0x00fdd58e ^ 0x4e1273f4 ^ 0xa22cb465 ^\n     *        0xe985e9c5 ^ 0xf242432a ^ 0x2eb2c2d6 == 0xd9b67a26\n     */\n    bytes4 private constant _INTERFACE_ID_ERC1155 = 0xd9b67a26;\n\n    /*\n     *     bytes4(keccak256('uri(uint256)')) == 0x0e89341c\n     */\n    bytes4 private constant _INTERFACE_ID_ERC1155_METADATA_URI = 0x0e89341c;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor (string memory uri) public {\n        _setURI(uri);\n\n        // register the supported interfaces to conform to ERC1155 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC1155);\n\n        // register the supported interfaces to conform to ERC1155MetadataURI via ERC165\n        _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) external view override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    )\n        public\n        view\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            require(accounts[i] != address(0), \"ERC1155: batch balance query for the zero address\");\n            batchBalances[i] = _balances[ids[i]][accounts[i]];\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(_msgSender() != operator, \"ERC1155: setting approval status for self\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    )\n        public\n        virtual\n        override\n    {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        _balances[id][from] = _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\");\n        _balances[id][to] = _balances[id][to].add(amount);\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    )\n        public\n        virtual\n        override\n    {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            _balances[id][from] = _balances[id][from].sub(\n                amount,\n                \"ERC1155: insufficient balance for transfer\"\n            );\n            _balances[id][to] = _balances[id][to].add(amount);\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address account, uint256 id, uint256 amount, bytes memory data) internal virtual {\n        require(account != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        _balances[id][account] = _balances[id][account].add(amount);\n        emit TransferSingle(operator, address(0), account, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] = amounts[i].add(_balances[ids[i]][to]);\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `account`\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(address account, uint256 id, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        _balances[id][account] = _balances[id][account].sub(\n            amount,\n            \"ERC1155: burn amount exceeds balance\"\n        );\n\n        emit TransferSingle(operator, account, address(0), id, amount);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(address account, uint256[] memory ids, uint256[] memory amounts) internal virtual {\n        require(account != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, account, address(0), ids, amounts, \"\");\n\n        for (uint i = 0; i < ids.length; i++) {\n            _balances[ids[i]][account] = _balances[ids[i]][account].sub(\n                amounts[i],\n                \"ERC1155: burn amount exceeds balance\"\n            );\n        }\n\n        emit TransferBatch(operator, account, address(0), ids, amounts);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    )\n        internal virtual\n    { }\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    )\n        private\n    {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver(to).onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    )\n        private\n    {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n\n// File: contracts/contracts/token/ERC1155/ERC1155Burnable.sol\n\n\n\npragma solidity ^0.6.0;\n\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n *\n * _Available since v3.1._\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(address account, uint256 id, uint256 value) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }\n}\n\n// File: contracts/contracts/utils/Pausable.sol\n\n\n\npragma solidity ^0.6.0;\n\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\ncontract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor () internal {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!_paused, \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(_paused, \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n\n// File: contracts/contracts/token/ERC1155/ERC1155Pausable.sol\n\n\n\npragma solidity ^0.6.0;\n\n\n\n/**\n * @dev ERC1155 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * _Available since v3.1._\n */\nabstract contract ERC1155Pausable is ERC1155, Pausable {\n    /**\n     * @dev See {ERC1155-_beforeTokenTransfer}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    )\n        internal virtual override\n    {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        require(!paused(), \"ERC1155Pausable: token transfer while paused\");\n    }\n}\n\n// File: contracts/contracts/presets/ERC1155PresetMinterPauser.sol\n\n\n\npragma solidity ^0.6.0;\n\n\n\n\n\n\n/**\n * @dev {ERC1155} token, including:\n *\n *  - ability for holders to burn (destroy) their tokens\n *  - a minter role that allows for token minting (creation)\n *  - a pauser role that allows to stop all token transfers\n *\n * This contract uses {AccessControl} to lock permissioned functions using the\n * different roles - head to its documentation for details.\n *\n * The account that deploys the contract will be granted the minter and pauser\n * roles, as well as the default admin role, which will let it grant both minter\n * and pauser roles to other accounts.\n */\ncontract ERC1155PresetMinterPauser is Context, AccessControl, ERC1155Burnable, ERC1155Pausable {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n\n    /**\n     * @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE`, and `PAUSER_ROLE` to the account that\n     * deploys the contract.\n     */\n    constructor(string memory uri) public ERC1155(uri) {\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n\n        _setupRole(MINTER_ROLE, _msgSender());\n        _setupRole(PAUSER_ROLE, _msgSender());\n    }\n\n    /**\n     * @dev Creates `amount` new tokens for `to`, of token type `id`.\n     *\n     * See {ERC1155-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `MINTER_ROLE`.\n     */\n    function mint(address to, uint256 id, uint256 amount, bytes memory data) public virtual {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC1155PresetMinterPauser: must have minter role to mint\");\n\n        _mint(to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] variant of {mint}.\n     */\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) public virtual {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC1155PresetMinterPauser: must have minter role to mint\");\n\n        _mintBatch(to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Pauses all token transfers.\n     *\n     * See {ERC1155Pausable} and {Pausable-_pause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function pause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC1155PresetMinterPauser: must have pauser role to pause\");\n        _pause();\n    }\n\n    /**\n     * @dev Unpauses all token transfers.\n     *\n     * See {ERC1155Pausable} and {Pausable-_unpause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function unpause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC1155PresetMinterPauser: must have pauser role to unpause\");\n        _unpause();\n    }\n\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    )\n        internal virtual override(ERC1155, ERC1155Pausable)\n    {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/ERC11551.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC11551.sol\":\"AccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC11551.sol\":{\"keccak256\":\"0xc92790b714bf01a7235b64c6055889a46a48b670a9bc6437d6ebbdc1d8f828f3\",\"urls\":[\"bzz-raw://45971d53dc91f51b229e3432b060d79b4a1f9b5dd1a04ce24b432b54453e5c3d\",\"dweb:/ipfs/QmPgG5L6JumoAcDV8D5CcVjtzUZvDFZoaER7J7V9aTbrvc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 629,
								"contract": "contracts/ERC11551.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)625_storage)"
							}
						],
						"types": {
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)625_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)625_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)190_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 189,
										"contract": "contracts/ERC11551.sol:AccessControl",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)10_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)625_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 622,
										"contract": "contracts/ERC11551.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)190_storage"
									},
									{
										"astId": 624,
										"contract": "contracts/ERC11551.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Set)10_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 5,
										"contract": "contracts/ERC11551.sol:AccessControl",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 9,
										"contract": "contracts/ERC11551.sol:AccessControl",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC11551.sol\":7955:13709  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC11551.sol\":7955:13709  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d2dad2a9ec9ec3d0d5db40cf82a320706ffaecb6a4d52b539636c1bf149bf96264736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d2dad2a9ec9ec3d0d5db40cf82a320706ffaecb6a4d52b539636c1bf149bf96264736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xDA 0xD2 0xA9 0xEC SWAP15 0xC3 0xD0 0xD5 0xDB BLOCKHASH 0xCF DUP3 LOG3 KECCAK256 PUSH17 0x6FFAECB6A4D52B539636C1BF149BF96264 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "7955:5754:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d2dad2a9ec9ec3d0d5db40cf82a320706ffaecb6a4d52b539636c1bf149bf96264736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0xDA 0xD2 0xA9 0xEC SWAP15 0xC3 0xD0 0xD5 0xDB BLOCKHASH 0xCF DUP3 LOG3 KECCAK256 PUSH17 0x6FFAECB6A4D52B539636C1BF149BF96264 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "7955:5754:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7955,
									"end": 13709,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7955,
									"end": 13709,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d2dad2a9ec9ec3d0d5db40cf82a320706ffaecb6a4d52b539636c1bf149bf96264736f6c634300060c0033",
									".code": [
										{
											"begin": 7955,
											"end": 13709,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 13709,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 13709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 13709,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7955,
											"end": 13709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7955,
											"end": 13709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 13709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7955,
											"end": 13709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7955,
											"end": 13709,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC11551.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC11551.sol\":{\"keccak256\":\"0xc92790b714bf01a7235b64c6055889a46a48b670a9bc6437d6ebbdc1d8f828f3\",\"urls\":[\"bzz-raw://45971d53dc91f51b229e3432b060d79b4a1f9b5dd1a04ce24b432b54453e5c3d\",\"dweb:/ipfs/QmPgG5L6JumoAcDV8D5CcVjtzUZvDFZoaER7J7V9aTbrvc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC11551.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC11551.sol\":{\"keccak256\":\"0xc92790b714bf01a7235b64c6055889a46a48b670a9bc6437d6ebbdc1d8f828f3\",\"urls\":[\"bzz-raw://45971d53dc91f51b229e3432b060d79b4a1f9b5dd1a04ce24b432b54453e5c3d\",\"dweb:/ipfs/QmPgG5L6JumoAcDV8D5CcVjtzUZvDFZoaER7J7V9aTbrvc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC11551.sol\":36832:50575  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC11551.sol\":38286:38638  constructor (string memory uri) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  pop\n    /* \"contracts/ERC11551.sol\":30372:30412  _registerInterface(_INTERFACE_ID_ERC165) */\n  tag_13\n  swap2\n  pop\n  shl(0xe0, 0x01ffc9a7)\n    /* \"contracts/ERC11551.sol\":30391:30411  _INTERFACE_ID_ERC165 */\n  swap1\n  pop\n    /* \"contracts/ERC11551.sol\":30372:30390  _registerInterface */\n  tag_14\n    /* \"contracts/ERC11551.sol\":30372:30412  _registerInterface(_INTERFACE_ID_ERC165) */\n  jump\t// in\ntag_13:\n    /* \"contracts/ERC11551.sol\":38335:38347  _setURI(uri) */\n  tag_16\n    /* \"contracts/ERC11551.sol\":38343:38346  uri */\n  dup2\n    /* \"contracts/ERC11551.sol\":38335:38342  _setURI */\n  tag_17\n    /* \"contracts/ERC11551.sol\":38335:38347  _setURI(uri) */\n  jump\t// in\ntag_16:\n    /* \"contracts/ERC11551.sol\":38436:38477  _registerInterface(_INTERFACE_ID_ERC1155) */\n  tag_18\n  shl(0xe1, 0x6cdb3d13)\n    /* \"contracts/ERC11551.sol\":38436:38454  _registerInterface */\n  tag_14\n    /* \"contracts/ERC11551.sol\":38436:38477  _registerInterface(_INTERFACE_ID_ERC1155) */\n  jump\t// in\ntag_18:\n    /* \"contracts/ERC11551.sol\":38577:38631  _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI) */\n  tag_19\n  shl(0xe2, 0x03a24d07)\n    /* \"contracts/ERC11551.sol\":38577:38595  _registerInterface */\n  tag_14\n    /* \"contracts/ERC11551.sol\":38577:38631  _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI) */\n  jump\t// in\ntag_19:\n    /* \"contracts/ERC11551.sol\":38286:38638  constructor (string memory uri) public {... */\n  pop\n    /* \"contracts/ERC11551.sol\":36832:50575  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_20)\n    /* \"contracts/ERC11551.sol\":31103:31301  function _registerInterface(bytes4 interfaceId) internal virtual {... */\ntag_14:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"contracts/ERC11551.sol\":31186:31211  interfaceId != 0xffffffff */\n  dup1\n  dup3\n  and\n  eq\n  iszero\n    /* \"contracts/ERC11551.sol\":31178:31244  require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\") */\n  tag_22\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1c\n  0x24\n  dup3\n  add\n  mstore\n  0x4552433136353a20696e76616c696420696e7465726661636520696400000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_22:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"contracts/ERC11551.sol\":31254:31287  _supportedInterfaces[interfaceId] */\n  and\n    /* \"contracts/ERC11551.sol\":31254:31274  _supportedInterfaces */\n  0x00\n    /* \"contracts/ERC11551.sol\":31254:31287  _supportedInterfaces[interfaceId] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/ERC11551.sol\":31254:31294  _supportedInterfaces[interfaceId] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/ERC11551.sol\":31290:31294  true */\n  0x01\n    /* \"contracts/ERC11551.sol\":31254:31294  _supportedInterfaces[interfaceId] = true */\n  or\n  swap1\n  sstore\n    /* \"contracts/ERC11551.sol\":31103:31301  function _registerInterface(bytes4 interfaceId) internal virtual {... */\n  jump\t// out\n    /* \"contracts/ERC11551.sol\":43910:43996  function _setURI(string memory newuri) internal virtual {... */\ntag_17:\n    /* \"contracts/ERC11551.sol\":43976:43989  _uri = newuri */\n  dup1\n  mload\n  tag_24\n  swap1\n    /* \"contracts/ERC11551.sol\":43976:43980  _uri */\n  0x03\n  swap1\n    /* \"contracts/ERC11551.sol\":43976:43989  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  pop\n    /* \"contracts/ERC11551.sol\":43910:43996  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/ERC11551.sol\":36832:50575  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\ntag_25:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_27\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_29)\ntag_27:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_29\n  jumpi\n  swap2\n  dup3\n  add\ntag_28:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_29\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_28)\ntag_29:\n  pop\n  tag_30\n  swap3\n  swap2\n  pop\n  tag_31\n  jump\t// in\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_31:\ntag_32:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_32)\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC11551.sol\":36832:50575  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC11551.sol\":39276:39496  function balanceOf(address account, uint256 id) public view override returns (uint256) {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_14\n      jump\t// in\n    tag_12:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/ERC11551.sol\":30569:30709  function supportsInterface(bytes4 interfaceId) public view override returns (bool) {... */\n    tag_4:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      tag_17\n      jump\t// in\n    tag_15:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/ERC11551.sol\":39037:39134  function uri(uint256) external view override returns (string memory) {... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      calldataload\n      tag_20\n      jump\t// in\n    tag_18:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_21:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_23\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_21)\n    tag_23:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_24\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_24:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC11551.sol\":41903:43087  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xa0\n      dup2\n      lt\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      dup2\n      and\n      swap3\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap2\n      dup2\n      add\n      swap1\n      0x60\n      dup2\n      add\n      0x40\n      dup3\n      add\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_36\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/ERC11551.sol\":39653:40268  function balanceOfBatch(... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_45\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n    tag_37:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      dup2\n      add\n      swap2\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_46:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_48\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_46)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC11551.sol\":40336:40642  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      iszero\n      iszero\n      tag_51\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":40709:40867  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n    tag_9:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_54\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":40934:41831  function safeTransferFrom(... */\n    tag_10:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xa0\n      dup2\n      lt\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      dup2\n      and\n      swap3\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap2\n      0x40\n      dup3\n      add\n      calldataload\n      swap2\n      0x60\n      dup2\n      add\n      calldataload\n      swap2\n      dup2\n      add\n      swap1\n      0xa0\n      dup2\n      add\n      0x80\n      dup3\n      add\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_60\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":39276:39496  function balanceOf(address account, uint256 id) public view override returns (uint256) {... */\n    tag_14:\n        /* \"contracts/ERC11551.sol\":39354:39361  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":39381:39402  account != address(0) */\n      dup4\n      and\n        /* \"contracts/ERC11551.sol\":39373:39450  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9\n      0x2b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n      pop\n        /* \"contracts/ERC11551.sol\":39467:39480  _balances[id] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":39467:39476  _balances */\n      0x01\n        /* \"contracts/ERC11551.sol\":39467:39480  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":39467:39489  _balances[id][account] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/ERC11551.sol\":39276:39496  function balanceOf(address account, uint256 id) public view override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":30569:30709  function supportsInterface(bytes4 interfaceId) public view override returns (bool) {... */\n    tag_17:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC11551.sol\":30669:30702  _supportedInterfaces[interfaceId] */\n      and\n        /* \"contracts/ERC11551.sol\":30646:30650  bool */\n      0x00\n        /* \"contracts/ERC11551.sol\":30669:30702  _supportedInterfaces[interfaceId] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/ERC11551.sol\":30569:30709  function supportsInterface(bytes4 interfaceId) public view override returns (bool) {... */\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":39037:39134  function uri(uint256) external view override returns (string memory) {... */\n    tag_20:\n        /* \"contracts/ERC11551.sol\":39123:39127  _uri */\n      0x03\n        /* \"contracts/ERC11551.sol\":39116:39127  return _uri */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":39091:39104  string memory */\n      0x60\n      swap4\n        /* \"contracts/ERC11551.sol\":39116:39127  return _uri */\n      swap1\n      swap3\n        /* \"contracts/ERC11551.sol\":39123:39127  _uri */\n      swap1\n      swap2\n        /* \"contracts/ERC11551.sol\":39116:39127  return _uri */\n      dup4\n      add\n        /* \"contracts/ERC11551.sol\":39123:39127  _uri */\n      dup3\n        /* \"contracts/ERC11551.sol\":39116:39127  return _uri */\n      dup3\n      dup1\n      iszero\n      tag_65\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_66\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_65)\n    tag_66:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_67:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_67\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC11551.sol\":39037:39134  function uri(uint256) external view override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":41903:43087  function safeBatchTransferFrom(... */\n    tag_36:\n        /* \"contracts/ERC11551.sol\":42157:42164  amounts */\n      dup2\n        /* \"contracts/ERC11551.sol\":42157:42171  amounts.length */\n      mload\n        /* \"contracts/ERC11551.sol\":42143:42146  ids */\n      dup4\n        /* \"contracts/ERC11551.sol\":42143:42153  ids.length */\n      mload\n        /* \"contracts/ERC11551.sol\":42143:42171  ids.length == amounts.length */\n      eq\n        /* \"contracts/ERC11551.sol\":42135:42216  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":42234:42250  to != address(0) */\n      dup5\n      and\n        /* \"contracts/ERC11551.sol\":42226:42292  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"contracts/ERC11551.sol\":42331:42343  _msgSender() */\n      tag_71\n        /* \"contracts/ERC11551.sol\":42331:42341  _msgSender */\n      tag_72\n        /* \"contracts/ERC11551.sol\":42331:42343  _msgSender() */\n      jump\t// in\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":42323:42343  from == _msgSender() */\n      and\n        /* \"contracts/ERC11551.sol\":42323:42327  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":42323:42343  from == _msgSender() */\n      and\n      eq\n        /* \"contracts/ERC11551.sol\":42323:42383  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_74\n      jumpi\n      pop\n        /* \"contracts/ERC11551.sol\":42347:42383  isApprovedForAll(from, _msgSender()) */\n      tag_74\n        /* \"contracts/ERC11551.sol\":42364:42368  from */\n      dup6\n        /* \"contracts/ERC11551.sol\":42370:42382  _msgSender() */\n      tag_75\n        /* \"contracts/ERC11551.sol\":42370:42380  _msgSender */\n      tag_72\n        /* \"contracts/ERC11551.sol\":42370:42382  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"contracts/ERC11551.sol\":42347:42363  isApprovedForAll */\n      tag_54\n        /* \"contracts/ERC11551.sol\":42347:42383  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_74:\n        /* \"contracts/ERC11551.sol\":42302:42459  require(... */\n      tag_76\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x32\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686\n      0x32\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"contracts/ERC11551.sol\":42470:42486  address operator */\n      0x00\n        /* \"contracts/ERC11551.sol\":42489:42501  _msgSender() */\n      tag_77\n        /* \"contracts/ERC11551.sol\":42489:42499  _msgSender */\n      tag_72\n        /* \"contracts/ERC11551.sol\":42489:42501  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"contracts/ERC11551.sol\":42470:42501  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC11551.sol\":42512:42572  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_78\n        /* \"contracts/ERC11551.sol\":42533:42541  operator */\n      dup2\n        /* \"contracts/ERC11551.sol\":42543:42547  from */\n      dup8\n        /* \"contracts/ERC11551.sol\":42549:42551  to */\n      dup8\n        /* \"contracts/ERC11551.sol\":42553:42556  ids */\n      dup8\n        /* \"contracts/ERC11551.sol\":42558:42565  amounts */\n      dup8\n        /* \"contracts/ERC11551.sol\":42567:42571  data */\n      dup8\n        /* \"contracts/ERC11551.sol\":42512:42532  _beforeTokenTransfer */\n      tag_95\n        /* \"contracts/ERC11551.sol\":42512:42572  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/ERC11551.sol\":42588:42597  uint256 i */\n      0x00\n        /* \"contracts/ERC11551.sol\":42583:42932  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_80:\n        /* \"contracts/ERC11551.sol\":42607:42610  ids */\n      dup5\n        /* \"contracts/ERC11551.sol\":42607:42617  ids.length */\n      mload\n        /* \"contracts/ERC11551.sol\":42603:42604  i */\n      dup2\n        /* \"contracts/ERC11551.sol\":42603:42617  i < ids.length */\n      lt\n        /* \"contracts/ERC11551.sol\":42583:42932  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_81\n      jumpi\n        /* \"contracts/ERC11551.sol\":42638:42648  uint256 id */\n      0x00\n        /* \"contracts/ERC11551.sol\":42651:42654  ids */\n      dup6\n        /* \"contracts/ERC11551.sol\":42655:42656  i */\n      dup3\n        /* \"contracts/ERC11551.sol\":42651:42657  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_83\n      jumpi\n      invalid\n    tag_83:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC11551.sol\":42638:42657  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"contracts/ERC11551.sol\":42671:42685  uint256 amount */\n      0x00\n        /* \"contracts/ERC11551.sol\":42688:42695  amounts */\n      dup6\n        /* \"contracts/ERC11551.sol\":42696:42697  i */\n      dup4\n        /* \"contracts/ERC11551.sol\":42688:42698  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_84\n      jumpi\n      invalid\n    tag_84:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC11551.sol\":42671:42698  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"contracts/ERC11551.sol\":42735:42858  _balances[id][from].sub(... */\n      tag_85\n        /* \"contracts/ERC11551.sol\":42776:42782  amount */\n      dup2\n        /* \"contracts/ERC11551.sol\":42735:42858  _balances[id][from].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf\n      0x2a\n      swap2\n      codecopy\n        /* \"contracts/ERC11551.sol\":42735:42744  _balances */\n      0x01\n        /* \"contracts/ERC11551.sol\":42735:42748  _balances[id] */\n      0x00\n        /* \"contracts/ERC11551.sol\":42745:42747  id */\n      dup7\n        /* \"contracts/ERC11551.sol\":42735:42748  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC11551.sol\":42735:42754  _balances[id][from] */\n      0x00\n        /* \"contracts/ERC11551.sol\":42749:42753  from */\n      dup14\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":42735:42754  _balances[id][from] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC11551.sol\":42735:42758  _balances[id][from].sub */\n      tag_86\n      swap1\n        /* \"contracts/ERC11551.sol\":42735:42858  _balances[id][from].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"contracts/ERC11551.sol\":42713:42726  _balances[id] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":42713:42722  _balances */\n      0x01\n        /* \"contracts/ERC11551.sol\":42713:42726  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":42713:42732  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC11551.sol\":42713:42858  _balances[id][from] = _balances[id][from].sub(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/ERC11551.sol\":42892:42909  _balances[id][to] */\n      dup11\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/ERC11551.sol\":42892:42921  _balances[id][to].add(amount) */\n      tag_87\n      swap1\n        /* \"contracts/ERC11551.sol\":42914:42920  amount */\n      dup3\n        /* \"contracts/ERC11551.sol\":42892:42913  _balances[id][to].add */\n      tag_88\n        /* \"contracts/ERC11551.sol\":42892:42921  _balances[id][to].add(amount) */\n      jump\t// in\n    tag_87:\n        /* \"contracts/ERC11551.sol\":42872:42885  _balances[id] */\n      0x00\n      swap3\n      dup4\n      mstore\n        /* \"contracts/ERC11551.sol\":42872:42881  _balances */\n      0x01\n        /* \"contracts/ERC11551.sol\":42872:42885  _balances[id] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup7\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":42872:42889  _balances[id][to] */\n      dup14\n      and\n      dup8\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      swap4\n      keccak256\n        /* \"contracts/ERC11551.sol\":42872:42921  _balances[id][to] = _balances[id][to].add(amount) */\n      sstore\n      pop\n        /* \"contracts/ERC11551.sol\":42619:42622  ++i */\n      add\n        /* \"contracts/ERC11551.sol\":42583:42932  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_80)\n    tag_81:\n      pop\n        /* \"contracts/ERC11551.sol\":42977:42979  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":42947:42994  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/ERC11551.sol\":42971:42975  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":42947:42994  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/ERC11551.sol\":42961:42969  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":42947:42994  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/ERC11551.sol\":42981:42984  ids */\n      dup8\n        /* \"contracts/ERC11551.sol\":42986:42993  amounts */\n      dup8\n        /* \"contracts/ERC11551.sol\":42947:42994  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup4\n      dup2\n      sub\n      dup4\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_89:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_89)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup4\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_92:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_94\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_92)\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC11551.sol\":43005:43080  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_95\n        /* \"contracts/ERC11551.sol\":43041:43049  operator */\n      dup2\n        /* \"contracts/ERC11551.sol\":43051:43055  from */\n      dup8\n        /* \"contracts/ERC11551.sol\":43057:43059  to */\n      dup8\n        /* \"contracts/ERC11551.sol\":43061:43064  ids */\n      dup8\n        /* \"contracts/ERC11551.sol\":43066:43073  amounts */\n      dup8\n        /* \"contracts/ERC11551.sol\":43075:43079  data */\n      dup8\n        /* \"contracts/ERC11551.sol\":43005:43040  _doSafeBatchTransferAcceptanceCheck */\n      tag_96\n        /* \"contracts/ERC11551.sol\":43005:43080  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/ERC11551.sol\":41903:43087  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":39653:40268  function balanceOfBatch(... */\n    tag_45:\n        /* \"contracts/ERC11551.sol\":39810:39826  uint256[] memory */\n      0x60\n        /* \"contracts/ERC11551.sol\":39869:39872  ids */\n      dup2\n        /* \"contracts/ERC11551.sol\":39869:39879  ids.length */\n      mload\n        /* \"contracts/ERC11551.sol\":39850:39858  accounts */\n      dup4\n        /* \"contracts/ERC11551.sol\":39850:39865  accounts.length */\n      mload\n        /* \"contracts/ERC11551.sol\":39850:39879  accounts.length == ids.length */\n      eq\n        /* \"contracts/ERC11551.sol\":39842:39925  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"contracts/ERC11551.sol\":39936:39966  uint256[] memory batchBalances */\n      0x60\n        /* \"contracts/ERC11551.sol\":39983:39991  accounts */\n      dup4\n        /* \"contracts/ERC11551.sol\":39983:39998  accounts.length */\n      mload\n        /* \"contracts/ERC11551.sol\":39969:39999  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_100\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_100:\n      pop\n        /* \"contracts/ERC11551.sol\":39936:39999  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"contracts/ERC11551.sol\":40015:40024  uint256 i */\n      0x00\n        /* \"contracts/ERC11551.sol\":40010:40231  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_101:\n        /* \"contracts/ERC11551.sol\":40034:40042  accounts */\n      dup5\n        /* \"contracts/ERC11551.sol\":40034:40049  accounts.length */\n      mload\n        /* \"contracts/ERC11551.sol\":40030:40031  i */\n      dup2\n        /* \"contracts/ERC11551.sol\":40030:40049  i < accounts.length */\n      lt\n        /* \"contracts/ERC11551.sol\":40010:40231  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_102\n      jumpi\n        /* \"contracts/ERC11551.sol\":40101:40102  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":40078:40103  accounts[i] != address(0) */\n      and\n        /* \"contracts/ERC11551.sol\":40078:40086  accounts */\n      dup6\n        /* \"contracts/ERC11551.sol\":40087:40088  i */\n      dup3\n        /* \"contracts/ERC11551.sol\":40078:40089  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_104\n      jumpi\n      invalid\n    tag_104:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":40078:40103  accounts[i] != address(0) */\n      and\n      eq\n      iszero\n        /* \"contracts/ERC11551.sol\":40070:40157  require(accounts[i] != address(0), \"ERC1155: batch balance query for the zero address\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x31\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c\n      0x31\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/ERC11551.sol\":40190:40199  _balances */\n      0x01\n        /* \"contracts/ERC11551.sol\":40190:40207  _balances[ids[i]] */\n      0x00\n        /* \"contracts/ERC11551.sol\":40200:40203  ids */\n      dup6\n        /* \"contracts/ERC11551.sol\":40204:40205  i */\n      dup4\n        /* \"contracts/ERC11551.sol\":40200:40206  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_106\n      jumpi\n      invalid\n    tag_106:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC11551.sol\":40190:40207  _balances[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC11551.sol\":40190:40220  _balances[ids[i]][accounts[i]] */\n      0x00\n        /* \"contracts/ERC11551.sol\":40208:40216  accounts */\n      dup7\n        /* \"contracts/ERC11551.sol\":40217:40218  i */\n      dup4\n        /* \"contracts/ERC11551.sol\":40208:40219  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_107\n      jumpi\n      invalid\n    tag_107:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":40190:40220  _balances[ids[i]][accounts[i]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC11551.sol\":40171:40184  batchBalances */\n      dup3\n        /* \"contracts/ERC11551.sol\":40185:40186  i */\n      dup3\n        /* \"contracts/ERC11551.sol\":40171:40187  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_108\n      jumpi\n      invalid\n    tag_108:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/ERC11551.sol\":40171:40220  batchBalances[i] = _balances[ids[i]][accounts[i]] */\n      mstore\n        /* \"contracts/ERC11551.sol\":40051:40054  ++i */\n      0x01\n      add\n        /* \"contracts/ERC11551.sol\":40010:40231  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_101)\n    tag_102:\n      pop\n        /* \"contracts/ERC11551.sol\":40248:40261  batchBalances */\n      swap4\n        /* \"contracts/ERC11551.sol\":39653:40268  function balanceOfBatch(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":40336:40642  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_51:\n        /* \"contracts/ERC11551.sol\":40454:40462  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":40438:40462  _msgSender() != operator */\n      and\n        /* \"contracts/ERC11551.sol\":40438:40450  _msgSender() */\n      tag_110\n        /* \"contracts/ERC11551.sol\":40438:40448  _msgSender */\n      tag_72\n        /* \"contracts/ERC11551.sol\":40438:40450  _msgSender() */\n      jump\t// in\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":40438:40462  _msgSender() != operator */\n      and\n      eq\n      iszero\n        /* \"contracts/ERC11551.sol\":40430:40508  require(_msgSender() != operator, \"ERC1155: setting approval status for self\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"contracts/ERC11551.sol\":40564:40572  approved */\n      dup1\n        /* \"contracts/ERC11551.sol\":40519:40537  _operatorApprovals */\n      0x02\n        /* \"contracts/ERC11551.sol\":40519:40551  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"contracts/ERC11551.sol\":40538:40550  _msgSender() */\n      tag_112\n        /* \"contracts/ERC11551.sol\":40538:40548  _msgSender */\n      tag_72\n        /* \"contracts/ERC11551.sol\":40538:40550  _msgSender() */\n      jump\t// in\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":40519:40551  _operatorApprovals[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/ERC11551.sol\":40519:40561  _operatorApprovals[_msgSender()][operator] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      swap4\n      mstore\n      swap2\n      keccak256\n        /* \"contracts/ERC11551.sol\":40519:40572  _operatorApprovals[_msgSender()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap3\n      iszero\n      iszero\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ERC11551.sol\":40602:40614  _msgSender() */\n      tag_113\n        /* \"contracts/ERC11551.sol\":40602:40612  _msgSender */\n      tag_72\n        /* \"contracts/ERC11551.sol\":40602:40614  _msgSender() */\n      jump\t// in\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":40587:40635  ApprovalForAll(_msgSender(), operator, approved) */\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/ERC11551.sol\":40626:40634  approved */\n      dup4\n        /* \"contracts/ERC11551.sol\":40587:40635  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC11551.sol\":40336:40642  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":40709:40867  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n    tag_54:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":40823:40850  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"contracts/ERC11551.sol\":40800:40804  bool */\n      0x00\n        /* \"contracts/ERC11551.sol\":40823:40850  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":40823:40841  _operatorApprovals */\n      0x02\n        /* \"contracts/ERC11551.sol\":40823:40850  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC11551.sol\":40823:40860  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/ERC11551.sol\":40709:40867  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":40934:41831  function safeTransferFrom(... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":41149:41165  to != address(0) */\n      dup5\n      and\n        /* \"contracts/ERC11551.sol\":41141:41207  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"contracts/ERC11551.sol\":41246:41258  _msgSender() */\n      tag_117\n        /* \"contracts/ERC11551.sol\":41246:41256  _msgSender */\n      tag_72\n        /* \"contracts/ERC11551.sol\":41246:41258  _msgSender() */\n      jump\t// in\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":41238:41258  from == _msgSender() */\n      and\n        /* \"contracts/ERC11551.sol\":41238:41242  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":41238:41258  from == _msgSender() */\n      and\n      eq\n        /* \"contracts/ERC11551.sol\":41238:41298  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_119\n      jumpi\n      pop\n        /* \"contracts/ERC11551.sol\":41262:41298  isApprovedForAll(from, _msgSender()) */\n      tag_119\n        /* \"contracts/ERC11551.sol\":41279:41283  from */\n      dup6\n        /* \"contracts/ERC11551.sol\":41285:41297  _msgSender() */\n      tag_75\n        /* \"contracts/ERC11551.sol\":41285:41295  _msgSender */\n      tag_72\n        /* \"contracts/ERC11551.sol\":41285:41297  _msgSender() */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":41262:41298  isApprovedForAll(from, _msgSender()) */\n    tag_119:\n        /* \"contracts/ERC11551.sol\":41217:41365  require(... */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/ERC11551.sol\":41376:41392  address operator */\n      0x00\n        /* \"contracts/ERC11551.sol\":41395:41407  _msgSender() */\n      tag_122\n        /* \"contracts/ERC11551.sol\":41395:41405  _msgSender */\n      tag_72\n        /* \"contracts/ERC11551.sol\":41395:41407  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/ERC11551.sol\":41376:41407  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC11551.sol\":41418:41514  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_123\n        /* \"contracts/ERC11551.sol\":41439:41447  operator */\n      dup2\n        /* \"contracts/ERC11551.sol\":41449:41453  from */\n      dup8\n        /* \"contracts/ERC11551.sol\":41455:41457  to */\n      dup8\n        /* \"contracts/ERC11551.sol\":41459:41480  _asSingletonArray(id) */\n      tag_124\n        /* \"contracts/ERC11551.sol\":41477:41479  id */\n      dup9\n        /* \"contracts/ERC11551.sol\":41459:41476  _asSingletonArray */\n      tag_125\n        /* \"contracts/ERC11551.sol\":41459:41480  _asSingletonArray(id) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/ERC11551.sol\":41482:41507  _asSingletonArray(amount) */\n      tag_126\n        /* \"contracts/ERC11551.sol\":41500:41506  amount */\n      dup9\n        /* \"contracts/ERC11551.sol\":41482:41499  _asSingletonArray */\n      tag_125\n        /* \"contracts/ERC11551.sol\":41482:41507  _asSingletonArray(amount) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/ERC11551.sol\":41509:41513  data */\n      dup8\n        /* \"contracts/ERC11551.sol\":41418:41438  _beforeTokenTransfer */\n      tag_95\n        /* \"contracts/ERC11551.sol\":41418:41514  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/ERC11551.sol\":41547:41624  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_127\n        /* \"contracts/ERC11551.sol\":41571:41577  amount */\n      dup4\n        /* \"contracts/ERC11551.sol\":41547:41624  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf\n      0x2a\n      swap2\n      codecopy\n        /* \"contracts/ERC11551.sol\":41547:41560  _balances[id] */\n      0x00\n      dup8\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":41547:41556  _balances */\n      0x01\n        /* \"contracts/ERC11551.sol\":41547:41560  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":41547:41566  _balances[id][from] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/ERC11551.sol\":41547:41624  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      swap1\n        /* \"contracts/ERC11551.sol\":41547:41570  _balances[id][from].sub */\n      tag_86\n        /* \"contracts/ERC11551.sol\":41547:41624  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      jump\t// in\n    tag_127:\n        /* \"contracts/ERC11551.sol\":41525:41538  _balances[id] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":41525:41534  _balances */\n      0x01\n        /* \"contracts/ERC11551.sol\":41525:41538  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":41525:41544  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC11551.sol\":41525:41624  _balances[id][from] = _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/ERC11551.sol\":41654:41671  _balances[id][to] */\n      dup8\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/ERC11551.sol\":41654:41683  _balances[id][to].add(amount) */\n      tag_128\n      swap1\n        /* \"contracts/ERC11551.sol\":41676:41682  amount */\n      dup5\n        /* \"contracts/ERC11551.sol\":41654:41675  _balances[id][to].add */\n      tag_88\n        /* \"contracts/ERC11551.sol\":41654:41683  _balances[id][to].add(amount) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/ERC11551.sol\":41634:41647  _balances[id] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":41634:41643  _balances */\n      0x01\n        /* \"contracts/ERC11551.sol\":41634:41647  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":41634:41651  _balances[id][to] */\n      dup1\n      dup12\n      and\n      dup1\n      dup7\n      mstore\n      swap2\n      dup5\n      mstore\n      swap4\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ERC11551.sol\":41634:41683  _balances[id][to] = _balances[id][to].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/ERC11551.sol\":41699:41745  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      mload\n      dup9\n      dup2\n      mstore\n      swap2\n      dup3\n      add\n      dup8\n      swap1\n      mstore\n      dup1\n      mload\n      dup11\n      dup5\n      and\n      swap4\n      dup7\n      and\n      swap3\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap3\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log4\n        /* \"contracts/ERC11551.sol\":41756:41824  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_95\n        /* \"contracts/ERC11551.sol\":41787:41795  operator */\n      dup2\n        /* \"contracts/ERC11551.sol\":41797:41801  from */\n      dup8\n        /* \"contracts/ERC11551.sol\":41803:41805  to */\n      dup8\n        /* \"contracts/ERC11551.sol\":41807:41809  id */\n      dup8\n        /* \"contracts/ERC11551.sol\":41811:41817  amount */\n      dup8\n        /* \"contracts/ERC11551.sol\":41819:41823  data */\n      dup8\n        /* \"contracts/ERC11551.sol\":41756:41786  _doSafeTransferAcceptanceCheck */\n      tag_130\n        /* \"contracts/ERC11551.sol\":41756:41824  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":14316:14420  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_72:\n        /* \"contracts/ERC11551.sol\":14403:14413  msg.sender */\n      caller\n        /* \"contracts/ERC11551.sol\":14316:14420  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_131:\n      swap1\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":33068:33255  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_86:\n        /* \"contracts/ERC11551.sol\":33154:33161  uint256 */\n      0x00\n        /* \"contracts/ERC11551.sol\":33189:33201  errorMessage */\n      dup2\n        /* \"contracts/ERC11551.sol\":33181:33187  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/ERC11551.sol\":33173:33202  require(b <= a, errorMessage) */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_135:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_137\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_135)\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_138\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_138:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n      pop\n      pop\n      pop\n        /* \"contracts/ERC11551.sol\":33224:33229  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/ERC11551.sol\":33068:33255  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":32196:32372  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_88:\n        /* \"contracts/ERC11551.sol\":32254:32261  uint256 */\n      0x00\n        /* \"contracts/ERC11551.sol\":32285:32290  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/ERC11551.sol\":32308:32314  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/ERC11551.sol\":32300:32346  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_140\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_140:\n        /* \"contracts/ERC11551.sol\":32364:32365  c */\n      swap4\n        /* \"contracts/ERC11551.sol\":32196:32372  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":49596:50374  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_96:\n        /* \"contracts/ERC11551.sol\":49840:49855  to.isContract() */\n      tag_142\n        /* \"contracts/ERC11551.sol\":49840:49842  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":49840:49853  to.isContract */\n      and\n      tag_143\n        /* \"contracts/ERC11551.sol\":49840:49855  to.isContract() */\n      jump\t// in\n    tag_142:\n        /* \"contracts/ERC11551.sol\":49836:50368  if (to.isContract()) {... */\n      iszero\n      tag_95\n      jumpi\n        /* \"contracts/ERC11551.sol\":49892:49894  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":49875:49918  IERC1155Receiver(to).onERC1155BatchReceived */\n      and\n      0xbc197c81\n        /* \"contracts/ERC11551.sol\":49919:49927  operator */\n      dup8\n        /* \"contracts/ERC11551.sol\":49929:49933  from */\n      dup8\n        /* \"contracts/ERC11551.sol\":49935:49938  ids */\n      dup7\n        /* \"contracts/ERC11551.sol\":49940:49947  amounts */\n      dup7\n        /* \"contracts/ERC11551.sol\":49949:49953  data */\n      dup7\n        /* \"contracts/ERC11551.sol\":49875:49954  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup5\n      dup2\n      sub\n      dup5\n      mstore\n      dup8\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_145:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_147\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_145)\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup5\n      dup2\n      sub\n      dup4\n      mstore\n      dup7\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_148:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_150\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_148)\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup5\n      dup2\n      sub\n      dup3\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_151:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_153\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_151)\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_154\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_154:\n      pop\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_156\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      mload\n      0x01\n    tag_156:\n        /* \"contracts/ERC11551.sol\":49871:50358  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n      tag_158\n      jumpi\n      tag_161\n      tag_162\n      jump\t// in\n    tag_161:\n      dup1\n      tag_163\n      jumpi\n      pop\n      jump(tag_160)\n    tag_163:\n        /* \"contracts/ERC11551.sol\":50227:50241  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n        /* \"contracts/ERC11551.sol\":50234:50240  reason */\n      dup5\n      swap4\n        /* \"contracts/ERC11551.sol\":50227:50241  revert(reason) */\n      swap2\n      swap3\n      dup4\n      swap3\n      0x44\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_137\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_135)\n        /* \"contracts/ERC11551.sol\":49871:50358  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n    tag_160:\n        /* \"contracts/ERC11551.sol\":50281:50343  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed\n      0x34\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC11551.sol\":49871:50358  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n    tag_158:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC11551.sol\":50003:50067  response != IERC1155Receiver(to).onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"contracts/ERC11551.sol\":49999:50160  if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {... */\n      tag_169\n      jumpi\n        /* \"contracts/ERC11551.sol\":50091:50141  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC11551.sol\":49999:50160  if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {... */\n    tag_169:\n        /* \"contracts/ERC11551.sol\":49955:50174  returns (bytes4 response) {... */\n      pop\n        /* \"contracts/ERC11551.sol\":49596:50374  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":50380:50573  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_125:\n        /* \"contracts/ERC11551.sol\":50499:50515  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/ERC11551.sol\":50513:50514  1 */\n      0x01\n        /* \"contracts/ERC11551.sol\":50499:50515  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/ERC11551.sol\":50446:50462  uint256[] memory */\n      0x60\n      swap2\n      dup3\n      swap2\n        /* \"contracts/ERC11551.sol\":50499:50515  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/ERC11551.sol\":50474:50515  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"contracts/ERC11551.sol\":50536:50543  element */\n      dup3\n        /* \"contracts/ERC11551.sol\":50525:50530  array */\n      dup2\n        /* \"contracts/ERC11551.sol\":50531:50532  0 */\n      0x00\n        /* \"contracts/ERC11551.sol\":50525:50533  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_173\n      jumpi\n      invalid\n    tag_173:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/ERC11551.sol\":50525:50543  array[0] = element */\n      mstore\n        /* \"contracts/ERC11551.sol\":50561:50566  array */\n      swap3\n        /* \"contracts/ERC11551.sol\":50380:50573  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":48849:49590  function _doSafeTransferAcceptanceCheck(... */\n    tag_130:\n        /* \"contracts/ERC11551.sol\":49068:49083  to.isContract() */\n      tag_175\n        /* \"contracts/ERC11551.sol\":49068:49070  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":49068:49081  to.isContract */\n      and\n      tag_143\n        /* \"contracts/ERC11551.sol\":49068:49083  to.isContract() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/ERC11551.sol\":49064:49584  if (to.isContract()) {... */\n      iszero\n      tag_95\n      jumpi\n        /* \"contracts/ERC11551.sol\":49120:49122  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":49103:49141  IERC1155Receiver(to).onERC1155Received */\n      and\n      0xf23a6e61\n        /* \"contracts/ERC11551.sol\":49142:49150  operator */\n      dup8\n        /* \"contracts/ERC11551.sol\":49152:49156  from */\n      dup8\n        /* \"contracts/ERC11551.sol\":49158:49160  id */\n      dup7\n        /* \"contracts/ERC11551.sol\":49162:49168  amount */\n      dup7\n        /* \"contracts/ERC11551.sol\":49170:49174  data */\n      dup7\n        /* \"contracts/ERC11551.sol\":49103:49175  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_177:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_179\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_177)\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_180\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_180:\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_182\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_183\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_183:\n      pop\n      mload\n      0x01\n    tag_182:\n        /* \"contracts/ERC11551.sol\":49099:49574  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_184\n      jumpi\n      tag_161\n      tag_162\n      jump\t// in\n    tag_184:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC11551.sol\":49224:49283  response != IERC1155Receiver(to).onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"contracts/ERC11551.sol\":49220:49376  if (response != IERC1155Receiver(to).onERC1155Received.selector) {... */\n      tag_169\n      jumpi\n        /* \"contracts/ERC11551.sol\":49307:49357  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC11551.sol\":8547:8960  function isContract(address account) internal view returns (bool) {... */\n    tag_143:\n        /* \"contracts/ERC11551.sol\":8907:8927  extcodesize(account) */\n      extcodesize\n        /* \"contracts/ERC11551.sol\":8945:8953  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"contracts/ERC11551.sol\":8547:8960  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"--CODEGEN--\":110:216   */\n    tag_197:\n        /* \"--CODEGEN--\":195:198   */\n      0xe0\n        /* \"--CODEGEN--\":191:206   */\n      shr\n      swap1\n        /* \"--CODEGEN--\":163:216   */\n      jump\t// out\n        /* \"--CODEGEN--\":224:963   */\n    tag_162:\n      0x00\n        /* \"--CODEGEN--\":297:301   */\n      0x44\n        /* \"--CODEGEN--\":279:295   */\n      returndatasize\n        /* \"--CODEGEN--\":276:302   */\n      lt\n        /* \"--CODEGEN--\":273:275   */\n      iszero\n      tag_200\n      jumpi\n        /* \"--CODEGEN--\":305:310   */\n      jump(tag_131)\n        /* \"--CODEGEN--\":273:275   */\n    tag_200:\n        /* \"--CODEGEN--\":339:340   */\n      0x04\n      dup2\n      dup3\n        /* \"--CODEGEN--\":318:341   */\n      returndatacopy\n        /* \"--CODEGEN--\":414:424   */\n      0x08c379a0\n        /* \"--CODEGEN--\":357:391   */\n      tag_201\n      dup3\n        /* \"--CODEGEN--\":382:390   */\n      mload\n        /* \"--CODEGEN--\":357:391   */\n      tag_197\n      jump\t// in\n    tag_201:\n        /* \"--CODEGEN--\":406:425   */\n      eq\n        /* \"--CODEGEN--\":396:398   */\n      tag_202\n      jumpi\n        /* \"--CODEGEN--\":429:434   */\n      jump(tag_131)\n        /* \"--CODEGEN--\":396:398   */\n    tag_202:\n        /* \"--CODEGEN--\":460:462   */\n      0x40\n        /* \"--CODEGEN--\":454:463   */\n      mload\n        /* \"--CODEGEN--\":496:512   */\n      returndatasize\n      not(0x03)\n        /* \"--CODEGEN--\":492:516   */\n      add\n        /* \"--CODEGEN--\":339:340   */\n      0x04\n        /* \"--CODEGEN--\":454:463   */\n      dup3\n        /* \"--CODEGEN--\":468:517   */\n      returndatacopy\n        /* \"--CODEGEN--\":543:547   */\n      dup1\n        /* \"--CODEGEN--\":537:548   */\n      mload\n        /* \"--CODEGEN--\":624:640   */\n      returndatasize\n        /* \"--CODEGEN--\":576:594   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":624:640   */\n      dup2\n        /* \"--CODEGEN--\":617:621   */\n      0x24\n        /* \"--CODEGEN--\":609:615   */\n      dup5\n        /* \"--CODEGEN--\":605:622   */\n      add\n        /* \"--CODEGEN--\":602:641   */\n      gt\n        /* \"--CODEGEN--\":576:594   */\n      dup2\n        /* \"--CODEGEN--\":568:574   */\n      dup5\n        /* \"--CODEGEN--\":565:595   */\n      gt\n        /* \"--CODEGEN--\":556:647   */\n      or\n        /* \"--CODEGEN--\":553:555   */\n      iszero\n      tag_203\n      jumpi\n        /* \"--CODEGEN--\":655:660   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_131)\n        /* \"--CODEGEN--\":553:555   */\n    tag_203:\n        /* \"--CODEGEN--\":693:699   */\n      dup3\n        /* \"--CODEGEN--\":687:691   */\n      dup5\n        /* \"--CODEGEN--\":683:700   */\n      add\n        /* \"--CODEGEN--\":672:700   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":725:728   */\n      dup3\n        /* \"--CODEGEN--\":719:729   */\n      mload\n        /* \"--CODEGEN--\":705:729   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":576:594   */\n      dup1\n        /* \"--CODEGEN--\":740:746   */\n      dup3\n        /* \"--CODEGEN--\":737:767   */\n      gt\n        /* \"--CODEGEN--\":734:736   */\n      iszero\n      tag_204\n      jumpi\n        /* \"--CODEGEN--\":770:775   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_131)\n        /* \"--CODEGEN--\":734:736   */\n    tag_204:\n      pop\n        /* \"--CODEGEN--\":847:863   */\n      returndatasize\n        /* \"--CODEGEN--\":841:845   */\n      dup4\n        /* \"--CODEGEN--\":837:864   */\n      add\n        /* \"--CODEGEN--\":807:811   */\n      0x20\n        /* \"--CODEGEN--\":814:820   */\n      dup3\n        /* \"--CODEGEN--\":802:805   */\n      dup5\n        /* \"--CODEGEN--\":794:821   */\n      add\n      add\n        /* \"--CODEGEN--\":829:865   */\n      gt\n        /* \"--CODEGEN--\":826:828   */\n      iszero\n      tag_205\n      jumpi\n        /* \"--CODEGEN--\":868:873   */\n      pop\n      pop\n      pop\n      jump(tag_131)\n        /* \"--CODEGEN--\":826:828   */\n    tag_205:\n        /* \"--CODEGEN--\":89:96   */\n      0x1f\n        /* \"--CODEGEN--\":73:87   */\n      add\n      not(0x1f)\n        /* \"--CODEGEN--\":69:97   */\n      and\n        /* \"--CODEGEN--\":892:942   */\n      dup2\n      add\n        /* \"--CODEGEN--\":807:811   */\n      0x20\n        /* \"--CODEGEN--\":892:942   */\n      add\n        /* \"--CODEGEN--\":460:462   */\n      0x40\n        /* \"--CODEGEN--\":881:943   */\n      mstore\n        /* \"--CODEGEN--\":900:903   */\n      swap2\n      pop\n      pop\n        /* \"--CODEGEN--\":267:963   */\n      swap1\n      jump\t// out\n    stop\n    data_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed 455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572\n    data_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503 455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73\n    data_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9 455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373\n    data_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c 455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373\n    data_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a 455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564\n    data_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d 455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686 455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564\n    data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf 455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572\n    data_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2 455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66\n    data_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5 455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368\n    data_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807 455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368\n\n    auxdata: 0xa2646970667358221220103b0ea383a1591322390fe2e5f97374e4e606768bf033c79237344a5862bd9a64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x18F1 CODESIZE SUB DUP1 PUSH3 0x18F1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP PUSH3 0x101 SWAP2 POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL SWAP1 POP PUSH3 0x137 JUMP JUMPDEST PUSH3 0x10C DUP2 PUSH3 0x1BC JUMP JUMPDEST PUSH3 0x11E PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL PUSH3 0x137 JUMP JUMPDEST PUSH3 0x130 PUSH4 0x3A24D07 PUSH1 0xE2 SHL PUSH3 0x137 JUMP JUMPDEST POP PUSH3 0x271 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP1 DUP3 AND EQ ISZERO PUSH3 0x197 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433136353A20696E76616C696420696E7465726661636520696400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 MLOAD PUSH3 0x1D1 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1D5 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x218 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x248 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x248 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x248 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x22B JUMP JUMPDEST POP PUSH3 0x256 SWAP3 SWAP2 POP PUSH3 0x25A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x256 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x25B JUMP JUMPDEST PUSH2 0x1670 DUP1 PUSH3 0x281 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x529 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x661 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x680 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x144 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x189 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x718 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x47D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xA16 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4B9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4A1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xB94 JUMP JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x53F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xCB1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x14BB PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x70C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x70C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1613 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x79D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1540 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A5 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x7D0 JUMPI POP PUSH2 0x7D0 DUP6 PUSH2 0x7CB PUSH2 0xE7C JUMP JUMPDEST PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1565 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x815 PUSH2 0xE7C JUMP JUMPDEST SWAP1 POP PUSH2 0x825 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xA0E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x83F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x857 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x8C4 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1597 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE81 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x8FB SWAP1 DUP3 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP8 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP4 KECCAK256 SSTORE POP ADD PUSH2 0x828 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9AC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x994 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9EB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9D3 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA0E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF79 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xA58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15EA PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xA72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA9C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xB8C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAC2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x14E6 PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB20 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB44 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB79 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xAA2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBA6 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xBEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15C1 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0xBF9 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0xC3D PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1540 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCFE PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xD24 JUMPI POP PUSH2 0xD24 DUP6 PUSH2 0x7CB PUSH2 0xE7C JUMP JUMPDEST PUSH2 0xD5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1517 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD69 PUSH2 0xE7C JUMP JUMPDEST SWAP1 POP PUSH2 0xD89 DUP2 DUP8 DUP8 PUSH2 0xD7A DUP9 PUSH2 0x11F8 JUMP JUMPDEST PUSH2 0xD83 DUP9 PUSH2 0x11F8 JUMP JUMPDEST DUP8 PUSH2 0xA0E JUMP JUMPDEST PUSH2 0xDD0 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1597 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xE07 SWAP1 DUP5 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE DUP1 MLOAD DUP11 DUP5 AND SWAP4 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 PUSH2 0xA0E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x123C JUMP JUMPDEST CALLER JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xF10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEBD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF02 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xF72 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF8B DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13AD JUMP JUMPDEST ISZERO PUSH2 0xA0E JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1019 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1001 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1058 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1040 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1094 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x107C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x10C1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x110B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x11A0 JUMPI PUSH2 0x1117 PUSH2 0x13B9 JUMP JUMPDEST DUP1 PUSH2 0x1122 JUMPI POP PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD DUP5 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xED5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x145F PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x11EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1493 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x122B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x124E DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13AD JUMP JUMPDEST ISZERO PUSH2 0xA0E JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12DD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12C5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x130A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x132D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1352 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x134D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x135E JUMPI PUSH2 0x1117 PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x11EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1493 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x13C9 JUMPI PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY PUSH4 0x8C379A0 PUSH2 0x13DD DUP3 MLOAD PUSH2 0x13B3 JUMP JUMPDEST EQ PUSH2 0x13E7 JUMPI PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1417 JUMPI POP POP POP POP PUSH2 0xE7E JUMP JUMPDEST DUP3 DUP5 ADD SWAP3 POP DUP3 MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1431 JUMPI POP POP POP POP PUSH2 0xE7E JUMP JUMPDEST POP RETURNDATASIZE DUP4 ADD PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x1449 JUMPI POP POP POP PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F206E6F6E20455243313135 CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH19 0x656A656374656420746F6B656E734552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A2062617463682062 PUSH2 0x6C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A2063616C6C657220 PUSH10 0x73206E6F74206F776E65 PUSH19 0x206E6F7220617070726F766564455243313135 CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0x4552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F72207472616E73666572 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH20 0x657474696E6720617070726F76616C2073746174 PUSH22 0x7320666F722073656C66455243313135353A20616363 PUSH16 0x756E747320616E6420696473206C656E PUSH8 0x7468206D69736D61 PUSH21 0x6368455243313135353A2069647320616E6420616D PUSH16 0x756E7473206C656E677468206D69736D PUSH2 0x7463 PUSH9 0xA26469706673582212 KECCAK256 LT EXTCODESIZE 0xE LOG3 DUP4 LOG1 MSIZE SGT 0x22 CODECOPY 0xF 0xE2 0xE5 0xF9 PUSH20 0x74E4E606768BF033C79237344A5862BD9A64736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "36832:13743:0:-:0;;;38286:352;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38286:352:0;;;;;;;;;;-1:-1:-1;38286:352:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38286:352:0;;-1:-1:-1;30372:40:0;;-1:-1:-1;;;;30391:20:0;-1:-1:-1;30372:18:0;:40::i;:::-;38335:12;38343:3;38335:7;:12::i;:::-;38436:41;-1:-1:-1;;;38436:18:0;:41::i;:::-;38577:54;-1:-1:-1;;;38577:18:0;:54::i;:::-;38286:352;36832:13743;;31103:198;-1:-1:-1;;;;;;31186:25:0;;;;;31178:66;;;;;-1:-1:-1;;;31178:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;31254:33:0;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;31254:40:0;31290:4;31254:40;;;31103:198::o;43910:86::-;43976:13;;;;:4;;:13;;;;;:::i;:::-;;43910:86;:::o;36832:13743::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;36832:13743:0;;;-1:-1:-1;36832:13743:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461035a578063a22cb465146104cd578063e985e9c5146104fb578063f242432a1461052957610087565b8062fdd58e1461008c57806301ffc9a7146100ca5780630e89341c146101055780632eb2c2d614610197575b600080fd5b6100b8600480360360408110156100a257600080fd5b506001600160a01b0381351690602001356105f2565b60408051918252519081900360200190f35b6100f1600480360360208110156100e057600080fd5b50356001600160e01b031916610661565b604080519115158252519081900360200190f35b6101226004803603602081101561011b57600080fd5b5035610680565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015c578181015183820152602001610144565b50505050905090810190601f1680156101895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610358600480360360a08110156101ad57600080fd5b6001600160a01b038235811692602081013590911691810190606081016040820135600160201b8111156101e057600080fd5b8201836020820111156101f257600080fd5b803590602001918460208302840111600160201b8311171561021357600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561026257600080fd5b82018360208201111561027457600080fd5b803590602001918460208302840111600160201b8311171561029557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156102e457600080fd5b8201836020820111156102f657600080fd5b803590602001918460018302840111600160201b8311171561031757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610718945050505050565b005b61047d6004803603604081101561037057600080fd5b810190602081018135600160201b81111561038a57600080fd5b82018360208201111561039c57600080fd5b803590602001918460208302840111600160201b831117156103bd57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561040c57600080fd5b82018360208201111561041e57600080fd5b803590602001918460208302840111600160201b8311171561043f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610a16945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156104b95781810151838201526020016104a1565b505050509050019250505060405180910390f35b610358600480360360408110156104e357600080fd5b506001600160a01b0381351690602001351515610b94565b6100f16004803603604081101561051157600080fd5b506001600160a01b0381358116916020013516610c83565b610358600480360360a081101561053f57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a081016080820135600160201b81111561057e57600080fd5b82018360208201111561059057600080fd5b803590602001918460018302840111600160201b831117156105b157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610cb1945050505050565b60006001600160a01b0383166106395760405162461bcd60e51b815260040180806020018281038252602b8152602001806114bb602b913960400191505060405180910390fd5b5060009081526001602090815260408083206001600160a01b03949094168352929052205490565b6001600160e01b03191660009081526020819052604090205460ff1690565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561070c5780601f106106e15761010080835404028352916020019161070c565b820191906000526020600020905b8154815290600101906020018083116106ef57829003601f168201915b50505050509050919050565b81518351146107585760405162461bcd60e51b81526004018080602001828103825260288152602001806116136028913960400191505060405180910390fd5b6001600160a01b03841661079d5760405162461bcd60e51b81526004018080602001828103825260258152602001806115406025913960400191505060405180910390fd5b6107a5610e7c565b6001600160a01b0316856001600160a01b031614806107d057506107d0856107cb610e7c565b610c83565b61080b5760405162461bcd60e51b81526004018080602001828103825260328152602001806115656032913960400191505060405180910390fd5b6000610815610e7c565b9050610825818787878787610a0e565b60005b845181101561092657600085828151811061083f57fe5b60200260200101519050600085838151811061085757fe5b602002602001015190506108c4816040518060600160405280602a8152602001611597602a91396001600086815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002054610e819092919063ffffffff16565b60008381526001602090815260408083206001600160a01b038e811685529252808320939093558a16815220546108fb9082610f18565b60009283526001602081815260408086206001600160a01b038d168752909152909320555001610828565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156109ac578181015183820152602001610994565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156109eb5781810151838201526020016109d3565b5050505090500194505050505060405180910390a4610a0e818787878787610f79565b505050505050565b60608151835114610a585760405162461bcd60e51b81526004018080602001828103825260298152602001806115ea6029913960400191505060405180910390fd5b6060835167ffffffffffffffff81118015610a7257600080fd5b50604051908082528060200260200182016040528015610a9c578160200160208202803683370190505b50905060005b8451811015610b8c5760006001600160a01b0316858281518110610ac257fe5b60200260200101516001600160a01b03161415610b105760405162461bcd60e51b81526004018080602001828103825260318152602001806114e66031913960400191505060405180910390fd5b60016000858381518110610b2057fe5b602002602001015181526020019081526020016000206000868381518110610b4457fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610b7957fe5b6020908102919091010152600101610aa2565b509392505050565b816001600160a01b0316610ba6610e7c565b6001600160a01b03161415610bec5760405162461bcd60e51b81526004018080602001828103825260298152602001806115c16029913960400191505060405180910390fd5b8060026000610bf9610e7c565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610c3d610e7c565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b6001600160a01b038416610cf65760405162461bcd60e51b81526004018080602001828103825260258152602001806115406025913960400191505060405180910390fd5b610cfe610e7c565b6001600160a01b0316856001600160a01b03161480610d245750610d24856107cb610e7c565b610d5f5760405162461bcd60e51b81526004018080602001828103825260298152602001806115176029913960400191505060405180910390fd5b6000610d69610e7c565b9050610d89818787610d7a886111f8565b610d83886111f8565b87610a0e565b610dd0836040518060600160405280602a8152602001611597602a913960008781526001602090815260408083206001600160a01b038d1684529091529020549190610e81565b60008581526001602090815260408083206001600160a01b038b81168552925280832093909355871681522054610e079084610f18565b60008581526001602090815260408083206001600160a01b03808b168086529184529382902094909455805188815291820187905280518a8416938616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a4610a0e81878787878761123c565b335b90565b60008184841115610f105760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed5578181015183820152602001610ebd565b50505050905090810190601f168015610f025780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610f72576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b610f8b846001600160a01b03166113ad565b15610a0e57836001600160a01b031663bc197c8187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015611019578181015183820152602001611001565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015611058578181015183820152602001611040565b50505050905001848103825285818151815260200191508051906020019080838360005b8381101561109457818101518382015260200161107c565b50505050905090810190601f1680156110c15780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b1580156110e657600080fd5b505af192505050801561110b57506040513d602081101561110657600080fd5b505160015b6111a0576111176113b9565b806111225750611169565b60405162461bcd60e51b8152602060048201818152835160248401528351849391928392604401919085019080838360008315610ed5578181015183820152602001610ebd565b60405162461bcd60e51b815260040180806020018281038252603481526020018061145f6034913960400191505060405180910390fd5b6001600160e01b0319811663bc197c8160e01b146111ef5760405162461bcd60e51b81526004018080602001828103825260288152602001806114936028913960400191505060405180910390fd5b50505050505050565b60408051600180825281830190925260609182919060208083019080368337019050509050828160008151811061122b57fe5b602090810291909101015292915050565b61124e846001600160a01b03166113ad565b15610a0e57836001600160a01b031663f23a6e6187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156112dd5781810151838201526020016112c5565b50505050905090810190601f16801561130a5780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561132d57600080fd5b505af192505050801561135257506040513d602081101561134d57600080fd5b505160015b61135e576111176113b9565b6001600160e01b0319811663f23a6e6160e01b146111ef5760405162461bcd60e51b81526004018080602001828103825260288152602001806114936028913960400191505060405180910390fd5b3b151590565b60e01c90565b600060443d10156113c957610e7e565b600481823e6308c379a06113dd82516113b3565b146113e757610e7e565b6040513d600319016004823e80513d67ffffffffffffffff81602484011181841117156114175750505050610e7e565b828401925082519150808211156114315750505050610e7e565b503d8301602082840101111561144957505050610e7e565b601f01601f191681016020016040529150509056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368a2646970667358221220103b0ea383a1591322390fe2e5f97374e4e606768bf033c79237344a5862bd9a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x529 JUMPI PUSH2 0x87 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x661 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x122 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x680 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x144 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x189 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x718 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x47D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x38A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xA16 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4B9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4A1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xB94 JUMP JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x358 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x53F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x590 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xCB1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x14BB PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x70C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x70C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1613 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x79D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1540 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A5 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x7D0 JUMPI POP PUSH2 0x7D0 DUP6 PUSH2 0x7CB PUSH2 0xE7C JUMP JUMPDEST PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1565 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x815 PUSH2 0xE7C JUMP JUMPDEST SWAP1 POP PUSH2 0x825 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xA0E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x83F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x857 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x8C4 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1597 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE81 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x8FB SWAP1 DUP3 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP8 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP4 KECCAK256 SSTORE POP ADD PUSH2 0x828 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9AC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x994 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9EB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9D3 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xA0E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xF79 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xA58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15EA PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xA72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA9C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xB8C JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAC2 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xB10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x14E6 PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB20 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB44 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB79 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0xAA2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBA6 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xBEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x15C1 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0xBF9 PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0xC3D PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xCF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1540 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCFE PUSH2 0xE7C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xD24 JUMPI POP PUSH2 0xD24 DUP6 PUSH2 0x7CB PUSH2 0xE7C JUMP JUMPDEST PUSH2 0xD5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1517 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD69 PUSH2 0xE7C JUMP JUMPDEST SWAP1 POP PUSH2 0xD89 DUP2 DUP8 DUP8 PUSH2 0xD7A DUP9 PUSH2 0x11F8 JUMP JUMPDEST PUSH2 0xD83 DUP9 PUSH2 0x11F8 JUMP JUMPDEST DUP8 PUSH2 0xA0E JUMP JUMPDEST PUSH2 0xDD0 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1597 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xE07 SWAP1 DUP5 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE DUP1 MLOAD DUP11 DUP5 AND SWAP4 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 PUSH2 0xA0E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x123C JUMP JUMPDEST CALLER JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xF10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEBD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF02 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xF72 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF8B DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13AD JUMP JUMPDEST ISZERO PUSH2 0xA0E JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1019 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1001 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1058 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1040 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1094 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x107C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x10C1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x110B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x11A0 JUMPI PUSH2 0x1117 PUSH2 0x13B9 JUMP JUMPDEST DUP1 PUSH2 0x1122 JUMPI POP PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD DUP5 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xED5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x145F PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x11EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1493 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x122B JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x124E DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13AD JUMP JUMPDEST ISZERO PUSH2 0xA0E JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12DD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12C5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x130A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x132D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1352 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x134D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x135E JUMPI PUSH2 0x1117 PUSH2 0x13B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x11EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1493 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x13C9 JUMPI PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY PUSH4 0x8C379A0 PUSH2 0x13DD DUP3 MLOAD PUSH2 0x13B3 JUMP JUMPDEST EQ PUSH2 0x13E7 JUMPI PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1417 JUMPI POP POP POP POP PUSH2 0xE7E JUMP JUMPDEST DUP3 DUP5 ADD SWAP3 POP DUP3 MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1431 JUMPI POP POP POP POP PUSH2 0xE7E JUMP JUMPDEST POP RETURNDATASIZE DUP4 ADD PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x1449 JUMPI POP POP POP PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F206E6F6E20455243313135 CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH19 0x656A656374656420746F6B656E734552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A2062617463682062 PUSH2 0x6C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A2063616C6C657220 PUSH10 0x73206E6F74206F776E65 PUSH19 0x206E6F7220617070726F766564455243313135 CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0x4552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F72207472616E73666572 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH20 0x657474696E6720617070726F76616C2073746174 PUSH22 0x7320666F722073656C66455243313135353A20616363 PUSH16 0x756E747320616E6420696473206C656E PUSH8 0x7468206D69736D61 PUSH21 0x6368455243313135353A2069647320616E6420616D PUSH16 0x756E7473206C656E677468206D69736D PUSH2 0x7463 PUSH9 0xA26469706673582212 KECCAK256 LT EXTCODESIZE 0xE LOG3 DUP4 LOG1 MSIZE SGT 0x22 CODECOPY 0xF 0xE2 0xE5 0xF9 PUSH20 0x74E4E606768BF033C79237344A5862BD9A64736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "36832:13743:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39276:220;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;39276:220:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;30569:140;;;;;;;;;;;;;;;;-1:-1:-1;30569:140:0;-1:-1:-1;;;;;;30569:140:0;;:::i;:::-;;;;;;;;;;;;;;;;;;39037:97;;;;;;;;;;;;;;;;-1:-1:-1;39037:97:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41903:1184;;;;;;;;;;;;;;;;-1:-1:-1;;;;;41903:1184:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;41903:1184:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;41903:1184:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;41903:1184:0;;;;;;;;-1:-1:-1;41903:1184:0;;-1:-1:-1;;;;;41903:1184:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;41903:1184:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;41903:1184:0;;;;;;;;-1:-1:-1;41903:1184:0;;-1:-1:-1;;;;;41903:1184:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;41903:1184:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;41903:1184:0;;-1:-1:-1;41903:1184:0;;-1:-1:-1;;;;;41903:1184:0:i;:::-;;39653:615;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;39653:615:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;39653:615:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39653:615:0;;;;;;;;-1:-1:-1;39653:615:0;;-1:-1:-1;;;;;39653:615:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;39653:615:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39653:615:0;;-1:-1:-1;39653:615:0;;-1:-1:-1;;;;;39653:615:0:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40336:306;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;40336:306:0;;;;;;;;;;:::i;40709:158::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;40709:158:0;;;;;;;;;;:::i;40934:897::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;40934:897:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;40934:897:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;40934:897:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;40934:897:0;;-1:-1:-1;40934:897:0;;-1:-1:-1;;;;;40934:897:0:i;39276:220::-;39354:7;-1:-1:-1;;;;;39381:21:0;;39373:77;;;;-1:-1:-1;;;39373:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39467:13:0;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;39467:22:0;;;;;;;;;;;;39276:220::o;30569:140::-;-1:-1:-1;;;;;;30669:33:0;30646:4;30669:33;;;;;;;;;;;;;;30569:140::o;39037:97::-;39123:4;39116:11;;;;;;;;-1:-1:-1;;39116:11:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39091:13;;39116:11;;39123:4;;39116:11;;39123:4;39116:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39037:97;;;:::o;41903:1184::-;42157:7;:14;42143:3;:10;:28;42135:81;;;;-1:-1:-1;;;42135:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;42234:16:0;;42226:66;;;;-1:-1:-1;;;42226:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42331:12;:10;:12::i;:::-;-1:-1:-1;;;;;42323:20:0;:4;-1:-1:-1;;;;;42323:20:0;;:60;;;;42347:36;42364:4;42370:12;:10;:12::i;:::-;42347:16;:36::i;:::-;42302:157;;;;-1:-1:-1;;;42302:157:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42470:16;42489:12;:10;:12::i;:::-;42470:31;;42512:60;42533:8;42543:4;42549:2;42553:3;42558:7;42567:4;42512:20;:60::i;:::-;42588:9;42583:349;42607:3;:10;42603:1;:14;42583:349;;;42638:10;42651:3;42655:1;42651:6;;;;;;;;;;;;;;42638:19;;42671:14;42688:7;42696:1;42688:10;;;;;;;;;;;;;;42671:27;;42735:123;42776:6;42735:123;;;;;;;;;;;;;;;;;:9;:13;42745:2;42735:13;;;;;;;;;;;:19;42749:4;-1:-1:-1;;;;;42735:19:0;-1:-1:-1;;;;;42735:19:0;;;;;;;;;;;;;:23;;:123;;;;;:::i;:::-;42713:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;42713:19:0;;;;;;;;;;:145;;;;42892:17;;;;;;:29;;42914:6;42892:21;:29::i;:::-;42872:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;42872:17:0;;;;;;;;;;:49;-1:-1:-1;42619:3:0;42583:349;;;;42977:2;-1:-1:-1;;;;;42947:47:0;42971:4;-1:-1:-1;;;;;42947:47:0;42961:8;-1:-1:-1;;;;;42947:47:0;;42981:3;42986:7;42947:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43005:75;43041:8;43051:4;43057:2;43061:3;43066:7;43075:4;43005:35;:75::i;:::-;41903:1184;;;;;;:::o;39653:615::-;39810:16;39869:3;:10;39850:8;:15;:29;39842:83;;;;-1:-1:-1;;;39842:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39936:30;39983:8;:15;39969:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39969:30:0;;39936:63;;40015:9;40010:221;40034:8;:15;40030:1;:19;40010:221;;;40101:1;-1:-1:-1;;;;;40078:25:0;:8;40087:1;40078:11;;;;;;;;;;;;;;-1:-1:-1;;;;;40078:25:0;;;40070:87;;;;-1:-1:-1;;;40070:87:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40190:9;:17;40200:3;40204:1;40200:6;;;;;;;;;;;;;;40190:17;;;;;;;;;;;:30;40208:8;40217:1;40208:11;;;;;;;;;;;;;;-1:-1:-1;;;;;40190:30:0;-1:-1:-1;;;;;40190:30:0;;;;;;;;;;;;;40171:13;40185:1;40171:16;;;;;;;;;;;;;;;;;:49;40051:3;;40010:221;;;-1:-1:-1;40248:13:0;39653:615;-1:-1:-1;;;39653:615:0:o;40336:306::-;40454:8;-1:-1:-1;;;;;40438:24:0;:12;:10;:12::i;:::-;-1:-1:-1;;;;;40438:24:0;;;40430:78;;;;-1:-1:-1;;;40430:78:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40564:8;40519:18;:32;40538:12;:10;:12::i;:::-;-1:-1:-1;;;;;40519:32:0;;;;;;;;;;;;;;;;;-1:-1:-1;40519:32:0;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;40519:53:0;;;;;;;;;;;40602:12;:10;:12::i;:::-;-1:-1:-1;;;;;40587:48:0;;40626:8;40587:48;;;;;;;;;;;;;;;;;;;;40336:306;;:::o;40709:158::-;-1:-1:-1;;;;;40823:27:0;;;40800:4;40823:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;40709:158::o;40934:897::-;-1:-1:-1;;;;;41149:16:0;;41141:66;;;;-1:-1:-1;;;41141:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41246:12;:10;:12::i;:::-;-1:-1:-1;;;;;41238:20:0;:4;-1:-1:-1;;;;;41238:20:0;;:60;;;;41262:36;41279:4;41285:12;:10;:12::i;41262:36::-;41217:148;;;;-1:-1:-1;;;41217:148:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41376:16;41395:12;:10;:12::i;:::-;41376:31;;41418:96;41439:8;41449:4;41455:2;41459:21;41477:2;41459:17;:21::i;:::-;41482:25;41500:6;41482:17;:25::i;:::-;41509:4;41418:20;:96::i;:::-;41547:77;41571:6;41547:77;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;41547:19:0;;;;;;;;;;;:77;:23;:77::i;:::-;41525:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;41525:19:0;;;;;;;;;;:99;;;;41654:17;;;;;;:29;;41676:6;41654:21;:29::i;:::-;41634:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;41634:17:0;;;;;;;;;;;;;:49;;;;41699:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41756:68;41787:8;41797:4;41803:2;41807;41811:6;41819:4;41756:30;:68::i;14316:104::-;14403:10;14316:104;;:::o;33068:187::-;33154:7;33189:12;33181:6;;;;33173:29;;;;-1:-1:-1;;;33173:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;33224:5:0;;;33068:187::o;32196:176::-;32254:7;32285:5;;;32308:6;;;;32300:46;;;;;-1:-1:-1;;;32300:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;32364:1;32196:176;-1:-1:-1;;;32196:176:0:o;49596:778::-;49840:15;:2;-1:-1:-1;;;;;49840:13:0;;:15::i;:::-;49836:532;;;49892:2;-1:-1:-1;;;;;49875:43:0;;49919:8;49929:4;49935:3;49940:7;49949:4;49875:79;;;;;;;;;;;;;-1:-1:-1;;;;;49875:79:0;;;;;;-1:-1:-1;;;;;49875:79:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;49875:79:0;;;49871:487;;;;:::i;:::-;;;;;;;;50227:14;;-1:-1:-1;;;50227:14:0;;;;;;;;;;;;;;;;;50234:6;;50227:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49871:487;50281:62;;-1:-1:-1;;;50281:62:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49871:487;-1:-1:-1;;;;;;50003:64:0;;-1:-1:-1;;;50003:64:0;49999:161;;50091:50;;-1:-1:-1;;;50091:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49999:161;49955:219;49596:778;;;;;;:::o;50380:193::-;50499:16;;;50513:1;50499:16;;;;;;;;;50446;;;;50499;;;;;;;;;;;;-1:-1:-1;50499:16:0;50474:41;;50536:7;50525:5;50531:1;50525:8;;;;;;;;;;;;;;;;;:18;50561:5;50380:193;-1:-1:-1;;50380:193:0:o;48849:741::-;49068:15;:2;-1:-1:-1;;;;;49068:13:0;;:15::i;:::-;49064:520;;;49120:2;-1:-1:-1;;;;;49103:38:0;;49142:8;49152:4;49158:2;49162:6;49170:4;49103:72;;;;;;;;;;;;;-1:-1:-1;;;;;49103:72:0;;;;;;-1:-1:-1;;;;;49103:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;49103:72:0;;;49099:475;;;;:::i;:::-;-1:-1:-1;;;;;;49224:59:0;;-1:-1:-1;;;49224:59:0;49220:156;;49307:50;;-1:-1:-1;;;49307:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8547:413;8907:20;8945:8;;;8547:413::o;110:106:-1:-;195:3;191:15;;163:53::o;224:739::-;;297:4;279:16;276:26;273:2;;;305:5;;273:2;339:1;-1:-1;;318:23;414:10;357:34;-1:-1;382:8;357:34;:::i;:::-;406:19;396:2;;429:5;;396:2;460;454:9;496:16;-1:-1;;492:24;339:1;454:9;468:49;543:4;537:11;624:16;576:18;624:16;617:4;609:6;605:17;602:39;576:18;568:6;565:30;556:91;553:2;;;655:5;;;;;;553:2;693:6;687:4;683:17;672:28;;725:3;719:10;705:24;;576:18;740:6;737:30;734:2;;;770:5;;;;;;734:2;;847:16;841:4;837:27;807:4;814:6;802:3;794:27;;829:36;826:2;;;868:5;;;;;826:2;89:7;73:14;-1:-1;;69:28;892:50;;807:4;892:50;460:2;881:62;900:3;-1:-1;;267:696;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1148800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "1306",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "1186",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 30372,
									"end": 30412,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 30372,
									"end": 30412,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1FFC9A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 30391,
									"end": 30411,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 30372,
									"end": 30390,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 30372,
									"end": 30412,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 30372,
									"end": 30412,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 30372,
									"end": 30412,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38335,
									"end": 38347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 38343,
									"end": 38346,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38335,
									"end": 38342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 38335,
									"end": 38347,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 38335,
									"end": 38347,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 38335,
									"end": 38347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38436,
									"end": 38477,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6CDB3D13"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 38436,
									"end": 38454,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 38436,
									"end": 38477,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 38436,
									"end": 38477,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 38436,
									"end": 38477,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38577,
									"end": 38631,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3A24D07"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 38577,
									"end": 38595,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 38577,
									"end": 38631,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 38577,
									"end": 38631,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 38577,
									"end": 38631,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38286,
									"end": 38638,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 31103,
									"end": 31301,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 31103,
									"end": 31301,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 31186,
									"end": 31211,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31186,
									"end": 31211,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31186,
									"end": 31211,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31186,
									"end": 31211,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 31186,
									"end": 31211,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "PUSH",
									"source": 0,
									"value": "1C"
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "PUSH",
									"source": 0,
									"value": "4552433136353A20696E76616C696420696E7465726661636520696400000000"
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31274,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31294,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31294,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 31254,
									"end": 31294,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31290,
									"end": 31294,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31254,
									"end": 31294,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31294,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31294,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 31103,
									"end": 31301,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 43910,
									"end": 43996,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 43910,
									"end": 43996,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43976,
									"end": 43980,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 43976,
									"end": 43980,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43910,
									"end": 43996,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43910,
									"end": 43996,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36832,
									"end": 50575,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220103b0ea383a1591322390fe2e5f97374e4e606768bf033c79237344a5862bd9a64736f6c634300060c0033",
									".code": [
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36832,
											"end": 50575,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39354,
											"end": 39361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39381,
											"end": 39402,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39381,
											"end": 39402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "PUSH",
											"source": 0,
											"value": "2B"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "PUSH data",
											"source": 0,
											"value": "1F4DE6A436172E7F7B1540476031CB037FC18EDE9CC346A56DA1697CBD352AA9"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "PUSH",
											"source": 0,
											"value": "2B"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39476,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30646,
											"end": 30650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39123,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39091,
											"end": 39104,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 39091,
											"end": 39104,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39123,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39123,
											"end": 39127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39123,
											"end": 39127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42157,
											"end": 42164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42157,
											"end": 42171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42143,
											"end": 42146,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42143,
											"end": 42153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42143,
											"end": 42171,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "PUSH data",
											"source": 0,
											"value": "E909E0C9A8F96B4F9AF03B716811ECE20BEB070BE416893ED1D50619B5930807"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42234,
											"end": 42250,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42234,
											"end": 42250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "PUSH data",
											"source": 0,
											"value": "6FAF1C67F278B07C6771DCF4C315A89C21C0EAED11D9AB3D51774DA1CFEF545D"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42331,
											"end": 42343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 42331,
											"end": 42341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 42331,
											"end": 42343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42331,
											"end": 42343,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 42331,
											"end": 42343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42323,
											"end": 42343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42323,
											"end": 42327,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42323,
											"end": 42343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42323,
											"end": 42343,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42323,
											"end": 42383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42323,
											"end": 42383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 42323,
											"end": 42383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42323,
											"end": 42383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42347,
											"end": 42383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 42364,
											"end": 42368,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42370,
											"end": 42382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 42370,
											"end": 42380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 42370,
											"end": 42382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42370,
											"end": 42382,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 42370,
											"end": 42382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42347,
											"end": 42363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 42347,
											"end": 42383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42347,
											"end": 42383,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 42347,
											"end": 42383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "PUSH data",
											"source": 0,
											"value": "70A41C66829F5508884CDA9EF3D2F72551B34F23E4035BE97941681123D2D686"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42470,
											"end": 42486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42489,
											"end": 42501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 42489,
											"end": 42499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 42489,
											"end": 42501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42489,
											"end": 42501,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 42489,
											"end": 42501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42470,
											"end": 42501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42470,
											"end": 42501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 42533,
											"end": 42541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42543,
											"end": 42547,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 42549,
											"end": 42551,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42556,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 42558,
											"end": 42565,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 42567,
											"end": 42571,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 42512,
											"end": 42572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42512,
											"end": 42572,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 42512,
											"end": 42572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42588,
											"end": 42597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42583,
											"end": 42932,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 42583,
											"end": 42932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42607,
											"end": 42610,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42607,
											"end": 42617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42603,
											"end": 42604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42603,
											"end": 42617,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42583,
											"end": 42932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42583,
											"end": 42932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 42583,
											"end": 42932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42638,
											"end": 42648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42651,
											"end": 42654,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42655,
											"end": 42656,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42638,
											"end": 42657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42638,
											"end": 42657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42671,
											"end": 42685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42688,
											"end": 42695,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42696,
											"end": 42697,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42671,
											"end": 42698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42671,
											"end": 42698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 42776,
											"end": 42782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "PUSH data",
											"source": 0,
											"value": "8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF"
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42744,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42745,
											"end": 42747,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42749,
											"end": 42753,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 42735,
											"end": 42758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42722,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42713,
											"end": 42732,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42732,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42732,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42732,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42732,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42858,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42858,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42858,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 42892,
											"end": 42909,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 42892,
											"end": 42909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42892,
											"end": 42909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42892,
											"end": 42909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42892,
											"end": 42909,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42892,
											"end": 42909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42892,
											"end": 42921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 42892,
											"end": 42921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 42920,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42892,
											"end": 42913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 42892,
											"end": 42921,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42892,
											"end": 42921,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 42892,
											"end": 42921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42881,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42872,
											"end": 42889,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42889,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42889,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42889,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42921,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42619,
											"end": 42622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42583,
											"end": 42932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 42583,
											"end": 42932,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42583,
											"end": 42932,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 42583,
											"end": 42932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42583,
											"end": 42932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42977,
											"end": 42979,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42971,
											"end": 42975,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42961,
											"end": 42969,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 42981,
											"end": 42984,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 42986,
											"end": 42993,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 43005,
											"end": 43080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 43041,
											"end": 43049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43051,
											"end": 43055,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43057,
											"end": 43059,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43061,
											"end": 43064,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43066,
											"end": 43073,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43075,
											"end": 43079,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43005,
											"end": 43040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 43005,
											"end": 43080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43005,
											"end": 43080,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 43005,
											"end": 43080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39810,
											"end": 39826,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 39869,
											"end": 39872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39869,
											"end": 39879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39850,
											"end": 39858,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39850,
											"end": 39865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39850,
											"end": 39879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "PUSH data",
											"source": 0,
											"value": "E155F5D69798C6205436A388A4F3A5FD42F54147B40F4D63A2C8071FF8A9FEE5"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39936,
											"end": 39966,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 39983,
											"end": 39991,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 39998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39936,
											"end": 39999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39936,
											"end": 39999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40015,
											"end": 40024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40010,
											"end": 40231,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 40010,
											"end": 40231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40034,
											"end": 40042,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40034,
											"end": 40049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40030,
											"end": 40031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40030,
											"end": 40049,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40010,
											"end": 40231,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40010,
											"end": 40231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 40010,
											"end": 40231,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40101,
											"end": 40102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40078,
											"end": 40103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40086,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40088,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40078,
											"end": 40103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40103,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40103,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "PUSH",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "PUSH data",
											"source": 0,
											"value": "1FBBB69D10332726591DC7EE4A23A94661EDA2BEC5CE6BF93A68249147DC8D9C"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "PUSH",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40199,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40200,
											"end": 40203,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40204,
											"end": 40205,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40208,
											"end": 40216,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40217,
											"end": 40218,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40185,
											"end": 40186,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40051,
											"end": 40054,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40051,
											"end": 40054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40010,
											"end": 40231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 40010,
											"end": 40231,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40010,
											"end": 40231,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 40010,
											"end": 40231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40248,
											"end": 40261,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40454,
											"end": 40462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40438,
											"end": 40462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40438,
											"end": 40450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 40438,
											"end": 40448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 40438,
											"end": 40450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40438,
											"end": 40450,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 40438,
											"end": 40450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40438,
											"end": 40462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40438,
											"end": 40462,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40438,
											"end": 40462,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "PUSH data",
											"source": 0,
											"value": "DF9806C6DC743DE602E49918A67B580590D69AB768BDB59F977C0A884A91A7C2"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40564,
											"end": 40572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40537,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40538,
											"end": 40550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 40538,
											"end": 40548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 40538,
											"end": 40550,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40538,
											"end": 40550,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 40538,
											"end": 40550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 40602,
											"end": 40614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 40602,
											"end": 40612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 40602,
											"end": 40614,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40602,
											"end": 40614,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 40602,
											"end": 40614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 40626,
											"end": 40634,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40800,
											"end": 40804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40841,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41149,
											"end": 41165,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41149,
											"end": 41165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "PUSH data",
											"source": 0,
											"value": "6FAF1C67F278B07C6771DCF4C315A89C21C0EAED11D9AB3D51774DA1CFEF545D"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41246,
											"end": 41258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 41246,
											"end": 41256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 41246,
											"end": 41258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41246,
											"end": 41258,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 41246,
											"end": 41258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41238,
											"end": 41258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41238,
											"end": 41242,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41238,
											"end": 41258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41238,
											"end": 41258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41238,
											"end": 41298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41238,
											"end": 41298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 41238,
											"end": 41298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41238,
											"end": 41298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41262,
											"end": 41298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 41279,
											"end": 41283,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41285,
											"end": 41297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 41285,
											"end": 41295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 41285,
											"end": 41297,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41262,
											"end": 41298,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 41262,
											"end": 41298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "PUSH data",
											"source": 0,
											"value": "394AC917F53B95EE25DB2A5DA5874C5B1F0AF95A4FDF34992FF8B19C458F239A"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41376,
											"end": 41392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41395,
											"end": 41407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 41395,
											"end": 41405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 41395,
											"end": 41407,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41395,
											"end": 41407,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 41395,
											"end": 41407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41376,
											"end": 41407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41376,
											"end": 41407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 41439,
											"end": 41447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41449,
											"end": 41453,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41455,
											"end": 41457,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41459,
											"end": 41480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 41477,
											"end": 41479,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 41459,
											"end": 41476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 41459,
											"end": 41480,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41459,
											"end": 41480,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 41459,
											"end": 41480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41482,
											"end": 41507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 41500,
											"end": 41506,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 41482,
											"end": 41499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 41482,
											"end": 41507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41482,
											"end": 41507,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 41482,
											"end": 41507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41509,
											"end": 41513,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 41418,
											"end": 41514,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41418,
											"end": 41514,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 41418,
											"end": 41514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 41571,
											"end": 41577,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "PUSH data",
											"source": 0,
											"value": "8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF"
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41556,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41534,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41525,
											"end": 41544,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41544,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41544,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41544,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41624,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41624,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41624,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 41654,
											"end": 41671,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41654,
											"end": 41671,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41654,
											"end": 41671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41654,
											"end": 41671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41654,
											"end": 41671,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41654,
											"end": 41671,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41654,
											"end": 41683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 41654,
											"end": 41683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41676,
											"end": 41682,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41654,
											"end": 41675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 41654,
											"end": 41683,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41654,
											"end": 41683,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 41654,
											"end": 41683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41643,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41683,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41683,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41683,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 41756,
											"end": 41824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 41787,
											"end": 41795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41797,
											"end": 41801,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41803,
											"end": 41805,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41809,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41811,
											"end": 41817,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41823,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41756,
											"end": 41786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 41756,
											"end": 41824,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14316,
											"end": 14420,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 14316,
											"end": 14420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14403,
											"end": 14413,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14316,
											"end": 14420,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 14316,
											"end": 14420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14316,
											"end": 14420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14316,
											"end": 14420,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33068,
											"end": 33255,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 33068,
											"end": 33255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33154,
											"end": 33161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33189,
											"end": 33201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33181,
											"end": 33187,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33181,
											"end": 33187,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33181,
											"end": 33187,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33181,
											"end": 33187,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33224,
											"end": 33229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33224,
											"end": 33229,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33224,
											"end": 33229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33068,
											"end": 33255,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32196,
											"end": 32372,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 32196,
											"end": 32372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 32261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32285,
											"end": 32290,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32285,
											"end": 32290,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32285,
											"end": 32290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32308,
											"end": 32314,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32308,
											"end": 32314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32308,
											"end": 32314,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32308,
											"end": 32314,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32364,
											"end": 32365,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32196,
											"end": 32372,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32196,
											"end": 32372,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 49596,
											"end": 50374,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 49596,
											"end": 50374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49840,
											"end": 49855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 49840,
											"end": 49842,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49840,
											"end": 49853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49840,
											"end": 49853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 49840,
											"end": 49855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49840,
											"end": 49855,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 49840,
											"end": 49855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49836,
											"end": 50368,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49836,
											"end": 50368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 49836,
											"end": 50368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49892,
											"end": 49894,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49875,
											"end": 49918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49918,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 49919,
											"end": 49927,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 49929,
											"end": 49933,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 49935,
											"end": 49938,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49940,
											"end": 49947,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49949,
											"end": 49953,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50234,
											"end": 50240,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50234,
											"end": 50240,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "PUSH data",
											"source": 0,
											"value": "AA752FB1526000E5241602AFFC3D70EF506DA48A27EA57140102B439E655ED"
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 50003,
											"end": 50067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50003,
											"end": 50067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50003,
											"end": 50067,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49999,
											"end": 50160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 49999,
											"end": 50160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "PUSH data",
											"source": 0,
											"value": "587CCCAD73A80A7F013DB13C596F4FEBC1968DC77E1D3589D5E7A509A3D6503"
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49999,
											"end": 50160,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 49999,
											"end": 50160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49955,
											"end": 50174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49596,
											"end": 50374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49596,
											"end": 50374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49596,
											"end": 50374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49596,
											"end": 50374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49596,
											"end": 50374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49596,
											"end": 50374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49596,
											"end": 50374,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 50380,
											"end": 50573,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 50380,
											"end": 50573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50513,
											"end": 50514,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50446,
											"end": 50462,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 50446,
											"end": 50462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50446,
											"end": 50462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50446,
											"end": 50462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50474,
											"end": 50515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50474,
											"end": 50515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50536,
											"end": 50543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50531,
											"end": 50532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50561,
											"end": 50566,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50380,
											"end": 50573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50380,
											"end": 50573,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 48849,
											"end": 49590,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 48849,
											"end": 49590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49068,
											"end": 49083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 49068,
											"end": 49070,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49068,
											"end": 49081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49068,
											"end": 49081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 49068,
											"end": 49083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49068,
											"end": 49083,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 49068,
											"end": 49083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49584,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 49064,
											"end": 49584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49120,
											"end": 49122,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49103,
											"end": 49141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49141,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 49142,
											"end": 49150,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 49152,
											"end": 49156,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 49158,
											"end": 49160,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49162,
											"end": 49168,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49170,
											"end": 49174,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49099,
											"end": 49574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 49099,
											"end": 49574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49099,
											"end": 49574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 49099,
											"end": 49574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 49099,
											"end": 49574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49099,
											"end": 49574,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 49099,
											"end": 49574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 49224,
											"end": 49283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49224,
											"end": 49283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49224,
											"end": 49283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49220,
											"end": 49376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 49220,
											"end": 49376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "PUSH data",
											"source": 0,
											"value": "587CCCAD73A80A7F013DB13C596F4FEBC1968DC77E1D3589D5E7A509A3D6503"
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8547,
											"end": 8960,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 8547,
											"end": 8960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8907,
											"end": 8927,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8953,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8953,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8547,
											"end": 8960,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 110,
											"end": 216,
											"name": "tag",
											"source": -1,
											"value": "197"
										},
										{
											"begin": 110,
											"end": 216,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 195,
											"end": 198,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": 191,
											"end": 206,
											"name": "SHR",
											"source": -1
										},
										{
											"begin": 191,
											"end": 206,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 163,
											"end": 216,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 224,
											"end": 963,
											"name": "tag",
											"source": -1,
											"value": "162"
										},
										{
											"begin": 224,
											"end": 963,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 224,
											"end": 963,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 301,
											"name": "PUSH",
											"source": -1,
											"value": "44"
										},
										{
											"begin": 279,
											"end": 295,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 276,
											"end": 302,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 273,
											"end": 275,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 273,
											"end": 275,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "200"
										},
										{
											"begin": 273,
											"end": 275,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 305,
											"end": 310,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "131"
										},
										{
											"begin": 305,
											"end": 310,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 273,
											"end": 275,
											"name": "tag",
											"source": -1,
											"value": "200"
										},
										{
											"begin": 273,
											"end": 275,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 339,
											"end": 340,
											"name": "PUSH",
											"source": -1,
											"value": "4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 318,
											"end": 341,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 414,
											"end": 424,
											"name": "PUSH",
											"source": -1,
											"value": "8C379A0"
										},
										{
											"begin": 357,
											"end": 391,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "201"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 382,
											"end": 390,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 357,
											"end": 391,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "197"
										},
										{
											"begin": 357,
											"end": 391,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 357,
											"end": 391,
											"name": "tag",
											"source": -1,
											"value": "201"
										},
										{
											"begin": 357,
											"end": 391,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 406,
											"end": 425,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 396,
											"end": 398,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "202"
										},
										{
											"begin": 396,
											"end": 398,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 429,
											"end": 434,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "131"
										},
										{
											"begin": 429,
											"end": 434,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 396,
											"end": 398,
											"name": "tag",
											"source": -1,
											"value": "202"
										},
										{
											"begin": 396,
											"end": 398,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 460,
											"end": 462,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 463,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 496,
											"end": 512,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 492,
											"end": 516,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 339,
											"end": 340,
											"name": "PUSH",
											"source": -1,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 463,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 468,
											"end": 517,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 543,
											"end": 547,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 537,
											"end": 548,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 624,
											"end": 640,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 624,
											"end": 640,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 617,
											"end": 621,
											"name": "PUSH",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 605,
											"end": 622,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 602,
											"end": 641,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 576,
											"end": 594,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 568,
											"end": 574,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 565,
											"end": 595,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 556,
											"end": 647,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "203"
										},
										{
											"begin": 553,
											"end": 555,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "131"
										},
										{
											"begin": 655,
											"end": 660,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "tag",
											"source": -1,
											"value": "203"
										},
										{
											"begin": 553,
											"end": 555,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 693,
											"end": 699,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 687,
											"end": 691,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 683,
											"end": 700,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 672,
											"end": 700,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 672,
											"end": 700,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 725,
											"end": 728,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 705,
											"end": 729,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 705,
											"end": 729,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 576,
											"end": 594,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 740,
											"end": 746,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 737,
											"end": 767,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 734,
											"end": 736,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 734,
											"end": 736,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "204"
										},
										{
											"begin": 734,
											"end": 736,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 770,
											"end": 775,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 770,
											"end": 775,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 770,
											"end": 775,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 770,
											"end": 775,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 770,
											"end": 775,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "131"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 734,
											"end": 736,
											"name": "tag",
											"source": -1,
											"value": "204"
										},
										{
											"begin": 734,
											"end": 736,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 734,
											"end": 736,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 863,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 841,
											"end": 845,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 837,
											"end": 864,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 807,
											"end": 811,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 814,
											"end": 820,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 802,
											"end": 805,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 794,
											"end": 821,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 794,
											"end": 821,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 829,
											"end": 865,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 826,
											"end": 828,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 826,
											"end": 828,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "205"
										},
										{
											"begin": 826,
											"end": 828,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 868,
											"end": 873,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 868,
											"end": 873,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 868,
											"end": 873,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 868,
											"end": 873,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "131"
										},
										{
											"begin": 868,
											"end": 873,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 826,
											"end": 828,
											"name": "tag",
											"source": -1,
											"value": "205"
										},
										{
											"begin": 826,
											"end": 828,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 89,
											"end": 96,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 73,
											"end": 87,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 69,
											"end": 97,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 892,
											"end": 942,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 892,
											"end": 942,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 807,
											"end": 811,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 892,
											"end": 942,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 460,
											"end": 462,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 943,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 900,
											"end": 903,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 267,
											"end": 963,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 267,
											"end": 963,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									],
									".data": {
										"1F4DE6A436172E7F7B1540476031CB037FC18EDE9CC346A56DA1697CBD352AA9": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
										"1FBBB69D10332726591DC7EE4A23A94661EDA2BEC5CE6BF93A68249147DC8D9C": "455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
										"394AC917F53B95EE25DB2A5DA5874C5B1F0AF95A4FDF34992FF8B19C458F239A": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
										"587CCCAD73A80A7F013DB13C596F4FEBC1968DC77E1D3589D5E7A509A3D6503": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
										"6FAF1C67F278B07C6771DCF4C315A89C21C0EAED11D9AB3D51774DA1CFEF545D": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
										"70A41C66829F5508884CDA9EF3D2F72551B34F23E4035BE97941681123D2D686": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
										"8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
										"AA752FB1526000E5241602AFFC3D70EF506DA48A27EA57140102B439E655ED": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
										"DF9806C6DC743DE602E49918A67B580590D69AB768BDB59F977C0A884A91A7C2": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
										"E155F5D69798C6205436A388A4F3A5FD42F54147B40F4D63A2C8071FF8A9FEE5": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
										"E909E0C9A8F96B4F9AF03B716811ECE20BEB070BE416893ED1D50619B5930807": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368"
									}
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC11551.sol\":\"ERC1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC11551.sol\":{\"keccak256\":\"0xc92790b714bf01a7235b64c6055889a46a48b670a9bc6437d6ebbdc1d8f828f3\",\"urls\":[\"bzz-raw://45971d53dc91f51b229e3432b060d79b4a1f9b5dd1a04ce24b432b54453e5c3d\",\"dweb:/ipfs/QmPgG5L6JumoAcDV8D5CcVjtzUZvDFZoaER7J7V9aTbrvc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1084,
								"contract": "contracts/ERC11551.sol:ERC1155",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							},
							{
								"astId": 1344,
								"contract": "contracts/ERC11551.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1350,
								"contract": "contracts/ERC11551.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1352,
								"contract": "contracts/ERC11551.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1155Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC11551.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC11551.sol\":{\"keccak256\":\"0xc92790b714bf01a7235b64c6055889a46a48b670a9bc6437d6ebbdc1d8f828f3\",\"urls\":[\"bzz-raw://45971d53dc91f51b229e3432b060d79b4a1f9b5dd1a04ce24b432b54453e5c3d\",\"dweb:/ipfs/QmPgG5L6JumoAcDV8D5CcVjtzUZvDFZoaER7J7V9aTbrvc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1084,
								"contract": "contracts/ERC11551.sol:ERC1155Burnable",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							},
							{
								"astId": 1344,
								"contract": "contracts/ERC11551.sol:ERC1155Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1350,
								"contract": "contracts/ERC11551.sol:ERC1155Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1352,
								"contract": "contracts/ERC11551.sol:ERC1155Burnable",
								"label": "_uri",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1155Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1155 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"paused()": "5c975abb",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1155 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC11551.sol\":\"ERC1155Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC11551.sol\":{\"keccak256\":\"0xc92790b714bf01a7235b64c6055889a46a48b670a9bc6437d6ebbdc1d8f828f3\",\"urls\":[\"bzz-raw://45971d53dc91f51b229e3432b060d79b4a1f9b5dd1a04ce24b432b54453e5c3d\",\"dweb:/ipfs/QmPgG5L6JumoAcDV8D5CcVjtzUZvDFZoaER7J7V9aTbrvc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1084,
								"contract": "contracts/ERC11551.sol:ERC1155Pausable",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							},
							{
								"astId": 1344,
								"contract": "contracts/ERC11551.sol:ERC1155Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1350,
								"contract": "contracts/ERC11551.sol:ERC1155Pausable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1352,
								"contract": "contracts/ERC11551.sol:ERC1155Pausable",
								"label": "_uri",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 2418,
								"contract": "contracts/ERC11551.sol:ERC1155Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "4",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1155PresetMinterPauser": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mintBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "{ERC1155} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE`, and `PAUSER_ROLE` to the account that deploys the contract."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"mint(address,uint256,uint256,bytes)": {
								"details": "Creates `amount` new tokens for `to`, of token type `id`. See {ERC1155-_mint}. Requirements: - the caller must have the `MINTER_ROLE`."
							},
							"mintBatch(address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] variant of {mint}."
							},
							"pause()": {
								"details": "Pauses all token transfers. See {ERC1155Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
							},
							"unpause()": {
								"details": "Unpauses all token transfers. See {ERC1155Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC11551.sol\":55315:57848  contract ERC1155PresetMinterPauser is Context, AccessControl, ERC1155Burnable, ERC1155Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC11551.sol\":55692:55899  constructor(string memory uri) public ERC1155(uri) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  pop\n    /* \"contracts/ERC11551.sol\":55738:55741  uri */\n  dup3\n  swap2\n  pop\n    /* \"contracts/ERC11551.sol\":30372:30412  _registerInterface(_INTERFACE_ID_ERC165) */\n  tag_15\n  swap1\n  pop\n  shl(0xe0, 0x01ffc9a7)\n    /* \"contracts/ERC11551.sol\":30372:30390  _registerInterface */\n  tag_16\n    /* \"contracts/ERC11551.sol\":30372:30412  _registerInterface(_INTERFACE_ID_ERC165) */\n  jump\t// in\ntag_15:\n    /* \"contracts/ERC11551.sol\":38335:38347  _setURI(uri) */\n  tag_18\n    /* \"contracts/ERC11551.sol\":38343:38346  uri */\n  dup2\n    /* \"contracts/ERC11551.sol\":38335:38342  _setURI */\n  tag_19\n    /* \"contracts/ERC11551.sol\":38335:38347  _setURI(uri) */\n  jump\t// in\ntag_18:\n    /* \"contracts/ERC11551.sol\":38436:38477  _registerInterface(_INTERFACE_ID_ERC1155) */\n  tag_20\n  shl(0xe1, 0x6cdb3d13)\n    /* \"contracts/ERC11551.sol\":38436:38454  _registerInterface */\n  tag_16\n    /* \"contracts/ERC11551.sol\":38436:38477  _registerInterface(_INTERFACE_ID_ERC1155) */\n  jump\t// in\ntag_20:\n    /* \"contracts/ERC11551.sol\":38577:38631  _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI) */\n  tag_21\n  shl(0xe2, 0x03a24d07)\n    /* \"contracts/ERC11551.sol\":38577:38595  _registerInterface */\n  tag_16\n    /* \"contracts/ERC11551.sol\":38577:38631  _registerInterface(_INTERFACE_ID_ERC1155_METADATA_URI) */\n  jump\t// in\ntag_21:\n  pop\n    /* \"contracts/ERC11551.sol\":52412:52419  _paused */\n  0x05\n    /* \"contracts/ERC11551.sol\":52412:52427  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"contracts/ERC11551.sol\":55753:55797  _setupRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  tag_24\n    /* \"contracts/ERC11551.sol\":52422:52427  false */\n  0x00\n    /* \"contracts/ERC11551.sol\":55784:55796  _msgSender() */\n  tag_25\n    /* \"contracts/ERC11551.sol\":55784:55794  _msgSender */\n  tag_26\n    /* \"contracts/ERC11551.sol\":55784:55796  _msgSender() */\n  jump\t// in\ntag_25:\n    /* \"contracts/ERC11551.sol\":55753:55763  _setupRole */\n  tag_27\n    /* \"contracts/ERC11551.sol\":55753:55797  _setupRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  jump\t// in\ntag_24:\n    /* \"contracts/ERC11551.sol\":55808:55845  _setupRole(MINTER_ROLE, _msgSender()) */\n  tag_28\n    /* \"contracts/ERC11551.sol\":55454:55478  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"contracts/ERC11551.sol\":55832:55844  _msgSender() */\n  tag_25\n    /* \"contracts/ERC11551.sol\":55832:55842  _msgSender */\n  tag_26\n    /* \"contracts/ERC11551.sol\":55832:55844  _msgSender() */\n  jump\t// in\n    /* \"contracts/ERC11551.sol\":55808:55845  _setupRole(MINTER_ROLE, _msgSender()) */\ntag_28:\n    /* \"contracts/ERC11551.sol\":55855:55892  _setupRole(PAUSER_ROLE, _msgSender()) */\n  tag_30\n    /* \"contracts/ERC11551.sol\":55522:55546  keccak256(\"PAUSER_ROLE\") */\n  0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n    /* \"contracts/ERC11551.sol\":55879:55891  _msgSender() */\n  tag_25\n    /* \"contracts/ERC11551.sol\":55879:55889  _msgSender */\n  tag_26\n    /* \"contracts/ERC11551.sol\":55879:55891  _msgSender() */\n  jump\t// in\n    /* \"contracts/ERC11551.sol\":55855:55892  _setupRole(PAUSER_ROLE, _msgSender()) */\ntag_30:\n    /* \"contracts/ERC11551.sol\":55692:55899  constructor(string memory uri) public ERC1155(uri) {... */\n  pop\n    /* \"contracts/ERC11551.sol\":55315:57848  contract ERC1155PresetMinterPauser is Context, AccessControl, ERC1155Burnable, ERC1155Pausable {... */\n  jump(tag_32)\n    /* \"contracts/ERC11551.sol\":31103:31301  function _registerInterface(bytes4 interfaceId) internal virtual {... */\ntag_16:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"contracts/ERC11551.sol\":31186:31211  interfaceId != 0xffffffff */\n  dup1\n  dup3\n  and\n  eq\n  iszero\n    /* \"contracts/ERC11551.sol\":31178:31244  require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\") */\n  tag_34\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1c\n  0x24\n  dup3\n  add\n  mstore\n  0x4552433136353a20696e76616c696420696e7465726661636520696400000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_34:\n  not(sub(shl(0xe0, 0x01), 0x01))\n    /* \"contracts/ERC11551.sol\":31254:31287  _supportedInterfaces[interfaceId] */\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"contracts/ERC11551.sol\":31290:31294  true */\n  0x01\n    /* \"contracts/ERC11551.sol\":31254:31287  _supportedInterfaces[interfaceId] */\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"contracts/ERC11551.sol\":31254:31294  _supportedInterfaces[interfaceId] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/ERC11551.sol\":31103:31301  function _registerInterface(bytes4 interfaceId) internal virtual {... */\n  jump\t// out\n    /* \"contracts/ERC11551.sol\":43910:43996  function _setURI(string memory newuri) internal virtual {... */\ntag_19:\n    /* \"contracts/ERC11551.sol\":43976:43989  _uri = newuri */\n  dup1\n  mload\n  tag_36\n  swap1\n    /* \"contracts/ERC11551.sol\":43976:43980  _uri */\n  0x04\n  swap1\n    /* \"contracts/ERC11551.sol\":43976:43989  _uri = newuri */\n  0x20\n  dup5\n  add\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  pop\n    /* \"contracts/ERC11551.sol\":43910:43996  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/ERC11551.sol\":14316:14420  function _msgSender() internal view virtual returns (address payable) {... */\ntag_26:\n    /* \"contracts/ERC11551.sol\":14403:14413  msg.sender */\n  caller\n    /* \"contracts/ERC11551.sol\":14316:14420  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/ERC11551.sol\":21167:21277  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_27:\n    /* \"contracts/ERC11551.sol\":21245:21270  _grantRole(role, account) */\n  tag_36\n    /* \"contracts/ERC11551.sol\":21256:21260  role */\n  dup3\n    /* \"contracts/ERC11551.sol\":21262:21269  account */\n  dup3\n    /* \"contracts/ERC11551.sol\":21677:21683  _roles */\n  0x00\n    /* \"contracts/ERC11551.sol\":21677:21689  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"contracts/ERC11551.sol\":21677:21710  _roles[role].members.add(account) */\n  tag_43\n  swap2\n    /* \"contracts/ERC11551.sol\":21702:21709  account */\n  dup4\n  swap1\n    /* \"contracts/ERC11551.sol\":21677:21701  _roles[role].members.add */\n  tag_0_144\n  tag_44\n  dup3\n  shl\n  or\n    /* \"contracts/ERC11551.sol\":21677:21710  _roles[role].members.add(account) */\n  swap1\n  shr\n  jump\t// in\ntag_43:\n    /* \"contracts/ERC11551.sol\":21673:21782  if (_roles[role].members.add(account)) {... */\n  iszero\n  tag_36\n  jumpi\n    /* \"contracts/ERC11551.sol\":21758:21770  _msgSender() */\n  tag_46\n    /* \"contracts/ERC11551.sol\":21758:21768  _msgSender */\n  tag_26\n    /* \"contracts/ERC11551.sol\":21758:21770  _msgSender() */\n  jump\t// in\ntag_46:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/ERC11551.sol\":21731:21771  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"contracts/ERC11551.sol\":21749:21756  account */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/ERC11551.sol\":21731:21771  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"contracts/ERC11551.sol\":21743:21747  role */\n  dup4\n    /* \"contracts/ERC11551.sol\":21731:21771  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"contracts/ERC11551.sol\":21604:21788  function _grantRole(bytes32 role, address account) private {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ERC11551.sol\":4888:5029  function add(AddressSet storage set, address value) internal returns (bool) {... */\ntag_44:\n    /* \"contracts/ERC11551.sol\":4958:4962  bool */\n  0x00\n    /* \"contracts/ERC11551.sol\":4981:5022  _add(set._inner, bytes32(uint256(value))) */\n  tag_48\n    /* \"contracts/ERC11551.sol\":4986:4989  set */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/ERC11551.sol\":5006:5020  uint256(value) */\n  dup5\n  and\n    /* \"contracts/ERC11551.sol\":4981:4985  _add */\n  tag_49\n    /* \"contracts/ERC11551.sol\":4981:5022  _add(set._inner, bytes32(uint256(value))) */\n  jump\t// in\ntag_48:\n    /* \"contracts/ERC11551.sol\":4974:5022  return _add(set._inner, bytes32(uint256(value))) */\n  swap1\n  pop\n    /* \"contracts/ERC11551.sol\":4888:5029  function add(AddressSet storage set, address value) internal returns (bool) {... */\ntag_47:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ERC11551.sol\":1635:2039  function _add(Set storage set, bytes32 value) private returns (bool) {... */\ntag_49:\n    /* \"contracts/ERC11551.sol\":1698:1702  bool */\n  0x00\n    /* \"contracts/ERC11551.sol\":1719:1740  _contains(set, value) */\n  tag_51\n    /* \"contracts/ERC11551.sol\":1729:1732  set */\n  dup4\n    /* \"contracts/ERC11551.sol\":1734:1739  value */\n  dup4\n    /* \"contracts/ERC11551.sol\":1719:1728  _contains */\n  tag_52\n    /* \"contracts/ERC11551.sol\":1719:1740  _contains(set, value) */\n  jump\t// in\ntag_51:\n    /* \"contracts/ERC11551.sol\":1714:2033  if (!_contains(set, value)) {... */\n  tag_53\n  jumpi\n  pop\n    /* \"contracts/ERC11551.sol\":1756:1779  set._values.push(value) */\n  dup2\n  sload\n  0x01\n  dup2\n  dup2\n  add\n  dup5\n  sstore\n    /* \"contracts/ERC11551.sol\":1756:1767  set._values */\n  0x00\n    /* \"contracts/ERC11551.sol\":1756:1779  set._values.push(value) */\n  dup5\n  dup2\n  mstore\n  0x20\n  dup1\n  dup3\n  keccak256\n  swap1\n  swap4\n  add\n  dup5\n  swap1\n  sstore\n    /* \"contracts/ERC11551.sol\":1936:1954  set._values.length */\n  dup5\n  sload\n    /* \"contracts/ERC11551.sol\":1914:1933  set._indexes[value] */\n  dup5\n  dup3\n  mstore\n    /* \"contracts/ERC11551.sol\":1914:1926  set._indexes */\n  dup3\n  dup7\n  add\n    /* \"contracts/ERC11551.sol\":1914:1933  set._indexes[value] */\n  swap1\n  swap4\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"contracts/ERC11551.sol\":1914:1954  set._indexes[value] = set._values.length */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"contracts/ERC11551.sol\":1968:1979  return true */\n  jump(tag_47)\n    /* \"contracts/ERC11551.sol\":1714:2033  if (!_contains(set, value)) {... */\ntag_53:\n  pop\n    /* \"contracts/ERC11551.sol\":2017:2022  false */\n  0x00\n    /* \"contracts/ERC11551.sol\":2010:2022  return false */\n  jump(tag_47)\n    /* \"contracts/ERC11551.sol\":3800:3927  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\ntag_52:\n    /* \"contracts/ERC11551.sol\":3873:3877  bool */\n  0x00\n    /* \"contracts/ERC11551.sol\":3896:3915  set._indexes[value] */\n  swap1\n  dup2\n  mstore\n    /* \"contracts/ERC11551.sol\":3896:3908  set._indexes */\n  0x01\n  swap2\n  swap1\n  swap2\n  add\n    /* \"contracts/ERC11551.sol\":3896:3915  set._indexes[value] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"contracts/ERC11551.sol\":3896:3920  set._indexes[value] != 0 */\n  iszero\n  iszero\n  swap1\n    /* \"contracts/ERC11551.sol\":3800:3927  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n  jump\t// out\n    /* \"contracts/ERC11551.sol\":55315:57848  contract ERC1155PresetMinterPauser is Context, AccessControl, ERC1155Burnable, ERC1155Pausable {... */\ntag_37:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_58\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_60)\ntag_58:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_60\n  jumpi\n  swap2\n  dup3\n  add\ntag_59:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_60\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_59)\ntag_60:\n  pop\n  tag_61\n  swap3\n  swap2\n  pop\n  tag_62\n  jump\t// in\ntag_61:\n  pop\n  swap1\n  jump\t// out\ntag_62:\ntag_63:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_61\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_63)\ntag_32:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC11551.sol\":55315:57848  contract ERC1155PresetMinterPauser is Context, AccessControl, ERC1155Burnable, ERC1155Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x731133e9\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xca15c873\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xe63ab1e9\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf5298aca\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xca15c873\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x731133e9\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9010d07c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6b20c454\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1f7fdffa\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC11551.sol\":39276:39496  function balanceOf(address account, uint256 id) public view override returns (uint256) {... */\n    tag_3:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_34\n      jump\t// in\n    tag_32:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/ERC11551.sol\":30569:30709  function supportsInterface(bytes4 interfaceId) public view override returns (bool) {... */\n    tag_4:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      tag_37\n      jump\t// in\n    tag_35:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/ERC11551.sol\":39037:39134  function uri(uint256) external view override returns (string memory) {... */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      calldataload\n      tag_40\n      jump\t// in\n    tag_38:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_41:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_43\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_41)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_44\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_44:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC11551.sol\":56458:56736  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) public virtual {... */\n    tag_6:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      and\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x40\n      dup2\n      add\n      0x20\n      dup3\n      add\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_56\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/ERC11551.sol\":18861:18973  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n    tag_7:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      calldataload\n      tag_59\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":41903:43087  function safeBatchTransferFrom(... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xa0\n      dup2\n      lt\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      dup2\n      and\n      swap3\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap2\n      dup2\n      add\n      swap1\n      0x60\n      dup2\n      add\n      0x40\n      dup3\n      add\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_71\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":19223:19446  function grantRole(bytes32 role, address account) public virtual {... */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_74\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":20397:20602  function renounceRole(bytes32 role, address account) public virtual {... */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_77\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":57321:57498  function unpause() public virtual {... */\n    tag_11:\n      tag_45\n      tag_79\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":39653:40268  function balanceOfBatch(... */\n    tag_12:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_88\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n    tag_80:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      dup2\n      add\n      swap2\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_89:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_89)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC11551.sol\":52529:52605  function paused() public view returns (bool) {... */\n    tag_13:\n      tag_35\n      tag_93\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":51184:51496  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n    tag_14:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      and\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x40\n      dup2\n      add\n      0x20\n      dup3\n      add\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      swap5\n      swap4\n      0x20\n      dup2\n      add\n      swap4\n      pop\n      calldataload\n      swap2\n      pop\n      pop\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_102\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":56110:56356  function mint(address to, uint256 id, uint256 amount, bytes memory data) public virtual {... */\n    tag_15:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap2\n      0x40\n      dup3\n      add\n      calldataload\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x80\n      dup2\n      add\n      0x60\n      dup3\n      add\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_108\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":56941:57112  function pause() public virtual {... */\n    tag_16:\n      tag_45\n      tag_110\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":18544:18680  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n    tag_17:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      tag_113\n      jump\t// in\n    tag_111:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/ERC11551.sol\":17529:17666  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n    tag_18:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_116\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":16306:16355  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_19:\n      tag_32\n      tag_118\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":40336:40642  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_20:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      iszero\n      iszero\n      tag_121\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":17834:17959  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n    tag_21:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      calldataload\n      tag_124\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":55416:55478  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_22:\n      tag_32\n      tag_126\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":19680:19906  function revokeRole(bytes32 role, address account) public virtual {... */\n    tag_23:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_129\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":55484:55546  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_24:\n      tag_32\n      tag_131\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":40709:40867  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n    tag_25:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_134\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":40934:41831  function safeTransferFrom(... */\n    tag_26:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xa0\n      dup2\n      lt\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      calldataload\n      dup2\n      and\n      swap3\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap2\n      0x40\n      dup3\n      add\n      calldataload\n      swap2\n      0x60\n      dup2\n      add\n      calldataload\n      swap2\n      dup2\n      add\n      swap1\n      0xa0\n      dup2\n      add\n      0x80\n      dup3\n      add\n      calldataload\n      shl(0x20, 0x01)\n      dup2\n      gt\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      shl(0x20, 0x01)\n      dup4\n      gt\n      or\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      tag_140\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":50898:51178  function burn(address account, uint256 id, uint256 value) public virtual {... */\n    tag_27:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      add\n      calldataload\n      tag_143\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":39276:39496  function balanceOf(address account, uint256 id) public view override returns (uint256) {... */\n    tag_34:\n        /* \"contracts/ERC11551.sol\":39354:39361  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":39381:39402  account != address(0) */\n      dup4\n      and\n        /* \"contracts/ERC11551.sol\":39373:39450  require(account != address(0), \"ERC1155: balance query for the zero address\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9\n      0x2b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n      pop\n        /* \"contracts/ERC11551.sol\":39467:39480  _balances[id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":39467:39476  _balances */\n      0x02\n        /* \"contracts/ERC11551.sol\":39467:39480  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":39467:39489  _balances[id][account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC11551.sol\":39276:39496  function balanceOf(address account, uint256 id) public view override returns (uint256) {... */\n    tag_145:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":30569:30709  function supportsInterface(bytes4 interfaceId) public view override returns (bool) {... */\n    tag_37:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC11551.sol\":30669:30702  _supportedInterfaces[interfaceId] */\n      and\n        /* \"contracts/ERC11551.sol\":30646:30650  bool */\n      0x00\n        /* \"contracts/ERC11551.sol\":30669:30702  _supportedInterfaces[interfaceId] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":30669:30689  _supportedInterfaces */\n      0x01\n        /* \"contracts/ERC11551.sol\":30669:30702  _supportedInterfaces[interfaceId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/ERC11551.sol\":30569:30709  function supportsInterface(bytes4 interfaceId) public view override returns (bool) {... */\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":39037:39134  function uri(uint256) external view override returns (string memory) {... */\n    tag_40:\n        /* \"contracts/ERC11551.sol\":39123:39127  _uri */\n      0x04\n        /* \"contracts/ERC11551.sol\":39116:39127  return _uri */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":39091:39104  string memory */\n      0x60\n      swap4\n        /* \"contracts/ERC11551.sol\":39116:39127  return _uri */\n      swap1\n      swap3\n        /* \"contracts/ERC11551.sol\":39123:39127  _uri */\n      swap1\n      swap2\n        /* \"contracts/ERC11551.sol\":39116:39127  return _uri */\n      dup4\n      add\n        /* \"contracts/ERC11551.sol\":39123:39127  _uri */\n      dup3\n        /* \"contracts/ERC11551.sol\":39116:39127  return _uri */\n      dup3\n      dup1\n      iszero\n      tag_149\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_150\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_149)\n    tag_150:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_151:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_151\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC11551.sol\":39037:39134  function uri(uint256) external view override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":56458:56736  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) public virtual {... */\n    tag_56:\n        /* \"contracts/ERC11551.sol\":56589:56623  hasRole(MINTER_ROLE, _msgSender()) */\n      tag_153\n        /* \"contracts/ERC11551.sol\":55454:55478  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/ERC11551.sol\":56610:56622  _msgSender() */\n      tag_154\n        /* \"contracts/ERC11551.sol\":56610:56620  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":56610:56622  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/ERC11551.sol\":56589:56596  hasRole */\n      tag_116\n        /* \"contracts/ERC11551.sol\":56589:56623  hasRole(MINTER_ROLE, _msgSender()) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/ERC11551.sol\":56581:56684  require(hasRole(MINTER_ROLE, _msgSender()), \"ERC1155PresetMinterPauser: must have minter role to mint\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x38\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_8955910be8371dda281e80fa38d092164791ccbd984aaa07b76276bef2682e9c\n      0x38\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"contracts/ERC11551.sol\":56695:56729  _mintBatch(to, ids, amounts, data) */\n      tag_157\n        /* \"contracts/ERC11551.sol\":56706:56708  to */\n      dup5\n        /* \"contracts/ERC11551.sol\":56710:56713  ids */\n      dup5\n        /* \"contracts/ERC11551.sol\":56715:56722  amounts */\n      dup5\n        /* \"contracts/ERC11551.sol\":56724:56728  data */\n      dup5\n        /* \"contracts/ERC11551.sol\":56695:56705  _mintBatch */\n      tag_158\n        /* \"contracts/ERC11551.sol\":56695:56729  _mintBatch(to, ids, amounts, data) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/ERC11551.sol\":56458:56736  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":18861:18973  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n    tag_59:\n        /* \"contracts/ERC11551.sol\":18918:18925  bytes32 */\n      0x00\n        /* \"contracts/ERC11551.sol\":18944:18956  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC11551.sol\":18944:18966  _roles[role].adminRole */\n      0x02\n      add\n      sload\n      swap1\n        /* \"contracts/ERC11551.sol\":18861:18973  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":41903:43087  function safeBatchTransferFrom(... */\n    tag_71:\n        /* \"contracts/ERC11551.sol\":42157:42164  amounts */\n      dup2\n        /* \"contracts/ERC11551.sol\":42157:42171  amounts.length */\n      mload\n        /* \"contracts/ERC11551.sol\":42143:42146  ids */\n      dup4\n        /* \"contracts/ERC11551.sol\":42143:42153  ids.length */\n      mload\n        /* \"contracts/ERC11551.sol\":42143:42171  ids.length == amounts.length */\n      eq\n        /* \"contracts/ERC11551.sol\":42135:42216  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":42234:42250  to != address(0) */\n      dup5\n      and\n        /* \"contracts/ERC11551.sol\":42226:42292  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"contracts/ERC11551.sol\":42331:42343  _msgSender() */\n      tag_163\n        /* \"contracts/ERC11551.sol\":42331:42341  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":42331:42343  _msgSender() */\n      jump\t// in\n    tag_163:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":42323:42343  from == _msgSender() */\n      and\n        /* \"contracts/ERC11551.sol\":42323:42327  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":42323:42343  from == _msgSender() */\n      and\n      eq\n        /* \"contracts/ERC11551.sol\":42323:42383  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_165\n      jumpi\n      pop\n        /* \"contracts/ERC11551.sol\":42347:42383  isApprovedForAll(from, _msgSender()) */\n      tag_165\n        /* \"contracts/ERC11551.sol\":42364:42368  from */\n      dup6\n        /* \"contracts/ERC11551.sol\":42370:42382  _msgSender() */\n      tag_166\n        /* \"contracts/ERC11551.sol\":42370:42380  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":42370:42382  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"contracts/ERC11551.sol\":42347:42363  isApprovedForAll */\n      tag_134\n        /* \"contracts/ERC11551.sol\":42347:42383  isApprovedForAll(from, _msgSender()) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/ERC11551.sol\":42302:42459  require(... */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x32\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686\n      0x32\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/ERC11551.sol\":42470:42486  address operator */\n      0x00\n        /* \"contracts/ERC11551.sol\":42489:42501  _msgSender() */\n      tag_168\n        /* \"contracts/ERC11551.sol\":42489:42499  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":42489:42501  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/ERC11551.sol\":42470:42501  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC11551.sol\":42512:42572  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_169\n        /* \"contracts/ERC11551.sol\":42533:42541  operator */\n      dup2\n        /* \"contracts/ERC11551.sol\":42543:42547  from */\n      dup8\n        /* \"contracts/ERC11551.sol\":42549:42551  to */\n      dup8\n        /* \"contracts/ERC11551.sol\":42553:42556  ids */\n      dup8\n        /* \"contracts/ERC11551.sol\":42558:42565  amounts */\n      dup8\n        /* \"contracts/ERC11551.sol\":42567:42571  data */\n      dup8\n        /* \"contracts/ERC11551.sol\":42512:42532  _beforeTokenTransfer */\n      tag_170\n        /* \"contracts/ERC11551.sol\":42512:42572  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/ERC11551.sol\":42588:42597  uint256 i */\n      0x00\n        /* \"contracts/ERC11551.sol\":42583:42932  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_171:\n        /* \"contracts/ERC11551.sol\":42607:42610  ids */\n      dup5\n        /* \"contracts/ERC11551.sol\":42607:42617  ids.length */\n      mload\n        /* \"contracts/ERC11551.sol\":42603:42604  i */\n      dup2\n        /* \"contracts/ERC11551.sol\":42603:42617  i < ids.length */\n      lt\n        /* \"contracts/ERC11551.sol\":42583:42932  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"contracts/ERC11551.sol\":42638:42648  uint256 id */\n      0x00\n        /* \"contracts/ERC11551.sol\":42651:42654  ids */\n      dup6\n        /* \"contracts/ERC11551.sol\":42655:42656  i */\n      dup3\n        /* \"contracts/ERC11551.sol\":42651:42657  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_174\n      jumpi\n      invalid\n    tag_174:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC11551.sol\":42638:42657  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"contracts/ERC11551.sol\":42671:42685  uint256 amount */\n      0x00\n        /* \"contracts/ERC11551.sol\":42688:42695  amounts */\n      dup6\n        /* \"contracts/ERC11551.sol\":42696:42697  i */\n      dup4\n        /* \"contracts/ERC11551.sol\":42688:42698  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_175\n      jumpi\n      invalid\n    tag_175:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC11551.sol\":42671:42698  uint256 amount = amounts[i] */\n      swap1\n      pop\n        /* \"contracts/ERC11551.sol\":42735:42858  _balances[id][from].sub(... */\n      tag_176\n        /* \"contracts/ERC11551.sol\":42776:42782  amount */\n      dup2\n        /* \"contracts/ERC11551.sol\":42735:42858  _balances[id][from].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf\n      0x2a\n      swap2\n      codecopy\n        /* \"contracts/ERC11551.sol\":42735:42744  _balances */\n      0x02\n        /* \"contracts/ERC11551.sol\":42735:42748  _balances[id] */\n      0x00\n        /* \"contracts/ERC11551.sol\":42745:42747  id */\n      dup7\n        /* \"contracts/ERC11551.sol\":42735:42748  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC11551.sol\":42735:42754  _balances[id][from] */\n      0x00\n        /* \"contracts/ERC11551.sol\":42749:42753  from */\n      dup14\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":42735:42754  _balances[id][from] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC11551.sol\":42735:42758  _balances[id][from].sub */\n      tag_177\n      swap1\n        /* \"contracts/ERC11551.sol\":42735:42858  _balances[id][from].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_176:\n        /* \"contracts/ERC11551.sol\":42713:42726  _balances[id] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":42713:42722  _balances */\n      0x02\n        /* \"contracts/ERC11551.sol\":42713:42726  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":42713:42732  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC11551.sol\":42713:42858  _balances[id][from] = _balances[id][from].sub(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/ERC11551.sol\":42892:42909  _balances[id][to] */\n      dup11\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/ERC11551.sol\":42892:42921  _balances[id][to].add(amount) */\n      tag_178\n      swap1\n        /* \"contracts/ERC11551.sol\":42914:42920  amount */\n      dup3\n        /* \"contracts/ERC11551.sol\":42892:42913  _balances[id][to].add */\n      tag_179\n        /* \"contracts/ERC11551.sol\":42892:42921  _balances[id][to].add(amount) */\n      jump\t// in\n    tag_178:\n        /* \"contracts/ERC11551.sol\":42872:42885  _balances[id] */\n      0x00\n      swap3\n      dup4\n      mstore\n        /* \"contracts/ERC11551.sol\":42872:42881  _balances */\n      0x02\n        /* \"contracts/ERC11551.sol\":42872:42885  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":42872:42889  _balances[id][to] */\n      dup13\n      and\n      dup7\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      swap3\n      keccak256\n        /* \"contracts/ERC11551.sol\":42872:42921  _balances[id][to] = _balances[id][to].add(amount) */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/ERC11551.sol\":42619:42622  ++i */\n      0x01\n      add\n        /* \"contracts/ERC11551.sol\":42583:42932  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_171)\n    tag_172:\n      pop\n        /* \"contracts/ERC11551.sol\":42977:42979  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":42947:42994  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/ERC11551.sol\":42971:42975  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":42947:42994  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/ERC11551.sol\":42961:42969  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":42947:42994  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/ERC11551.sol\":42981:42984  ids */\n      dup8\n        /* \"contracts/ERC11551.sol\":42986:42993  amounts */\n      dup8\n        /* \"contracts/ERC11551.sol\":42947:42994  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup4\n      dup2\n      sub\n      dup4\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_180:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_182\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_180)\n    tag_182:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup4\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_183:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_185\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_183)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC11551.sol\":43005:43080  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_186\n        /* \"contracts/ERC11551.sol\":43041:43049  operator */\n      dup2\n        /* \"contracts/ERC11551.sol\":43051:43055  from */\n      dup8\n        /* \"contracts/ERC11551.sol\":43057:43059  to */\n      dup8\n        /* \"contracts/ERC11551.sol\":43061:43064  ids */\n      dup8\n        /* \"contracts/ERC11551.sol\":43066:43073  amounts */\n      dup8\n        /* \"contracts/ERC11551.sol\":43075:43079  data */\n      dup8\n        /* \"contracts/ERC11551.sol\":43005:43040  _doSafeBatchTransferAcceptanceCheck */\n      tag_187\n        /* \"contracts/ERC11551.sol\":43005:43080  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_186:\n        /* \"contracts/ERC11551.sol\":41903:43087  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":19223:19446  function grantRole(bytes32 role, address account) public virtual {... */\n    tag_74:\n        /* \"contracts/ERC11551.sol\":19314:19320  _roles */\n      0x00\n        /* \"contracts/ERC11551.sol\":19314:19326  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC11551.sol\":19314:19336  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"contracts/ERC11551.sol\":19306:19351  hasRole(_roles[role].adminRole, _msgSender()) */\n      tag_189\n      swap1\n        /* \"contracts/ERC11551.sol\":19338:19350  _msgSender() */\n      tag_154\n        /* \"contracts/ERC11551.sol\":19338:19348  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":19338:19350  _msgSender() */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":19306:19351  hasRole(_roles[role].adminRole, _msgSender()) */\n    tag_189:\n        /* \"contracts/ERC11551.sol\":19298:19403  require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to grant\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/ERC11551.sol\":19414:19439  _grantRole(role, account) */\n      tag_192\n        /* \"contracts/ERC11551.sol\":19425:19429  role */\n      dup3\n        /* \"contracts/ERC11551.sol\":19431:19438  account */\n      dup3\n        /* \"contracts/ERC11551.sol\":19414:19424  _grantRole */\n      tag_193\n        /* \"contracts/ERC11551.sol\":19414:19439  _grantRole(role, account) */\n      jump\t// in\n    tag_192:\n        /* \"contracts/ERC11551.sol\":19223:19446  function grantRole(bytes32 role, address account) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":20397:20602  function renounceRole(bytes32 role, address account) public virtual {... */\n    tag_77:\n        /* \"contracts/ERC11551.sol\":20494:20506  _msgSender() */\n      tag_195\n        /* \"contracts/ERC11551.sol\":20494:20504  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":20494:20506  _msgSender() */\n      jump\t// in\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":20483:20506  account == _msgSender() */\n      and\n        /* \"contracts/ERC11551.sol\":20483:20490  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":20483:20506  account == _msgSender() */\n      and\n      eq\n        /* \"contracts/ERC11551.sol\":20475:20558  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"contracts/ERC11551.sol\":20569:20595  _revokeRole(role, account) */\n      tag_192\n        /* \"contracts/ERC11551.sol\":20581:20585  role */\n      dup3\n        /* \"contracts/ERC11551.sol\":20587:20594  account */\n      dup3\n        /* \"contracts/ERC11551.sol\":20569:20580  _revokeRole */\n      tag_198\n        /* \"contracts/ERC11551.sol\":20569:20595  _revokeRole(role, account) */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":57321:57498  function unpause() public virtual {... */\n    tag_79:\n        /* \"contracts/ERC11551.sol\":57373:57407  hasRole(PAUSER_ROLE, _msgSender()) */\n      tag_200\n        /* \"contracts/ERC11551.sol\":55522:55546  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"contracts/ERC11551.sol\":57394:57406  _msgSender() */\n      tag_154\n        /* \"contracts/ERC11551.sol\":57394:57404  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":57394:57406  _msgSender() */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":57373:57407  hasRole(PAUSER_ROLE, _msgSender()) */\n    tag_200:\n        /* \"contracts/ERC11551.sol\":57365:57471  require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC1155PresetMinterPauser: must have pauser role to unpause\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_be510562063387b7714478be5eff01a8c39efbb1b76d9be224d34aac440c9e31\n      0x3b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"contracts/ERC11551.sol\":57481:57491  _unpause() */\n      tag_203\n        /* \"contracts/ERC11551.sol\":57481:57489  _unpause */\n      tag_204\n        /* \"contracts/ERC11551.sol\":57481:57491  _unpause() */\n      jump\t// in\n    tag_203:\n        /* \"contracts/ERC11551.sol\":57321:57498  function unpause() public virtual {... */\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":39653:40268  function balanceOfBatch(... */\n    tag_88:\n        /* \"contracts/ERC11551.sol\":39810:39826  uint256[] memory */\n      0x60\n        /* \"contracts/ERC11551.sol\":39869:39872  ids */\n      dup2\n        /* \"contracts/ERC11551.sol\":39869:39879  ids.length */\n      mload\n        /* \"contracts/ERC11551.sol\":39850:39858  accounts */\n      dup4\n        /* \"contracts/ERC11551.sol\":39850:39865  accounts.length */\n      mload\n        /* \"contracts/ERC11551.sol\":39850:39879  accounts.length == ids.length */\n      eq\n        /* \"contracts/ERC11551.sol\":39842:39925  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"contracts/ERC11551.sol\":39936:39966  uint256[] memory batchBalances */\n      0x60\n        /* \"contracts/ERC11551.sol\":39983:39991  accounts */\n      dup4\n        /* \"contracts/ERC11551.sol\":39983:39998  accounts.length */\n      mload\n        /* \"contracts/ERC11551.sol\":39969:39999  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_207\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_207:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_208\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_208:\n      pop\n        /* \"contracts/ERC11551.sol\":39936:39999  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"contracts/ERC11551.sol\":40015:40024  uint256 i */\n      0x00\n        /* \"contracts/ERC11551.sol\":40010:40231  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_209:\n        /* \"contracts/ERC11551.sol\":40034:40042  accounts */\n      dup5\n        /* \"contracts/ERC11551.sol\":40034:40049  accounts.length */\n      mload\n        /* \"contracts/ERC11551.sol\":40030:40031  i */\n      dup2\n        /* \"contracts/ERC11551.sol\":40030:40049  i < accounts.length */\n      lt\n        /* \"contracts/ERC11551.sol\":40010:40231  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_210\n      jumpi\n        /* \"contracts/ERC11551.sol\":40101:40102  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":40078:40103  accounts[i] != address(0) */\n      and\n        /* \"contracts/ERC11551.sol\":40078:40086  accounts */\n      dup6\n        /* \"contracts/ERC11551.sol\":40087:40088  i */\n      dup3\n        /* \"contracts/ERC11551.sol\":40078:40089  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_212\n      jumpi\n      invalid\n    tag_212:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":40078:40103  accounts[i] != address(0) */\n      and\n      eq\n      iszero\n        /* \"contracts/ERC11551.sol\":40070:40157  require(accounts[i] != address(0), \"ERC1155: batch balance query for the zero address\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x31\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c\n      0x31\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"contracts/ERC11551.sol\":40190:40199  _balances */\n      0x02\n        /* \"contracts/ERC11551.sol\":40190:40207  _balances[ids[i]] */\n      0x00\n        /* \"contracts/ERC11551.sol\":40200:40203  ids */\n      dup6\n        /* \"contracts/ERC11551.sol\":40204:40205  i */\n      dup4\n        /* \"contracts/ERC11551.sol\":40200:40206  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_214\n      jumpi\n      invalid\n    tag_214:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC11551.sol\":40190:40207  _balances[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC11551.sol\":40190:40220  _balances[ids[i]][accounts[i]] */\n      0x00\n        /* \"contracts/ERC11551.sol\":40208:40216  accounts */\n      dup7\n        /* \"contracts/ERC11551.sol\":40217:40218  i */\n      dup4\n        /* \"contracts/ERC11551.sol\":40208:40219  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_215\n      jumpi\n      invalid\n    tag_215:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":40190:40220  _balances[ids[i]][accounts[i]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC11551.sol\":40171:40184  batchBalances */\n      dup3\n        /* \"contracts/ERC11551.sol\":40185:40186  i */\n      dup3\n        /* \"contracts/ERC11551.sol\":40171:40187  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_216\n      jumpi\n      invalid\n    tag_216:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/ERC11551.sol\":40171:40220  batchBalances[i] = _balances[ids[i]][accounts[i]] */\n      mstore\n        /* \"contracts/ERC11551.sol\":40051:40054  ++i */\n      0x01\n      add\n        /* \"contracts/ERC11551.sol\":40010:40231  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_209)\n    tag_210:\n      pop\n        /* \"contracts/ERC11551.sol\":40248:40261  batchBalances */\n      swap4\n        /* \"contracts/ERC11551.sol\":39653:40268  function balanceOfBatch(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":52529:52605  function paused() public view returns (bool) {... */\n    tag_93:\n        /* \"contracts/ERC11551.sol\":52591:52598  _paused */\n      and(0xff, sload(0x05))\n        /* \"contracts/ERC11551.sol\":52529:52605  function paused() public view returns (bool) {... */\n    tag_217:\n      swap1\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":51184:51496  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n    tag_102:\n        /* \"contracts/ERC11551.sol\":51324:51336  _msgSender() */\n      tag_219\n        /* \"contracts/ERC11551.sol\":51324:51334  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":51324:51336  _msgSender() */\n      jump\t// in\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":51313:51336  account == _msgSender() */\n      and\n        /* \"contracts/ERC11551.sol\":51313:51320  account */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":51313:51336  account == _msgSender() */\n      and\n      eq\n        /* \"contracts/ERC11551.sol\":51313:51379  account == _msgSender() || isApprovedForAll(account, _msgSender()) */\n      dup1\n      tag_221\n      jumpi\n      pop\n        /* \"contracts/ERC11551.sol\":51340:51379  isApprovedForAll(account, _msgSender()) */\n      tag_221\n        /* \"contracts/ERC11551.sol\":51357:51364  account */\n      dup4\n        /* \"contracts/ERC11551.sol\":51366:51378  _msgSender() */\n      tag_166\n        /* \"contracts/ERC11551.sol\":51366:51376  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":51366:51378  _msgSender() */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":51340:51379  isApprovedForAll(account, _msgSender()) */\n    tag_221:\n        /* \"contracts/ERC11551.sol\":51292:51446  require(... */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n        /* \"contracts/ERC11551.sol\":51457:51489  _burnBatch(account, ids, values) */\n      tag_224\n        /* \"contracts/ERC11551.sol\":51468:51475  account */\n      dup4\n        /* \"contracts/ERC11551.sol\":51477:51480  ids */\n      dup4\n        /* \"contracts/ERC11551.sol\":51482:51488  values */\n      dup4\n        /* \"contracts/ERC11551.sol\":51457:51467  _burnBatch */\n      tag_225\n        /* \"contracts/ERC11551.sol\":51457:51489  _burnBatch(account, ids, values) */\n      jump\t// in\n    tag_224:\n        /* \"contracts/ERC11551.sol\":51184:51496  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":56110:56356  function mint(address to, uint256 id, uint256 amount, bytes memory data) public virtual {... */\n    tag_108:\n        /* \"contracts/ERC11551.sol\":56216:56250  hasRole(MINTER_ROLE, _msgSender()) */\n      tag_227\n        /* \"contracts/ERC11551.sol\":55454:55478  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/ERC11551.sol\":56237:56249  _msgSender() */\n      tag_154\n        /* \"contracts/ERC11551.sol\":56237:56247  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":56237:56249  _msgSender() */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":56216:56250  hasRole(MINTER_ROLE, _msgSender()) */\n    tag_227:\n        /* \"contracts/ERC11551.sol\":56208:56311  require(hasRole(MINTER_ROLE, _msgSender()), \"ERC1155PresetMinterPauser: must have minter role to mint\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x38\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_8955910be8371dda281e80fa38d092164791ccbd984aaa07b76276bef2682e9c\n      0x38\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_229:\n        /* \"contracts/ERC11551.sol\":56322:56349  _mint(to, id, amount, data) */\n      tag_157\n        /* \"contracts/ERC11551.sol\":56328:56330  to */\n      dup5\n        /* \"contracts/ERC11551.sol\":56332:56334  id */\n      dup5\n        /* \"contracts/ERC11551.sol\":56336:56342  amount */\n      dup5\n        /* \"contracts/ERC11551.sol\":56344:56348  data */\n      dup5\n        /* \"contracts/ERC11551.sol\":56322:56327  _mint */\n      tag_231\n        /* \"contracts/ERC11551.sol\":56322:56349  _mint(to, id, amount, data) */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":56941:57112  function pause() public virtual {... */\n    tag_110:\n        /* \"contracts/ERC11551.sol\":56991:57025  hasRole(PAUSER_ROLE, _msgSender()) */\n      tag_233\n        /* \"contracts/ERC11551.sol\":55522:55546  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"contracts/ERC11551.sol\":57012:57024  _msgSender() */\n      tag_154\n        /* \"contracts/ERC11551.sol\":57012:57022  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":57012:57024  _msgSender() */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":56991:57025  hasRole(PAUSER_ROLE, _msgSender()) */\n    tag_233:\n        /* \"contracts/ERC11551.sol\":56983:57087  require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC1155PresetMinterPauser: must have pauser role to pause\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x39\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_d5053a301adec69bf5c7c3782556a354b14090e41fa7ca93c4de3863fd6a98b9\n      0x39\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"contracts/ERC11551.sol\":57097:57105  _pause() */\n      tag_203\n        /* \"contracts/ERC11551.sol\":57097:57103  _pause */\n      tag_237\n        /* \"contracts/ERC11551.sol\":57097:57105  _pause() */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":18544:18680  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n    tag_113:\n        /* \"contracts/ERC11551.sol\":18617:18624  address */\n      0x00\n        /* \"contracts/ERC11551.sol\":18643:18655  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/ERC11551.sol\":18643:18673  _roles[role].members.at(index) */\n      tag_239\n      swap1\n        /* \"contracts/ERC11551.sol\":18667:18672  index */\n      dup4\n        /* \"contracts/ERC11551.sol\":18643:18666  _roles[role].members.at */\n      tag_240\n        /* \"contracts/ERC11551.sol\":18643:18673  _roles[role].members.at(index) */\n      jump\t// in\n    tag_239:\n        /* \"contracts/ERC11551.sol\":18636:18673  return _roles[role].members.at(index) */\n      swap4\n        /* \"contracts/ERC11551.sol\":18544:18680  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":17529:17666  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n    tag_116:\n        /* \"contracts/ERC11551.sol\":17598:17602  bool */\n      0x00\n        /* \"contracts/ERC11551.sol\":17621:17633  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/ERC11551.sol\":17621:17659  _roles[role].members.contains(account) */\n      tag_239\n      swap1\n        /* \"contracts/ERC11551.sol\":17651:17658  account */\n      dup4\n        /* \"contracts/ERC11551.sol\":17621:17650  _roles[role].members.contains */\n      tag_243\n        /* \"contracts/ERC11551.sol\":17621:17659  _roles[role].members.contains(account) */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":16306:16355  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_118:\n        /* \"contracts/ERC11551.sol\":16351:16355  0x00 */\n      0x00\n        /* \"contracts/ERC11551.sol\":16306:16355  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":40336:40642  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_121:\n        /* \"contracts/ERC11551.sol\":40454:40462  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":40438:40462  _msgSender() != operator */\n      and\n        /* \"contracts/ERC11551.sol\":40438:40450  _msgSender() */\n      tag_245\n        /* \"contracts/ERC11551.sol\":40438:40448  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":40438:40450  _msgSender() */\n      jump\t// in\n    tag_245:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":40438:40462  _msgSender() != operator */\n      and\n      eq\n      iszero\n        /* \"contracts/ERC11551.sol\":40430:40508  require(_msgSender() != operator, \"ERC1155: setting approval status for self\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_246:\n        /* \"contracts/ERC11551.sol\":40564:40572  approved */\n      dup1\n        /* \"contracts/ERC11551.sol\":40519:40537  _operatorApprovals */\n      0x03\n        /* \"contracts/ERC11551.sol\":40519:40551  _operatorApprovals[_msgSender()] */\n      0x00\n        /* \"contracts/ERC11551.sol\":40538:40550  _msgSender() */\n      tag_247\n        /* \"contracts/ERC11551.sol\":40538:40548  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":40538:40550  _msgSender() */\n      jump\t// in\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":40519:40551  _operatorApprovals[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/ERC11551.sol\":40519:40561  _operatorApprovals[_msgSender()][operator] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      swap4\n      mstore\n      swap2\n      keccak256\n        /* \"contracts/ERC11551.sol\":40519:40572  _operatorApprovals[_msgSender()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap3\n      iszero\n      iszero\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ERC11551.sol\":40602:40614  _msgSender() */\n      tag_248\n        /* \"contracts/ERC11551.sol\":40602:40612  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":40602:40614  _msgSender() */\n      jump\t// in\n    tag_248:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":40587:40635  ApprovalForAll(_msgSender(), operator, approved) */\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/ERC11551.sol\":40626:40634  approved */\n      dup4\n        /* \"contracts/ERC11551.sol\":40587:40635  ApprovalForAll(_msgSender(), operator, approved) */\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC11551.sol\":40336:40642  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":17834:17959  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n    tag_124:\n        /* \"contracts/ERC11551.sol\":17897:17904  uint256 */\n      0x00\n        /* \"contracts/ERC11551.sol\":17923:17935  _roles[role] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/ERC11551.sol\":17923:17952  _roles[role].members.length() */\n      tag_145\n      swap1\n        /* \"contracts/ERC11551.sol\":17923:17950  _roles[role].members.length */\n      tag_251\n        /* \"contracts/ERC11551.sol\":17923:17952  _roles[role].members.length() */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":55416:55478  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_126:\n        /* \"contracts/ERC11551.sol\":55454:55478  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/ERC11551.sol\":55416:55478  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":19680:19906  function revokeRole(bytes32 role, address account) public virtual {... */\n    tag_129:\n        /* \"contracts/ERC11551.sol\":19772:19778  _roles */\n      0x00\n        /* \"contracts/ERC11551.sol\":19772:19784  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC11551.sol\":19772:19794  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"contracts/ERC11551.sol\":19764:19809  hasRole(_roles[role].adminRole, _msgSender()) */\n      tag_253\n      swap1\n        /* \"contracts/ERC11551.sol\":19796:19808  _msgSender() */\n      tag_154\n        /* \"contracts/ERC11551.sol\":19796:19806  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":19796:19808  _msgSender() */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":19764:19809  hasRole(_roles[role].adminRole, _msgSender()) */\n    tag_253:\n        /* \"contracts/ERC11551.sol\":19756:19862  require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to revoke\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x30\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3\n      0x30\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC11551.sol\":55484:55546  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_131:\n        /* \"contracts/ERC11551.sol\":55522:55546  keccak256(\"PAUSER_ROLE\") */\n      0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n        /* \"contracts/ERC11551.sol\":55484:55546  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":40709:40867  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":40823:40850  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"contracts/ERC11551.sol\":40800:40804  bool */\n      0x00\n        /* \"contracts/ERC11551.sol\":40823:40850  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":40823:40841  _operatorApprovals */\n      0x03\n        /* \"contracts/ERC11551.sol\":40823:40850  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC11551.sol\":40823:40860  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/ERC11551.sol\":40709:40867  function isApprovedForAll(address account, address operator) public view override returns (bool) {... */\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":40934:41831  function safeTransferFrom(... */\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":41149:41165  to != address(0) */\n      dup5\n      and\n        /* \"contracts/ERC11551.sol\":41141:41207  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_259:\n        /* \"contracts/ERC11551.sol\":41246:41258  _msgSender() */\n      tag_260\n        /* \"contracts/ERC11551.sol\":41246:41256  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":41246:41258  _msgSender() */\n      jump\t// in\n    tag_260:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":41238:41258  from == _msgSender() */\n      and\n        /* \"contracts/ERC11551.sol\":41238:41242  from */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":41238:41258  from == _msgSender() */\n      and\n      eq\n        /* \"contracts/ERC11551.sol\":41238:41298  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      dup1\n      tag_262\n      jumpi\n      pop\n        /* \"contracts/ERC11551.sol\":41262:41298  isApprovedForAll(from, _msgSender()) */\n      tag_262\n        /* \"contracts/ERC11551.sol\":41279:41283  from */\n      dup6\n        /* \"contracts/ERC11551.sol\":41285:41297  _msgSender() */\n      tag_166\n        /* \"contracts/ERC11551.sol\":41285:41295  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":41285:41297  _msgSender() */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":41262:41298  isApprovedForAll(from, _msgSender()) */\n    tag_262:\n        /* \"contracts/ERC11551.sol\":41217:41365  require(... */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_264:\n        /* \"contracts/ERC11551.sol\":41376:41392  address operator */\n      0x00\n        /* \"contracts/ERC11551.sol\":41395:41407  _msgSender() */\n      tag_265\n        /* \"contracts/ERC11551.sol\":41395:41405  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":41395:41407  _msgSender() */\n      jump\t// in\n    tag_265:\n        /* \"contracts/ERC11551.sol\":41376:41407  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC11551.sol\":41418:41514  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_266\n        /* \"contracts/ERC11551.sol\":41439:41447  operator */\n      dup2\n        /* \"contracts/ERC11551.sol\":41449:41453  from */\n      dup8\n        /* \"contracts/ERC11551.sol\":41455:41457  to */\n      dup8\n        /* \"contracts/ERC11551.sol\":41459:41480  _asSingletonArray(id) */\n      tag_267\n        /* \"contracts/ERC11551.sol\":41477:41479  id */\n      dup9\n        /* \"contracts/ERC11551.sol\":41459:41476  _asSingletonArray */\n      tag_268\n        /* \"contracts/ERC11551.sol\":41459:41480  _asSingletonArray(id) */\n      jump\t// in\n    tag_267:\n        /* \"contracts/ERC11551.sol\":41482:41507  _asSingletonArray(amount) */\n      tag_269\n        /* \"contracts/ERC11551.sol\":41500:41506  amount */\n      dup9\n        /* \"contracts/ERC11551.sol\":41482:41499  _asSingletonArray */\n      tag_268\n        /* \"contracts/ERC11551.sol\":41482:41507  _asSingletonArray(amount) */\n      jump\t// in\n    tag_269:\n        /* \"contracts/ERC11551.sol\":41509:41513  data */\n      dup8\n        /* \"contracts/ERC11551.sol\":41418:41438  _beforeTokenTransfer */\n      tag_170\n        /* \"contracts/ERC11551.sol\":41418:41514  _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      jump\t// in\n    tag_266:\n        /* \"contracts/ERC11551.sol\":41547:41624  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_270\n        /* \"contracts/ERC11551.sol\":41571:41577  amount */\n      dup4\n        /* \"contracts/ERC11551.sol\":41547:41624  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf\n      0x2a\n      swap2\n      codecopy\n        /* \"contracts/ERC11551.sol\":41547:41560  _balances[id] */\n      0x00\n      dup8\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":41547:41556  _balances */\n      0x02\n        /* \"contracts/ERC11551.sol\":41547:41560  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":41547:41566  _balances[id][from] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/ERC11551.sol\":41547:41624  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      swap1\n        /* \"contracts/ERC11551.sol\":41547:41570  _balances[id][from].sub */\n      tag_177\n        /* \"contracts/ERC11551.sol\":41547:41624  _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      jump\t// in\n    tag_270:\n        /* \"contracts/ERC11551.sol\":41525:41538  _balances[id] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":41525:41534  _balances */\n      0x02\n        /* \"contracts/ERC11551.sol\":41525:41538  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":41525:41544  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC11551.sol\":41525:41624  _balances[id][from] = _balances[id][from].sub(amount, \"ERC1155: insufficient balance for transfer\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/ERC11551.sol\":41654:41671  _balances[id][to] */\n      dup8\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/ERC11551.sol\":41654:41683  _balances[id][to].add(amount) */\n      tag_271\n      swap1\n        /* \"contracts/ERC11551.sol\":41676:41682  amount */\n      dup5\n        /* \"contracts/ERC11551.sol\":41654:41675  _balances[id][to].add */\n      tag_179\n        /* \"contracts/ERC11551.sol\":41654:41683  _balances[id][to].add(amount) */\n      jump\t// in\n    tag_271:\n        /* \"contracts/ERC11551.sol\":41634:41647  _balances[id] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":41634:41643  _balances */\n      0x02\n        /* \"contracts/ERC11551.sol\":41634:41647  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":41634:41651  _balances[id][to] */\n      dup1\n      dup12\n      and\n      dup1\n      dup7\n      mstore\n      swap2\n      dup5\n      mstore\n      swap4\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/ERC11551.sol\":41634:41683  _balances[id][to] = _balances[id][to].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/ERC11551.sol\":41699:41745  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      mload\n      dup9\n      dup2\n      mstore\n      swap2\n      dup3\n      add\n      dup8\n      swap1\n      mstore\n      dup1\n      mload\n      dup11\n      dup5\n      and\n      swap4\n      dup7\n      and\n      swap3\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap3\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log4\n        /* \"contracts/ERC11551.sol\":41756:41824  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_186\n        /* \"contracts/ERC11551.sol\":41787:41795  operator */\n      dup2\n        /* \"contracts/ERC11551.sol\":41797:41801  from */\n      dup8\n        /* \"contracts/ERC11551.sol\":41803:41805  to */\n      dup8\n        /* \"contracts/ERC11551.sol\":41807:41809  id */\n      dup8\n        /* \"contracts/ERC11551.sol\":41811:41817  amount */\n      dup8\n        /* \"contracts/ERC11551.sol\":41819:41823  data */\n      dup8\n        /* \"contracts/ERC11551.sol\":41756:41786  _doSafeTransferAcceptanceCheck */\n      tag_273\n        /* \"contracts/ERC11551.sol\":41756:41824  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":50898:51178  function burn(address account, uint256 id, uint256 value) public virtual {... */\n    tag_143:\n        /* \"contracts/ERC11551.sol\":51013:51025  _msgSender() */\n      tag_275\n        /* \"contracts/ERC11551.sol\":51013:51023  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":51013:51025  _msgSender() */\n      jump\t// in\n    tag_275:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":51002:51025  account == _msgSender() */\n      and\n        /* \"contracts/ERC11551.sol\":51002:51009  account */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":51002:51025  account == _msgSender() */\n      and\n      eq\n        /* \"contracts/ERC11551.sol\":51002:51068  account == _msgSender() || isApprovedForAll(account, _msgSender()) */\n      dup1\n      tag_277\n      jumpi\n      pop\n        /* \"contracts/ERC11551.sol\":51029:51068  isApprovedForAll(account, _msgSender()) */\n      tag_277\n        /* \"contracts/ERC11551.sol\":51046:51053  account */\n      dup4\n        /* \"contracts/ERC11551.sol\":51055:51067  _msgSender() */\n      tag_166\n        /* \"contracts/ERC11551.sol\":51055:51065  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":51055:51067  _msgSender() */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":51029:51068  isApprovedForAll(account, _msgSender()) */\n    tag_277:\n        /* \"contracts/ERC11551.sol\":50981:51135  require(... */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x29\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a\n      0x29\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_279:\n        /* \"contracts/ERC11551.sol\":51146:51171  _burn(account, id, value) */\n      tag_224\n        /* \"contracts/ERC11551.sol\":51152:51159  account */\n      dup4\n        /* \"contracts/ERC11551.sol\":51161:51163  id */\n      dup4\n        /* \"contracts/ERC11551.sol\":51165:51170  value */\n      dup4\n        /* \"contracts/ERC11551.sol\":51146:51151  _burn */\n      tag_281\n        /* \"contracts/ERC11551.sol\":51146:51171  _burn(account, id, value) */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":4888:5029  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_144:\n        /* \"contracts/ERC11551.sol\":4958:4962  bool */\n      0x00\n        /* \"contracts/ERC11551.sol\":4981:5022  _add(set._inner, bytes32(uint256(value))) */\n      tag_239\n        /* \"contracts/ERC11551.sol\":4986:4989  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":5006:5020  uint256(value) */\n      dup5\n      and\n        /* \"contracts/ERC11551.sol\":4981:4985  _add */\n      tag_284\n        /* \"contracts/ERC11551.sol\":4981:5022  _add(set._inner, bytes32(uint256(value))) */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":14316:14420  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_155:\n        /* \"contracts/ERC11551.sol\":14403:14413  msg.sender */\n      caller\n        /* \"contracts/ERC11551.sol\":14316:14420  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":45296:45996  function _mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) internal virtual {... */\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":45430:45446  to != address(0) */\n      dup5\n      and\n        /* \"contracts/ERC11551.sol\":45422:45484  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_287:\n        /* \"contracts/ERC11551.sol\":45516:45523  amounts */\n      dup2\n        /* \"contracts/ERC11551.sol\":45516:45530  amounts.length */\n      mload\n        /* \"contracts/ERC11551.sol\":45502:45505  ids */\n      dup4\n        /* \"contracts/ERC11551.sol\":45502:45512  ids.length */\n      mload\n        /* \"contracts/ERC11551.sol\":45502:45530  ids.length == amounts.length */\n      eq\n        /* \"contracts/ERC11551.sol\":45494:45575  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_288:\n        /* \"contracts/ERC11551.sol\":45586:45602  address operator */\n      0x00\n        /* \"contracts/ERC11551.sol\":45605:45617  _msgSender() */\n      tag_289\n        /* \"contracts/ERC11551.sol\":45605:45615  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":45605:45617  _msgSender() */\n      jump\t// in\n    tag_289:\n        /* \"contracts/ERC11551.sol\":45586:45617  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC11551.sol\":45628:45694  _beforeTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      tag_290\n        /* \"contracts/ERC11551.sol\":45649:45657  operator */\n      dup2\n        /* \"contracts/ERC11551.sol\":45667:45668  0 */\n      0x00\n        /* \"contracts/ERC11551.sol\":45671:45673  to */\n      dup8\n        /* \"contracts/ERC11551.sol\":45675:45678  ids */\n      dup8\n        /* \"contracts/ERC11551.sol\":45680:45687  amounts */\n      dup8\n        /* \"contracts/ERC11551.sol\":45689:45693  data */\n      dup8\n        /* \"contracts/ERC11551.sol\":45628:45648  _beforeTokenTransfer */\n      tag_170\n        /* \"contracts/ERC11551.sol\":45628:45694  _beforeTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n    tag_290:\n        /* \"contracts/ERC11551.sol\":45710:45716  uint i */\n      0x00\n        /* \"contracts/ERC11551.sol\":45705:45829  for (uint i = 0; i < ids.length; i++) {... */\n    tag_291:\n        /* \"contracts/ERC11551.sol\":45726:45729  ids */\n      dup5\n        /* \"contracts/ERC11551.sol\":45726:45736  ids.length */\n      mload\n        /* \"contracts/ERC11551.sol\":45722:45723  i */\n      dup2\n        /* \"contracts/ERC11551.sol\":45722:45736  i < ids.length */\n      lt\n        /* \"contracts/ERC11551.sol\":45705:45829  for (uint i = 0; i < ids.length; i++) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"contracts/ERC11551.sol\":45781:45818  amounts[i].add(_balances[ids[i]][to]) */\n      tag_294\n        /* \"contracts/ERC11551.sol\":45796:45805  _balances */\n      0x02\n        /* \"contracts/ERC11551.sol\":45796:45813  _balances[ids[i]] */\n      0x00\n        /* \"contracts/ERC11551.sol\":45806:45809  ids */\n      dup8\n        /* \"contracts/ERC11551.sol\":45810:45811  i */\n      dup5\n        /* \"contracts/ERC11551.sol\":45806:45812  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_295\n      jumpi\n      invalid\n    tag_295:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC11551.sol\":45796:45813  _balances[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC11551.sol\":45796:45817  _balances[ids[i]][to] */\n      0x00\n        /* \"contracts/ERC11551.sol\":45814:45816  to */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":45796:45817  _balances[ids[i]][to] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC11551.sol\":45781:45788  amounts */\n      dup6\n        /* \"contracts/ERC11551.sol\":45789:45790  i */\n      dup4\n        /* \"contracts/ERC11551.sol\":45781:45791  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_296\n      jumpi\n      invalid\n    tag_296:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC11551.sol\":45781:45795  amounts[i].add */\n      tag_179\n      swap1\n        /* \"contracts/ERC11551.sol\":45781:45818  amounts[i].add(_balances[ids[i]][to]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_294:\n        /* \"contracts/ERC11551.sol\":45757:45766  _balances */\n      0x02\n        /* \"contracts/ERC11551.sol\":45757:45774  _balances[ids[i]] */\n      0x00\n        /* \"contracts/ERC11551.sol\":45767:45770  ids */\n      dup8\n        /* \"contracts/ERC11551.sol\":45771:45772  i */\n      dup5\n        /* \"contracts/ERC11551.sol\":45767:45773  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_297\n      jumpi\n      invalid\n    tag_297:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/ERC11551.sol\":45757:45774  _balances[ids[i]] */\n      dup3\n      mstore\n      dup2\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":45757:45778  _balances[ids[i]][to] */\n      dup12\n      and\n      dup3\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/ERC11551.sol\":45757:45818  _balances[ids[i]][to] = amounts[i].add(_balances[ids[i]][to]) */\n      sstore\n        /* \"contracts/ERC11551.sol\":45738:45741  i++ */\n      0x01\n      add\n        /* \"contracts/ERC11551.sol\":45705:45829  for (uint i = 0; i < ids.length; i++) {... */\n      jump(tag_291)\n    tag_292:\n      pop\n        /* \"contracts/ERC11551.sol\":45880:45882  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":45844:45897  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"contracts/ERC11551.sol\":45876:45877  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":45844:45897  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"contracts/ERC11551.sol\":45858:45866  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":45844:45897  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/ERC11551.sol\":45884:45887  ids */\n      dup8\n        /* \"contracts/ERC11551.sol\":45889:45896  amounts */\n      dup8\n        /* \"contracts/ERC11551.sol\":45844:45897  TransferBatch(operator, address(0), to, ids, amounts) */\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup4\n      dup2\n      sub\n      dup4\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_298:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_300\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_298)\n    tag_300:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup4\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_301:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_303\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_301)\n    tag_303:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC11551.sol\":45908:45989  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      tag_304\n        /* \"contracts/ERC11551.sol\":45944:45952  operator */\n      dup2\n        /* \"contracts/ERC11551.sol\":45962:45963  0 */\n      0x00\n        /* \"contracts/ERC11551.sol\":45966:45968  to */\n      dup8\n        /* \"contracts/ERC11551.sol\":45970:45973  ids */\n      dup8\n        /* \"contracts/ERC11551.sol\":45975:45982  amounts */\n      dup8\n        /* \"contracts/ERC11551.sol\":45984:45988  data */\n      dup8\n        /* \"contracts/ERC11551.sol\":45908:45943  _doSafeBatchTransferAcceptanceCheck */\n      tag_187\n        /* \"contracts/ERC11551.sol\":45908:45989  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n    tag_304:\n        /* \"contracts/ERC11551.sol\":45296:45996  function _mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":57504:57846  function _beforeTokenTransfer(... */\n    tag_170:\n        /* \"contracts/ERC11551.sol\":57773:57839  super._beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_186\n        /* \"contracts/ERC11551.sol\":57800:57808  operator */\n      dup7\n        /* \"contracts/ERC11551.sol\":57810:57814  from */\n      dup7\n        /* \"contracts/ERC11551.sol\":57816:57818  to */\n      dup7\n        /* \"contracts/ERC11551.sol\":57820:57823  ids */\n      dup7\n        /* \"contracts/ERC11551.sol\":57825:57832  amounts */\n      dup7\n        /* \"contracts/ERC11551.sol\":57834:57838  data */\n      dup7\n        /* \"contracts/ERC11551.sol\":57773:57799  super._beforeTokenTransfer */\n      tag_307\n        /* \"contracts/ERC11551.sol\":57773:57839  super._beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":33068:33255  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_177:\n        /* \"contracts/ERC11551.sol\":33154:33161  uint256 */\n      0x00\n        /* \"contracts/ERC11551.sol\":33189:33201  errorMessage */\n      dup2\n        /* \"contracts/ERC11551.sol\":33181:33187  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/ERC11551.sol\":33173:33202  require(b <= a, errorMessage) */\n      tag_309\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_310:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_312\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_310)\n    tag_312:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_313\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_313:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_309:\n      pop\n      pop\n      pop\n        /* \"contracts/ERC11551.sol\":33224:33229  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/ERC11551.sol\":33068:33255  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":32196:32372  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_179:\n        /* \"contracts/ERC11551.sol\":32254:32261  uint256 */\n      0x00\n        /* \"contracts/ERC11551.sol\":32285:32290  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/ERC11551.sol\":32308:32314  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/ERC11551.sol\":32300:32346  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_239\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"contracts/ERC11551.sol\":49596:50374  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_187:\n        /* \"contracts/ERC11551.sol\":49840:49855  to.isContract() */\n      tag_317\n        /* \"contracts/ERC11551.sol\":49840:49842  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":49840:49853  to.isContract */\n      and\n      tag_318\n        /* \"contracts/ERC11551.sol\":49840:49855  to.isContract() */\n      jump\t// in\n    tag_317:\n        /* \"contracts/ERC11551.sol\":49836:50368  if (to.isContract()) {... */\n      iszero\n      tag_186\n      jumpi\n        /* \"contracts/ERC11551.sol\":49892:49894  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":49875:49918  IERC1155Receiver(to).onERC1155BatchReceived */\n      and\n      0xbc197c81\n        /* \"contracts/ERC11551.sol\":49919:49927  operator */\n      dup8\n        /* \"contracts/ERC11551.sol\":49929:49933  from */\n      dup8\n        /* \"contracts/ERC11551.sol\":49935:49938  ids */\n      dup7\n        /* \"contracts/ERC11551.sol\":49940:49947  amounts */\n      dup7\n        /* \"contracts/ERC11551.sol\":49949:49953  data */\n      dup7\n        /* \"contracts/ERC11551.sol\":49875:49954  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup5\n      dup2\n      sub\n      dup5\n      mstore\n      dup8\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_320:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_322\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_320)\n    tag_322:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup5\n      dup2\n      sub\n      dup4\n      mstore\n      dup7\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_323:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_325\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_323)\n    tag_325:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup5\n      dup2\n      sub\n      dup3\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_326:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_328\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_326)\n    tag_328:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_329\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_329:\n      pop\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_330\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_330:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_331\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_332\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_332:\n      pop\n      mload\n      0x01\n    tag_331:\n        /* \"contracts/ERC11551.sol\":49871:50358  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n      tag_333\n      jumpi\n      tag_336\n      tag_337\n      jump\t// in\n    tag_336:\n      dup1\n      tag_338\n      jumpi\n      pop\n      jump(tag_335)\n    tag_338:\n        /* \"contracts/ERC11551.sol\":50227:50241  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n        /* \"contracts/ERC11551.sol\":50234:50240  reason */\n      dup5\n      swap4\n        /* \"contracts/ERC11551.sol\":50227:50241  revert(reason) */\n      swap2\n      swap3\n      dup4\n      swap3\n      0x44\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n      dup4\n      iszero\n      tag_312\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_310)\n        /* \"contracts/ERC11551.sol\":49871:50358  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n    tag_335:\n        /* \"contracts/ERC11551.sol\":50281:50343  revert(\"ERC1155: transfer to non ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed\n      0x34\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC11551.sol\":49871:50358  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (bytes4 response) {... */\n    tag_333:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC11551.sol\":50003:50067  response != IERC1155Receiver(to).onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"contracts/ERC11551.sol\":49999:50160  if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {... */\n      tag_344\n      jumpi\n        /* \"contracts/ERC11551.sol\":50091:50141  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC11551.sol\":49999:50160  if (response != IERC1155Receiver(to).onERC1155BatchReceived.selector) {... */\n    tag_344:\n        /* \"contracts/ERC11551.sol\":49955:50174  returns (bytes4 response) {... */\n      pop\n        /* \"contracts/ERC11551.sol\":49596:50374  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":21604:21788  function _grantRole(bytes32 role, address account) private {... */\n    tag_193:\n        /* \"contracts/ERC11551.sol\":21677:21683  _roles */\n      0x00\n        /* \"contracts/ERC11551.sol\":21677:21689  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC11551.sol\":21677:21710  _roles[role].members.add(account) */\n      tag_346\n      swap1\n        /* \"contracts/ERC11551.sol\":21702:21709  account */\n      dup3\n        /* \"contracts/ERC11551.sol\":21677:21701  _roles[role].members.add */\n      tag_144\n        /* \"contracts/ERC11551.sol\":21677:21710  _roles[role].members.add(account) */\n      jump\t// in\n    tag_346:\n        /* \"contracts/ERC11551.sol\":21673:21782  if (_roles[role].members.add(account)) {... */\n      iszero\n      tag_192\n      jumpi\n        /* \"contracts/ERC11551.sol\":21758:21770  _msgSender() */\n      tag_348\n        /* \"contracts/ERC11551.sol\":21758:21768  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":21758:21770  _msgSender() */\n      jump\t// in\n    tag_348:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":21731:21771  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"contracts/ERC11551.sol\":21749:21756  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":21731:21771  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"contracts/ERC11551.sol\":21743:21747  role */\n      dup4\n        /* \"contracts/ERC11551.sol\":21731:21771  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC11551.sol\":21604:21788  function _grantRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":21794:21982  function _revokeRole(bytes32 role, address account) private {... */\n    tag_198:\n        /* \"contracts/ERC11551.sol\":21868:21874  _roles */\n      0x00\n        /* \"contracts/ERC11551.sol\":21868:21880  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC11551.sol\":21868:21904  _roles[role].members.remove(account) */\n      tag_350\n      swap1\n        /* \"contracts/ERC11551.sol\":21896:21903  account */\n      dup3\n        /* \"contracts/ERC11551.sol\":21868:21895  _roles[role].members.remove */\n      tag_351\n        /* \"contracts/ERC11551.sol\":21868:21904  _roles[role].members.remove(account) */\n      jump\t// in\n    tag_350:\n        /* \"contracts/ERC11551.sol\":21864:21976  if (_roles[role].members.remove(account)) {... */\n      iszero\n      tag_192\n      jumpi\n        /* \"contracts/ERC11551.sol\":21952:21964  _msgSender() */\n      tag_353\n        /* \"contracts/ERC11551.sol\":21952:21962  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":21952:21964  _msgSender() */\n      jump\t// in\n    tag_353:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":21925:21965  RoleRevoked(role, account, _msgSender()) */\n      and\n        /* \"contracts/ERC11551.sol\":21943:21950  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":21925:21965  RoleRevoked(role, account, _msgSender()) */\n      and\n        /* \"contracts/ERC11551.sol\":21937:21941  role */\n      dup4\n        /* \"contracts/ERC11551.sol\":21925:21965  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC11551.sol\":21794:21982  function _revokeRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":53531:53648  function _unpause() internal virtual whenPaused {... */\n    tag_204:\n        /* \"contracts/ERC11551.sol\":53099:53106  _paused */\n      and(0xff, sload(0x05))\n        /* \"contracts/ERC11551.sol\":53091:53131  require(_paused, \"Pausable: not paused\") */\n      tag_355\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_355:\n        /* \"contracts/ERC11551.sol\":53589:53596  _paused */\n      0x05\n        /* \"contracts/ERC11551.sol\":53589:53604  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/ERC11551.sol\":53619:53641  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"contracts/ERC11551.sol\":53628:53640  _msgSender() */\n      tag_357\n        /* \"contracts/ERC11551.sol\":53628:53638  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":53628:53640  _msgSender() */\n      jump\t// in\n    tag_357:\n        /* \"contracts/ERC11551.sol\":53619:53641  Unpaused(_msgSender()) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log1\n        /* \"contracts/ERC11551.sol\":53531:53648  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":46977:47682  function _burnBatch(address account, uint256[] memory ids, uint256[] memory amounts) internal virtual {... */\n    tag_225:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":47097:47118  account != address(0) */\n      dup4\n      and\n        /* \"contracts/ERC11551.sol\":47089:47158  require(account != address(0), \"ERC1155: burn from the zero address\") */\n      tag_359\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_359:\n        /* \"contracts/ERC11551.sol\":47190:47197  amounts */\n      dup1\n        /* \"contracts/ERC11551.sol\":47190:47204  amounts.length */\n      mload\n        /* \"contracts/ERC11551.sol\":47176:47179  ids */\n      dup3\n        /* \"contracts/ERC11551.sol\":47176:47186  ids.length */\n      mload\n        /* \"contracts/ERC11551.sol\":47176:47204  ids.length == amounts.length */\n      eq\n        /* \"contracts/ERC11551.sol\":47168:47249  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_360\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_360:\n        /* \"contracts/ERC11551.sol\":47260:47276  address operator */\n      0x00\n        /* \"contracts/ERC11551.sol\":47279:47291  _msgSender() */\n      tag_361\n        /* \"contracts/ERC11551.sol\":47279:47289  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":47279:47291  _msgSender() */\n      jump\t// in\n    tag_361:\n        /* \"contracts/ERC11551.sol\":47260:47291  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC11551.sol\":47302:47371  _beforeTokenTransfer(operator, account, address(0), ids, amounts, \"\") */\n      tag_362\n        /* \"contracts/ERC11551.sol\":47323:47331  operator */\n      dup2\n        /* \"contracts/ERC11551.sol\":47333:47340  account */\n      dup6\n        /* \"contracts/ERC11551.sol\":47350:47351  0 */\n      0x00\n        /* \"contracts/ERC11551.sol\":47354:47357  ids */\n      dup7\n        /* \"contracts/ERC11551.sol\":47359:47366  amounts */\n      dup7\n        /* \"contracts/ERC11551.sol\":47302:47371  _beforeTokenTransfer(operator, account, address(0), ids, amounts, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC11551.sol\":47302:47322  _beforeTokenTransfer */\n      tag_170\n        /* \"contracts/ERC11551.sol\":47302:47371  _beforeTokenTransfer(operator, account, address(0), ids, amounts, \"\") */\n      jump\t// in\n    tag_362:\n        /* \"contracts/ERC11551.sol\":47387:47393  uint i */\n      0x00\n        /* \"contracts/ERC11551.sol\":47382:47602  for (uint i = 0; i < ids.length; i++) {... */\n    tag_363:\n        /* \"contracts/ERC11551.sol\":47403:47406  ids */\n      dup4\n        /* \"contracts/ERC11551.sol\":47403:47413  ids.length */\n      mload\n        /* \"contracts/ERC11551.sol\":47399:47400  i */\n      dup2\n        /* \"contracts/ERC11551.sol\":47399:47413  i < ids.length */\n      lt\n        /* \"contracts/ERC11551.sol\":47382:47602  for (uint i = 0; i < ids.length; i++) {... */\n      iszero\n      tag_364\n      jumpi\n        /* \"contracts/ERC11551.sol\":47463:47591  _balances[ids[i]][account].sub(... */\n      tag_366\n        /* \"contracts/ERC11551.sol\":47511:47518  amounts */\n      dup4\n        /* \"contracts/ERC11551.sol\":47519:47520  i */\n      dup3\n        /* \"contracts/ERC11551.sol\":47511:47521  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_367\n      jumpi\n      invalid\n    tag_367:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC11551.sol\":47463:47591  _balances[ids[i]][account].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685\n      0x24\n      swap2\n      codecopy\n        /* \"contracts/ERC11551.sol\":47463:47472  _balances */\n      0x02\n        /* \"contracts/ERC11551.sol\":47463:47480  _balances[ids[i]] */\n      0x00\n        /* \"contracts/ERC11551.sol\":47473:47476  ids */\n      dup9\n        /* \"contracts/ERC11551.sol\":47477:47478  i */\n      dup7\n        /* \"contracts/ERC11551.sol\":47473:47479  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_368\n      jumpi\n      invalid\n    tag_368:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ERC11551.sol\":47463:47480  _balances[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC11551.sol\":47463:47489  _balances[ids[i]][account] */\n      0x00\n        /* \"contracts/ERC11551.sol\":47481:47488  account */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":47463:47489  _balances[ids[i]][account] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERC11551.sol\":47463:47493  _balances[ids[i]][account].sub */\n      tag_177\n      swap1\n        /* \"contracts/ERC11551.sol\":47463:47591  _balances[ids[i]][account].sub(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_366:\n        /* \"contracts/ERC11551.sol\":47434:47443  _balances */\n      0x02\n        /* \"contracts/ERC11551.sol\":47434:47451  _balances[ids[i]] */\n      0x00\n        /* \"contracts/ERC11551.sol\":47444:47447  ids */\n      dup7\n        /* \"contracts/ERC11551.sol\":47448:47449  i */\n      dup5\n        /* \"contracts/ERC11551.sol\":47444:47450  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_369\n      jumpi\n      invalid\n    tag_369:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/ERC11551.sol\":47434:47451  _balances[ids[i]] */\n      dup3\n      mstore\n      dup2\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":47434:47460  _balances[ids[i]][account] */\n      dup11\n      and\n      dup3\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/ERC11551.sol\":47434:47591  _balances[ids[i]][account] = _balances[ids[i]][account].sub(... */\n      sstore\n        /* \"contracts/ERC11551.sol\":47415:47418  i++ */\n      0x01\n      add\n        /* \"contracts/ERC11551.sol\":47382:47602  for (uint i = 0; i < ids.length; i++) {... */\n      jump(tag_363)\n    tag_364:\n      pop\n        /* \"contracts/ERC11551.sol\":47658:47659  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":47617:47675  TransferBatch(operator, account, address(0), ids, amounts) */\n      and\n        /* \"contracts/ERC11551.sol\":47641:47648  account */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":47617:47675  TransferBatch(operator, account, address(0), ids, amounts) */\n      and\n        /* \"contracts/ERC11551.sol\":47631:47639  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":47617:47675  TransferBatch(operator, account, address(0), ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/ERC11551.sol\":47662:47665  ids */\n      dup7\n        /* \"contracts/ERC11551.sol\":47667:47674  amounts */\n      dup7\n        /* \"contracts/ERC11551.sol\":47617:47675  TransferBatch(operator, account, address(0), ids, amounts) */\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup4\n      dup2\n      sub\n      dup4\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_370:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_372\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_370)\n    tag_372:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup4\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_373:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_375\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_373)\n    tag_375:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC11551.sol\":46977:47682  function _burnBatch(address account, uint256[] memory ids, uint256[] memory amounts) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":44379:44951  function _mint(address account, uint256 id, uint256 amount, bytes memory data) internal virtual {... */\n    tag_231:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":44493:44514  account != address(0) */\n      dup5\n      and\n        /* \"contracts/ERC11551.sol\":44485:44552  require(account != address(0), \"ERC1155: mint to the zero address\") */\n      tag_377\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_377:\n        /* \"contracts/ERC11551.sol\":44563:44579  address operator */\n      0x00\n        /* \"contracts/ERC11551.sol\":44582:44594  _msgSender() */\n      tag_378\n        /* \"contracts/ERC11551.sol\":44582:44592  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":44582:44594  _msgSender() */\n      jump\t// in\n    tag_378:\n        /* \"contracts/ERC11551.sol\":44563:44594  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC11551.sol\":44605:44712  _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data) */\n      tag_379\n        /* \"contracts/ERC11551.sol\":44626:44634  operator */\n      dup2\n        /* \"contracts/ERC11551.sol\":44644:44645  0 */\n      0x00\n        /* \"contracts/ERC11551.sol\":44648:44655  account */\n      dup8\n        /* \"contracts/ERC11551.sol\":44657:44678  _asSingletonArray(id) */\n      tag_267\n        /* \"contracts/ERC11551.sol\":44675:44677  id */\n      dup9\n        /* \"contracts/ERC11551.sol\":44657:44674  _asSingletonArray */\n      tag_268\n        /* \"contracts/ERC11551.sol\":44657:44678  _asSingletonArray(id) */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":44605:44712  _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data) */\n    tag_379:\n        /* \"contracts/ERC11551.sol\":44748:44761  _balances[id] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":44748:44757  _balances */\n      0x02\n        /* \"contracts/ERC11551.sol\":44748:44761  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":44748:44770  _balances[id][account] */\n      dup10\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC11551.sol\":44748:44782  _balances[id][account].add(amount) */\n      tag_382\n      swap1\n        /* \"contracts/ERC11551.sol\":44775:44781  amount */\n      dup5\n        /* \"contracts/ERC11551.sol\":44748:44774  _balances[id][account].add */\n      tag_179\n        /* \"contracts/ERC11551.sol\":44748:44782  _balances[id][account].add(amount) */\n      jump\t// in\n    tag_382:\n        /* \"contracts/ERC11551.sol\":44723:44736  _balances[id] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":44723:44732  _balances */\n      0x02\n        /* \"contracts/ERC11551.sol\":44723:44736  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":44723:44745  _balances[id][account] */\n      dup1\n      dup12\n      and\n      dup1\n      dup7\n      mstore\n      swap2\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/ERC11551.sol\":44723:44782  _balances[id][account] = _balances[id][account].add(amount) */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"contracts/ERC11551.sol\":44797:44854  TransferSingle(operator, address(0), account, id, amount) */\n      dup2\n      mload\n      dup10\n      dup2\n      mstore\n      swap3\n      dup4\n      add\n      dup9\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"contracts/ERC11551.sol\":44723:44745  _balances[id][account] */\n      swap1\n      swap5\n        /* \"contracts/ERC11551.sol\":44797:44854  TransferSingle(operator, address(0), account, id, amount) */\n      dup7\n      and\n      swap3\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap3\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log4\n        /* \"contracts/ERC11551.sol\":44865:44944  _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data) */\n      tag_304\n        /* \"contracts/ERC11551.sol\":44896:44904  operator */\n      dup2\n        /* \"contracts/ERC11551.sol\":44914:44915  0 */\n      0x00\n        /* \"contracts/ERC11551.sol\":44918:44925  account */\n      dup8\n        /* \"contracts/ERC11551.sol\":44927:44929  id */\n      dup8\n        /* \"contracts/ERC11551.sol\":44931:44937  amount */\n      dup8\n        /* \"contracts/ERC11551.sol\":44939:44943  data */\n      dup8\n        /* \"contracts/ERC11551.sol\":44865:44895  _doSafeTransferAcceptanceCheck */\n      tag_273\n        /* \"contracts/ERC11551.sol\":44865:44944  _doSafeTransferAcceptanceCheck(operator, address(0), account, id, amount, data) */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":53284:53399  function _pause() internal virtual whenNotPaused {... */\n    tag_237:\n        /* \"contracts/ERC11551.sol\":52835:52842  _paused */\n      and(0xff, sload(0x05))\n        /* \"contracts/ERC11551.sol\":52834:52842  !_paused */\n      iszero\n        /* \"contracts/ERC11551.sol\":52826:52863  require(!_paused, \"Pausable: paused\") */\n      tag_385\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_385:\n        /* \"contracts/ERC11551.sol\":53343:53350  _paused */\n      0x05\n        /* \"contracts/ERC11551.sol\":53343:53357  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/ERC11551.sol\":53353:53357  true */\n      0x01\n        /* \"contracts/ERC11551.sol\":53343:53357  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/ERC11551.sol\":53372:53392  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"contracts/ERC11551.sol\":53379:53391  _msgSender() */\n      tag_357\n        /* \"contracts/ERC11551.sol\":53379:53389  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":53379:53391  _msgSender() */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":6109:6256  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n    tag_240:\n        /* \"contracts/ERC11551.sol\":6183:6190  address */\n      0x00\n        /* \"contracts/ERC11551.sol\":6225:6247  _at(set._inner, index) */\n      tag_239\n        /* \"contracts/ERC11551.sol\":6229:6232  set */\n      dup4\n        /* \"contracts/ERC11551.sol\":6241:6246  index */\n      dup4\n        /* \"contracts/ERC11551.sol\":6225:6228  _at */\n      tag_390\n        /* \"contracts/ERC11551.sol\":6225:6247  _at(set._inner, index) */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":5425:5581  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n    tag_243:\n        /* \"contracts/ERC11551.sol\":5505:5509  bool */\n      0x00\n        /* \"contracts/ERC11551.sol\":5528:5574  _contains(set._inner, bytes32(uint256(value))) */\n      tag_239\n        /* \"contracts/ERC11551.sol\":5538:5541  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":5558:5572  uint256(value) */\n      dup5\n      and\n        /* \"contracts/ERC11551.sol\":5528:5537  _contains */\n      tag_393\n        /* \"contracts/ERC11551.sol\":5528:5574  _contains(set._inner, bytes32(uint256(value))) */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":5662:5777  function length(AddressSet storage set) internal view returns (uint256) {... */\n    tag_251:\n        /* \"contracts/ERC11551.sol\":5725:5732  uint256 */\n      0x00\n        /* \"contracts/ERC11551.sol\":5751:5770  _length(set._inner) */\n      tag_145\n        /* \"contracts/ERC11551.sol\":5759:5762  set */\n      dup3\n        /* \"contracts/ERC11551.sol\":5751:5758  _length */\n      tag_396\n        /* \"contracts/ERC11551.sol\":5751:5770  _length(set._inner) */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":50380:50573  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_268:\n        /* \"contracts/ERC11551.sol\":50499:50515  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/ERC11551.sol\":50513:50514  1 */\n      0x01\n        /* \"contracts/ERC11551.sol\":50499:50515  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/ERC11551.sol\":50446:50462  uint256[] memory */\n      0x60\n      swap2\n      dup3\n      swap2\n        /* \"contracts/ERC11551.sol\":50499:50515  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/ERC11551.sol\":50474:50515  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"contracts/ERC11551.sol\":50536:50543  element */\n      dup3\n        /* \"contracts/ERC11551.sol\":50525:50530  array */\n      dup2\n        /* \"contracts/ERC11551.sol\":50531:50532  0 */\n      0x00\n        /* \"contracts/ERC11551.sol\":50525:50533  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_400\n      jumpi\n      invalid\n    tag_400:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/ERC11551.sol\":50525:50543  array[0] = element */\n      mstore\n        /* \"contracts/ERC11551.sol\":50561:50566  array */\n      swap3\n        /* \"contracts/ERC11551.sol\":50380:50573  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":48849:49590  function _doSafeTransferAcceptanceCheck(... */\n    tag_273:\n        /* \"contracts/ERC11551.sol\":49068:49083  to.isContract() */\n      tag_402\n        /* \"contracts/ERC11551.sol\":49068:49070  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":49068:49081  to.isContract */\n      and\n      tag_318\n        /* \"contracts/ERC11551.sol\":49068:49083  to.isContract() */\n      jump\t// in\n    tag_402:\n        /* \"contracts/ERC11551.sol\":49064:49584  if (to.isContract()) {... */\n      iszero\n      tag_186\n      jumpi\n        /* \"contracts/ERC11551.sol\":49120:49122  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":49103:49141  IERC1155Receiver(to).onERC1155Received */\n      and\n      0xf23a6e61\n        /* \"contracts/ERC11551.sol\":49142:49150  operator */\n      dup8\n        /* \"contracts/ERC11551.sol\":49152:49156  from */\n      dup8\n        /* \"contracts/ERC11551.sol\":49158:49160  id */\n      dup7\n        /* \"contracts/ERC11551.sol\":49162:49168  amount */\n      dup7\n        /* \"contracts/ERC11551.sol\":49170:49174  data */\n      dup7\n        /* \"contracts/ERC11551.sol\":49103:49175  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_404:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_406\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_404)\n    tag_406:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_407\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_407:\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_408\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_408:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_409\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_410\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_410:\n      pop\n      mload\n      0x01\n    tag_409:\n        /* \"contracts/ERC11551.sol\":49099:49574  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_411\n      jumpi\n      tag_336\n      tag_337\n      jump\t// in\n    tag_411:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC11551.sol\":49224:49283  response != IERC1155Receiver(to).onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"contracts/ERC11551.sol\":49220:49376  if (response != IERC1155Receiver(to).onERC1155Received.selector) {... */\n      tag_344\n      jumpi\n        /* \"contracts/ERC11551.sol\":49307:49357  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503\n      0x28\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC11551.sol\":46245:46783  function _burn(address account, uint256 id, uint256 amount) internal virtual {... */\n    tag_281:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":46340:46361  account != address(0) */\n      dup4\n      and\n        /* \"contracts/ERC11551.sol\":46332:46401  require(account != address(0), \"ERC1155: burn from the zero address\") */\n      tag_423\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_423:\n        /* \"contracts/ERC11551.sol\":46412:46428  address operator */\n      0x00\n        /* \"contracts/ERC11551.sol\":46431:46443  _msgSender() */\n      tag_424\n        /* \"contracts/ERC11551.sol\":46431:46441  _msgSender */\n      tag_155\n        /* \"contracts/ERC11551.sol\":46431:46443  _msgSender() */\n      jump\t// in\n    tag_424:\n        /* \"contracts/ERC11551.sol\":46412:46443  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/ERC11551.sol\":46454:46559  _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n      tag_425\n        /* \"contracts/ERC11551.sol\":46475:46483  operator */\n      dup2\n        /* \"contracts/ERC11551.sol\":46485:46492  account */\n      dup6\n        /* \"contracts/ERC11551.sol\":46502:46503  0 */\n      0x00\n        /* \"contracts/ERC11551.sol\":46506:46527  _asSingletonArray(id) */\n      tag_426\n        /* \"contracts/ERC11551.sol\":46524:46526  id */\n      dup8\n        /* \"contracts/ERC11551.sol\":46506:46523  _asSingletonArray */\n      tag_268\n        /* \"contracts/ERC11551.sol\":46506:46527  _asSingletonArray(id) */\n      jump\t// in\n    tag_426:\n        /* \"contracts/ERC11551.sol\":46529:46554  _asSingletonArray(amount) */\n      tag_427\n        /* \"contracts/ERC11551.sol\":46547:46553  amount */\n      dup8\n        /* \"contracts/ERC11551.sol\":46529:46546  _asSingletonArray */\n      tag_268\n        /* \"contracts/ERC11551.sol\":46529:46554  _asSingletonArray(amount) */\n      jump\t// in\n    tag_427:\n        /* \"contracts/ERC11551.sol\":46454:46559  _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC11551.sol\":46454:46474  _beforeTokenTransfer */\n      tag_170\n        /* \"contracts/ERC11551.sol\":46454:46559  _beforeTokenTransfer(operator, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\") */\n      jump\t// in\n    tag_425:\n        /* \"contracts/ERC11551.sol\":46595:46703  _balances[id][account].sub(... */\n      tag_428\n        /* \"contracts/ERC11551.sol\":46635:46641  amount */\n      dup3\n        /* \"contracts/ERC11551.sol\":46595:46703  _balances[id][account].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685\n      0x24\n      swap2\n      codecopy\n        /* \"contracts/ERC11551.sol\":46595:46608  _balances[id] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":46595:46604  _balances */\n      0x02\n        /* \"contracts/ERC11551.sol\":46595:46608  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":46595:46617  _balances[id][account] */\n      dup12\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/ERC11551.sol\":46595:46703  _balances[id][account].sub(... */\n      swap1\n        /* \"contracts/ERC11551.sol\":46595:46621  _balances[id][account].sub */\n      tag_177\n        /* \"contracts/ERC11551.sol\":46595:46703  _balances[id][account].sub(... */\n      jump\t// in\n    tag_428:\n        /* \"contracts/ERC11551.sol\":46570:46583  _balances[id] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":46570:46579  _balances */\n      0x02\n        /* \"contracts/ERC11551.sol\":46570:46583  _balances[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":46570:46592  _balances[id][account] */\n      dup1\n      dup11\n      and\n      dup1\n      dup7\n      mstore\n      swap2\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/ERC11551.sol\":46570:46703  _balances[id][account] = _balances[id][account].sub(... */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"contracts/ERC11551.sol\":46719:46776  TransferSingle(operator, account, address(0), id, amount) */\n      dup2\n      mload\n      dup9\n      dup2\n      mstore\n      swap3\n      dup4\n      add\n      dup8\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"contracts/ERC11551.sol\":46570:46583  _balances[id] */\n      swap4\n      swap5\n        /* \"contracts/ERC11551.sol\":46570:46592  _balances[id][account] */\n      swap1\n      swap4\n        /* \"contracts/ERC11551.sol\":46719:46776  TransferSingle(operator, account, address(0), id, amount) */\n      swap1\n      dup7\n      and\n      swap3\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap3\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log4\n        /* \"contracts/ERC11551.sol\":46245:46783  function _burn(address account, uint256 id, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":1635:2039  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_284:\n        /* \"contracts/ERC11551.sol\":1698:1702  bool */\n      0x00\n        /* \"contracts/ERC11551.sol\":1719:1740  _contains(set, value) */\n      tag_430\n        /* \"contracts/ERC11551.sol\":1729:1732  set */\n      dup4\n        /* \"contracts/ERC11551.sol\":1734:1739  value */\n      dup4\n        /* \"contracts/ERC11551.sol\":1719:1728  _contains */\n      tag_393\n        /* \"contracts/ERC11551.sol\":1719:1740  _contains(set, value) */\n      jump\t// in\n    tag_430:\n        /* \"contracts/ERC11551.sol\":1714:2033  if (!_contains(set, value)) {... */\n      tag_431\n      jumpi\n      pop\n        /* \"contracts/ERC11551.sol\":1756:1779  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup5\n      sstore\n        /* \"contracts/ERC11551.sol\":1756:1767  set._values */\n      0x00\n        /* \"contracts/ERC11551.sol\":1756:1779  set._values.push(value) */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup5\n      swap1\n      sstore\n        /* \"contracts/ERC11551.sol\":1936:1954  set._values.length */\n      dup5\n      sload\n        /* \"contracts/ERC11551.sol\":1914:1933  set._indexes[value] */\n      dup5\n      dup3\n      mstore\n        /* \"contracts/ERC11551.sol\":1914:1926  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"contracts/ERC11551.sol\":1914:1933  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC11551.sol\":1914:1954  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ERC11551.sol\":1968:1979  return true */\n      jump(tag_145)\n        /* \"contracts/ERC11551.sol\":1714:2033  if (!_contains(set, value)) {... */\n    tag_431:\n      pop\n        /* \"contracts/ERC11551.sol\":2017:2022  false */\n      0x00\n        /* \"contracts/ERC11551.sol\":2010:2022  return false */\n      jump(tag_145)\n        /* \"contracts/ERC11551.sol\":54249:54642  function _beforeTokenTransfer(... */\n    tag_307:\n        /* \"contracts/ERC11551.sol\":54492:54558  super._beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_435\n        /* \"contracts/ERC11551.sol\":54519:54527  operator */\n      dup7\n        /* \"contracts/ERC11551.sol\":54529:54533  from */\n      dup7\n        /* \"contracts/ERC11551.sol\":54535:54537  to */\n      dup7\n        /* \"contracts/ERC11551.sol\":54539:54542  ids */\n      dup7\n        /* \"contracts/ERC11551.sol\":54544:54551  amounts */\n      dup7\n        /* \"contracts/ERC11551.sol\":54553:54557  data */\n      dup7\n        /* \"contracts/ERC11551.sol\":54492:54518  super._beforeTokenTransfer */\n      tag_186\n        /* \"contracts/ERC11551.sol\":54492:54558  super._beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_435:\n        /* \"contracts/ERC11551.sol\":54578:54586  paused() */\n      tag_437\n        /* \"contracts/ERC11551.sol\":54578:54584  paused */\n      tag_93\n        /* \"contracts/ERC11551.sol\":54578:54586  paused() */\n      jump\t// in\n    tag_437:\n        /* \"contracts/ERC11551.sol\":54577:54586  !paused() */\n      iszero\n        /* \"contracts/ERC11551.sol\":54569:54635  require(!paused(), \"ERC1155Pausable: token transfer while paused\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_382791644f51336ed3667770955aa8eb4efb839029c48708cadb22e92d271435\n      0x2c\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC11551.sol\":8547:8960  function isContract(address account) internal view returns (bool) {... */\n    tag_318:\n        /* \"contracts/ERC11551.sol\":8907:8927  extcodesize(account) */\n      extcodesize\n        /* \"contracts/ERC11551.sol\":8945:8953  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"contracts/ERC11551.sol\":8547:8960  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":5197:5344  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_351:\n        /* \"contracts/ERC11551.sol\":5270:5274  bool */\n      0x00\n        /* \"contracts/ERC11551.sol\":5293:5337  _remove(set._inner, bytes32(uint256(value))) */\n      tag_239\n        /* \"contracts/ERC11551.sol\":5301:5304  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC11551.sol\":5321:5335  uint256(value) */\n      dup5\n      and\n        /* \"contracts/ERC11551.sol\":5293:5300  _remove */\n      tag_442\n        /* \"contracts/ERC11551.sol\":5293:5337  _remove(set._inner, bytes32(uint256(value))) */\n      jump\t// in\n        /* \"contracts/ERC11551.sol\":4447:4648  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_390:\n        /* \"contracts/ERC11551.sol\":4541:4559  set._values.length */\n      dup2\n      sload\n        /* \"contracts/ERC11551.sol\":4514:4521  bytes32 */\n      0x00\n      swap1\n        /* \"contracts/ERC11551.sol\":4541:4567  set._values.length > index */\n      dup3\n      lt\n        /* \"contracts/ERC11551.sol\":4533:4606  require(set._values.length > index, \"EnumerableSet: index out of bounds\") */\n      tag_444\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_444:\n        /* \"contracts/ERC11551.sol\":4623:4626  set */\n      dup3\n        /* \"contracts/ERC11551.sol\":4623:4634  set._values */\n      0x00\n      add\n        /* \"contracts/ERC11551.sol\":4635:4640  index */\n      dup3\n        /* \"contracts/ERC11551.sol\":4623:4641  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_445\n      jumpi\n      invalid\n    tag_445:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/ERC11551.sol\":4616:4641  return set._values[index] */\n      swap1\n      pop\n        /* \"contracts/ERC11551.sol\":4447:4648  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":3800:3927  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n    tag_393:\n        /* \"contracts/ERC11551.sol\":3873:3877  bool */\n      0x00\n        /* \"contracts/ERC11551.sol\":3896:3915  set._indexes[value] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":3896:3908  set._indexes */\n      0x01\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/ERC11551.sol\":3896:3915  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC11551.sol\":3896:3920  set._indexes[value] != 0 */\n      iszero\n      iszero\n      swap1\n        /* \"contracts/ERC11551.sol\":3800:3927  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":4008:4115  function _length(Set storage set) private view returns (uint256) {... */\n    tag_396:\n        /* \"contracts/ERC11551.sol\":4090:4108  set._values.length */\n      sload\n      swap1\n        /* \"contracts/ERC11551.sol\":4008:4115  function _length(Set storage set) private view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/ERC11551.sol\":2207:3719  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_442:\n        /* \"contracts/ERC11551.sol\":2273:2277  bool */\n      0x00\n        /* \"contracts/ERC11551.sol\":2410:2429  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":2410:2422  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"contracts/ERC11551.sol\":2410:2429  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/ERC11551.sol\":2444:2459  valueIndex != 0 */\n      dup1\n      iszero\n        /* \"contracts/ERC11551.sol\":2440:3713  if (valueIndex != 0) { // Equivalent to contains(set, value)... */\n      tag_451\n      jumpi\n        /* \"contracts/ERC11551.sol\":2873:2891  set._values.length */\n      dup4\n      sload\n      not(0x00)\n        /* \"contracts/ERC11551.sol\":2825:2839  valueIndex - 1 */\n      dup1\n      dup4\n      add\n      swap2\n        /* \"contracts/ERC11551.sol\":2873:2895  set._values.length - 1 */\n      swap1\n      dup2\n      add\n      swap1\n        /* \"contracts/ERC11551.sol\":2801:2822  uint256 toDeleteIndex */\n      0x00\n      swap1\n        /* \"contracts/ERC11551.sol\":2873:2876  set */\n      dup8\n      swap1\n        /* \"contracts/ERC11551.sol\":2873:2895  set._values.length - 1 */\n      dup4\n      swap1\n        /* \"contracts/ERC11551.sol\":3155:3177  set._values[lastIndex] */\n      dup2\n      lt\n      tag_452\n      jumpi\n      invalid\n    tag_452:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/ERC11551.sol\":3135:3177  bytes32 lastvalue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"contracts/ERC11551.sol\":3298:3307  lastvalue */\n      dup1\n        /* \"contracts/ERC11551.sol\":3269:3272  set */\n      dup8\n        /* \"contracts/ERC11551.sol\":3269:3280  set._values */\n      0x00\n      add\n        /* \"contracts/ERC11551.sol\":3281:3294  toDeleteIndex */\n      dup5\n        /* \"contracts/ERC11551.sol\":3269:3295  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_454\n      jumpi\n      invalid\n    tag_454:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"contracts/ERC11551.sol\":3269:3307  set._values[toDeleteIndex] = lastvalue */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ERC11551.sol\":3373:3396  set._indexes[lastvalue] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC11551.sol\":3415:3416  1 */\n      0x01\n        /* \"contracts/ERC11551.sol\":3373:3385  set._indexes */\n      dup10\n      dup2\n      add\n        /* \"contracts/ERC11551.sol\":3373:3396  set._indexes[lastvalue] */\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC11551.sol\":3399:3416  toDeleteIndex + 1 */\n      swap1\n      dup5\n      add\n        /* \"contracts/ERC11551.sol\":3373:3416  set._indexes[lastvalue] = toDeleteIndex + 1 */\n      swap1\n      sstore\n        /* \"contracts/ERC11551.sol\":3522:3539  set._values.pop() */\n      dup7\n      sload\n        /* \"contracts/ERC11551.sol\":3373:3376  set */\n      dup8\n      swap1\n        /* \"contracts/ERC11551.sol\":3522:3539  set._values.pop() */\n      dup1\n      tag_456\n      jumpi\n      invalid\n    tag_456:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/ERC11551.sol\":3614:3617  set */\n      dup7\n        /* \"contracts/ERC11551.sol\":3614:3626  set._indexes */\n      0x01\n      add\n        /* \"contracts/ERC11551.sol\":3614:3633  set._indexes[value] */\n      0x00\n        /* \"contracts/ERC11551.sol\":3627:3632  value */\n      dup8\n        /* \"contracts/ERC11551.sol\":3614:3633  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERC11551.sol\":3607:3633  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"contracts/ERC11551.sol\":3655:3659  true */\n      0x01\n        /* \"contracts/ERC11551.sol\":3648:3659  return true */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_145)\n        /* \"contracts/ERC11551.sol\":2440:3713  if (valueIndex != 0) { // Equivalent to contains(set, value)... */\n    tag_451:\n        /* \"contracts/ERC11551.sol\":3697:3702  false */\n      0x00\n        /* \"contracts/ERC11551.sol\":3690:3702  return false */\n      swap2\n      pop\n      pop\n      jump(tag_145)\n        /* \"--CODEGEN--\":110:216   */\n    tag_460:\n        /* \"--CODEGEN--\":195:198   */\n      0xe0\n        /* \"--CODEGEN--\":191:206   */\n      shr\n      swap1\n        /* \"--CODEGEN--\":163:216   */\n      jump\t// out\n        /* \"--CODEGEN--\":224:963   */\n    tag_337:\n      0x00\n        /* \"--CODEGEN--\":297:301   */\n      0x44\n        /* \"--CODEGEN--\":279:295   */\n      returndatasize\n        /* \"--CODEGEN--\":276:302   */\n      lt\n        /* \"--CODEGEN--\":273:275   */\n      iszero\n      tag_463\n      jumpi\n        /* \"--CODEGEN--\":305:310   */\n      jump(tag_217)\n        /* \"--CODEGEN--\":273:275   */\n    tag_463:\n        /* \"--CODEGEN--\":339:340   */\n      0x04\n      dup2\n      dup3\n        /* \"--CODEGEN--\":318:341   */\n      returndatacopy\n        /* \"--CODEGEN--\":414:424   */\n      0x08c379a0\n        /* \"--CODEGEN--\":357:391   */\n      tag_464\n      dup3\n        /* \"--CODEGEN--\":382:390   */\n      mload\n        /* \"--CODEGEN--\":357:391   */\n      tag_460\n      jump\t// in\n    tag_464:\n        /* \"--CODEGEN--\":406:425   */\n      eq\n        /* \"--CODEGEN--\":396:398   */\n      tag_465\n      jumpi\n        /* \"--CODEGEN--\":429:434   */\n      jump(tag_217)\n        /* \"--CODEGEN--\":396:398   */\n    tag_465:\n        /* \"--CODEGEN--\":460:462   */\n      0x40\n        /* \"--CODEGEN--\":454:463   */\n      mload\n        /* \"--CODEGEN--\":496:512   */\n      returndatasize\n      not(0x03)\n        /* \"--CODEGEN--\":492:516   */\n      add\n        /* \"--CODEGEN--\":339:340   */\n      0x04\n        /* \"--CODEGEN--\":454:463   */\n      dup3\n        /* \"--CODEGEN--\":468:517   */\n      returndatacopy\n        /* \"--CODEGEN--\":543:547   */\n      dup1\n        /* \"--CODEGEN--\":537:548   */\n      mload\n        /* \"--CODEGEN--\":624:640   */\n      returndatasize\n        /* \"--CODEGEN--\":576:594   */\n      0xffffffffffffffff\n        /* \"--CODEGEN--\":624:640   */\n      dup2\n        /* \"--CODEGEN--\":617:621   */\n      0x24\n        /* \"--CODEGEN--\":609:615   */\n      dup5\n        /* \"--CODEGEN--\":605:622   */\n      add\n        /* \"--CODEGEN--\":602:641   */\n      gt\n        /* \"--CODEGEN--\":576:594   */\n      dup2\n        /* \"--CODEGEN--\":568:574   */\n      dup5\n        /* \"--CODEGEN--\":565:595   */\n      gt\n        /* \"--CODEGEN--\":556:647   */\n      or\n        /* \"--CODEGEN--\":553:555   */\n      iszero\n      tag_466\n      jumpi\n        /* \"--CODEGEN--\":655:660   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_217)\n        /* \"--CODEGEN--\":553:555   */\n    tag_466:\n        /* \"--CODEGEN--\":693:699   */\n      dup3\n        /* \"--CODEGEN--\":687:691   */\n      dup5\n        /* \"--CODEGEN--\":683:700   */\n      add\n        /* \"--CODEGEN--\":672:700   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":725:728   */\n      dup3\n        /* \"--CODEGEN--\":719:729   */\n      mload\n        /* \"--CODEGEN--\":705:729   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":576:594   */\n      dup1\n        /* \"--CODEGEN--\":740:746   */\n      dup3\n        /* \"--CODEGEN--\":737:767   */\n      gt\n        /* \"--CODEGEN--\":734:736   */\n      iszero\n      tag_467\n      jumpi\n        /* \"--CODEGEN--\":770:775   */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_217)\n        /* \"--CODEGEN--\":734:736   */\n    tag_467:\n      pop\n        /* \"--CODEGEN--\":847:863   */\n      returndatasize\n        /* \"--CODEGEN--\":841:845   */\n      dup4\n        /* \"--CODEGEN--\":837:864   */\n      add\n        /* \"--CODEGEN--\":807:811   */\n      0x20\n        /* \"--CODEGEN--\":814:820   */\n      dup3\n        /* \"--CODEGEN--\":802:805   */\n      dup5\n        /* \"--CODEGEN--\":794:821   */\n      add\n      add\n        /* \"--CODEGEN--\":829:865   */\n      gt\n        /* \"--CODEGEN--\":826:828   */\n      iszero\n      tag_468\n      jumpi\n        /* \"--CODEGEN--\":868:873   */\n      pop\n      pop\n      pop\n      jump(tag_217)\n        /* \"--CODEGEN--\":826:828   */\n    tag_468:\n        /* \"--CODEGEN--\":89:96   */\n      0x1f\n        /* \"--CODEGEN--\":73:87   */\n      add\n      not(0x1f)\n        /* \"--CODEGEN--\":69:97   */\n      and\n        /* \"--CODEGEN--\":892:942   */\n      dup2\n      add\n        /* \"--CODEGEN--\":807:811   */\n      0x20\n        /* \"--CODEGEN--\":892:942   */\n      add\n        /* \"--CODEGEN--\":460:462   */\n      0x40\n        /* \"--CODEGEN--\":881:943   */\n      mstore\n        /* \"--CODEGEN--\":900:903   */\n      swap2\n      pop\n      pop\n        /* \"--CODEGEN--\":267:963   */\n      swap1\n      jump\t// out\n    stop\n    data_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed 455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572\n    data_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb 456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473\n    data_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503 455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73\n    data_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811 416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74\n    data_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9 455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373\n    data_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c 455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373\n    data_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685 455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_382791644f51336ed3667770955aa8eb4efb839029c48708cadb22e92d271435 455243313135355061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564\n    data_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a 455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564\n    data_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3 416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65\n    data_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d 455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686 455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564\n    data_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a 455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_8955910be8371dda281e80fa38d092164791ccbd984aaa07b76276bef2682e9c 455243313135355072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74\n    data_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf 455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572\n    data_be510562063387b7714478be5eff01a8c39efbb1b76d9be224d34aac440c9e31 455243313135355072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365\n    data_d5053a301adec69bf5c7c3782556a354b14090e41fa7ca93c4de3863fd6a98b9 455243313135355072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f207061757365\n    data_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2 455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66\n    data_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5 455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368\n    data_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807 455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368\n    data_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2 455243313135353a206d696e7420746f20746865207a65726f2061646472657373\n    data_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b 416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66\n\n    auxdata: 0xa26469706673582212209bbb89b1e84bd88835b33f3441566a1934d00e567eb1a6f5214421f7bca9ab0464736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3256 CODESIZE SUB DUP1 PUSH3 0x3256 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP DUP3 SWAP2 POP PUSH3 0x102 SWAP1 POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH3 0x1B7 JUMP JUMPDEST PUSH3 0x10D DUP2 PUSH3 0x23F JUMP JUMPDEST PUSH3 0x11F PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL PUSH3 0x1B7 JUMP JUMPDEST PUSH3 0x131 PUSH4 0x3A24D07 PUSH1 0xE2 SHL PUSH3 0x1B7 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH3 0x152 PUSH1 0x0 PUSH3 0x14C PUSH3 0x258 JUMP JUMPDEST PUSH3 0x25C JUMP JUMPDEST PUSH3 0x181 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH3 0x14C PUSH3 0x258 JUMP JUMPDEST PUSH3 0x1B0 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH3 0x14C PUSH3 0x258 JUMP JUMPDEST POP PUSH3 0x3FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP1 DUP3 AND EQ ISZERO PUSH3 0x217 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433136353A20696E76616C696420696E7465726661636520696400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 MLOAD PUSH3 0x254 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x362 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH3 0x254 DUP3 DUP3 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH3 0x287 SWAP2 DUP4 SWAP1 PUSH3 0x193E PUSH3 0x2DB DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST ISZERO PUSH3 0x254 JUMPI PUSH3 0x297 PUSH3 0x258 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2F2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x2FB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x309 DUP4 DUP4 PUSH3 0x34A JUMP JUMPDEST PUSH3 0x341 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH3 0x2F5 JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x2F5 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x3A5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x3D5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x3D5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x3D5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x3B8 JUMP JUMPDEST POP PUSH3 0x3E3 SWAP3 SWAP2 POP PUSH3 0x3E7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x3E3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3E8 JUMP JUMPDEST PUSH2 0x2E48 DUP1 PUSH3 0x40E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x172 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x731133E9 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xCA15C873 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE63AB1E9 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0xAE2 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0xAEA JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0xB18 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0xBE1 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH4 0xCA15C873 EQ PUSH2 0xA91 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0xAAE JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xAB6 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH4 0x731133E9 EQ PUSH2 0x928 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x9E8 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x9F0 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0xA2F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0xA5B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xA63 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x672 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x67A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x7ED JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x7F5 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x459 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC13 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x247 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x274 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xD3C SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x4A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xDCF SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1139 JUMP JUMPDEST PUSH2 0x43A PUSH2 0x119A JUMP JUMPDEST PUSH2 0x79D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x6AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x6BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x120B SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7D9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7C1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH2 0x1389 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x80B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x8B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x8EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1393 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x974 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x9A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x140C SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x43A PUSH2 0x147F JUMP JUMPDEST PUSH2 0xA13 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x150D JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x1525 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x152A JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1619 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x1630 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xACC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1654 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x16AD JUMP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0xB2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xB6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xB7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xBA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x16FF SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xBF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x18CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2AF4 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD30 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD05 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD30 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD13 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6D PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x150D JUMP JUMPDEST PUSH2 0xDA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C73 PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB4 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1957 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xE0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D9B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xE54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BF9 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5C PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xE87 JUMPI POP PUSH2 0xE87 DUP6 PUSH2 0xE82 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0xEC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C1E PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xECC PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0xEDC DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BAC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xEF6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF0E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0xF7B DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CAB PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1BBA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xFB2 SWAP1 DUP3 PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP PUSH1 0x1 ADD PUSH2 0xEDF JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1068 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1050 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10A7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x108F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x10CA DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1CAB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x10F0 SWAP1 PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x112B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2AC5 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1135 DUP3 DUP3 PUSH2 0x1F2A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1141 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1190 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DE4 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1135 DUP3 DUP3 PUSH2 0x1F93 JUMP JUMPDEST PUSH2 0x11C6 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x1201 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CD5 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1209 PUSH2 0x1FFC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x124D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D72 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1291 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1381 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x12B7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B1F PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1315 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1339 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x136E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1297 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x139B PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x13C1 JUMPI POP PUSH2 0x13C1 DUP4 PUSH2 0xE82 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x13FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BA0 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1407 DUP4 DUP4 DUP4 PUSH2 0x209A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1438 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x1473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C73 PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB4 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2308 JUMP JUMPDEST PUSH2 0x14AB PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x14E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D10 PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1209 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1506 SWAP1 DUP4 PUSH2 0x248A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1506 SWAP1 DUP4 PUSH2 0x2496 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x153C PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1582 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D49 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x158F PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x15D3 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xC7F SWAP1 PUSH2 0x24AB JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1672 SWAP1 PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x1190 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BC9 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1744 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BF9 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x174C PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1772 JUMPI POP PUSH2 0x1772 DUP6 PUSH2 0xE82 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x17AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BA0 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17B7 PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0x17D7 DUP2 DUP8 DUP8 PUSH2 0x17C8 DUP9 PUSH2 0x24B6 JUMP JUMPDEST PUSH2 0x17D1 DUP9 PUSH2 0x24B6 JUMP JUMPDEST DUP8 PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x181E DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CAB PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1855 SWAP1 DUP5 PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE DUP1 MLOAD DUP11 DUP5 AND SWAP4 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 PUSH2 0x10CA DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x24FA JUMP JUMPDEST PUSH2 0x18D2 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x18F8 JUMPI POP PUSH2 0x18F8 DUP4 PUSH2 0xE82 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x1933 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BA0 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1407 DUP4 DUP4 DUP4 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1506 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x279E JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x199C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DC3 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x19DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D9B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19E6 PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0x19F7 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BAC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1ABB JUMPI PUSH2 0x1A72 PUSH1 0x2 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1A16 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A5C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1C51 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1A82 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SSTORE PUSH1 0x1 ADD PUSH2 0x19FA JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B42 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B2A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B81 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B69 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1BA5 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1CAB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10CA DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x27E8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C0E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BF6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1C3B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1506 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1CBD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x283A JUMP JUMPDEST ISZERO PUSH2 0x10CA JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D4B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D33 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D8A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D72 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DC6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DAE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1DF3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1E3D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x1ED2 JUMPI PUSH2 0x1E49 PUSH2 0x29A1 JUMP JUMPDEST DUP1 PUSH2 0x1E54 JUMPI POP PUSH2 0x1E9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD DUP5 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1C0E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A47 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x1F21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A9D PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1F42 SWAP1 DUP3 PUSH2 0x193E JUMP JUMPDEST ISZERO PUSH2 0x1135 JUMPI PUSH2 0x1F4F PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1FAB SWAP1 DUP3 PUSH2 0x2840 JUMP JUMPDEST ISZERO PUSH2 0x1135 JUMPI PUSH2 0x1FB8 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x204A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x207D PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x20DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C50 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x211F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D9B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2129 PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0x2149 DUP2 DUP6 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BAC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2227 JUMPI PUSH2 0x21DE DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2164 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B50 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x2195 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1BBA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x21EE JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SSTORE PUSH1 0x1 ADD PUSH2 0x214C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22AE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2296 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22ED JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22D5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x234D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DC3 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2357 PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0x2369 DUP2 PUSH1 0x0 DUP8 PUSH2 0x17C8 DUP9 PUSH2 0x24B6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x2396 SWAP1 DUP5 PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP10 DUP2 MSTORE SWAP3 DUP4 ADD DUP9 SWAP1 MSTORE DUP2 MLOAD SWAP1 SWAP5 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 PUSH2 0x1BA5 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x24FA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2454 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x207D PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1506 DUP4 DUP4 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1506 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x28B9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7F DUP3 PUSH2 0x28D1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x24E9 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x250C DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x283A JUMP JUMPDEST ISZERO PUSH2 0x10CA JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x259B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2583 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x25C8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2610 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x260B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x261C JUMPI PUSH2 0x1E49 PUSH2 0x29A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x1F21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A9D PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x26B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C50 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x26BA PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0x26EA DUP2 DUP6 PUSH1 0x0 PUSH2 0x26CC DUP8 PUSH2 0x24B6 JUMP JUMPDEST PUSH2 0x26D5 DUP8 PUSH2 0x24B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x2731 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B50 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP9 DUP2 MSTORE SWAP3 DUP4 ADD DUP8 SWAP1 MSTORE DUP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27AA DUP4 DUP4 PUSH2 0x28B9 JUMP JUMPDEST PUSH2 0x27E0 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xC7F JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x27F6 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x27FE PUSH2 0x1389 JUMP JUMPDEST ISZERO PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B74 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1506 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x28D5 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x2897 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A7B PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x28A6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x2991 JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2908 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2925 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x2955 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xC7F JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x29B1 JUMPI PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY PUSH4 0x8C379A0 PUSH2 0x29C5 DUP3 MLOAD PUSH2 0x299B JUMP JUMPDEST EQ PUSH2 0x29CF JUMPI PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x29FF JUMPI POP POP POP POP PUSH2 0x1390 JUMP JUMPDEST DUP3 DUP5 ADD SWAP3 POP DUP3 MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A19 JUMPI POP POP POP POP PUSH2 0x1390 JUMP JUMPDEST POP RETURNDATASIZE DUP4 ADD PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x2A31 JUMPI POP POP POP PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F206E6F6E20455243313135 CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E6473455243313135353A204552 NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH19 0x656A656374656420746F6B656E734163636573 PUSH20 0x436F6E74726F6C3A2073656E646572206D757374 KECCAK256 PUSH3 0x652061 PUSH15 0x2061646D696E20746F206772616E74 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A2062617463682062 PUSH2 0x6C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A206275726E20616D PUSH16 0x756E7420657863656564732062616C61 PUSH15 0x636545524331313535506175736162 PUSH13 0x653A20746F6B656E207472616E PUSH20 0x666572207768696C652070617573656445524331 BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH4 0x616C6C65 PUSH19 0x206973206E6F74206F776E6572206E6F722061 PUSH17 0x70726F766564416363657373436F6E7472 PUSH16 0x6C3A2073656E646572206D7573742062 PUSH6 0x20616E206164 PUSH14 0x696E20746F207265766F6B654552 NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0x4552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F2061646472657373455243313135355072657365744D696E PUSH21 0x65725061757365723A206D7573742068617665206D PUSH10 0x6E74657220726F6C6520 PUSH21 0x6F206D696E74455243313135353A20696E73756666 PUSH10 0x6369656E742062616C61 PUSH15 0x636520666F72207472616E73666572 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD POP PUSH19 0x657365744D696E7465725061757365723A206D PUSH22 0x737420686176652070617573657220726F6C6520746F KECCAK256 PUSH22 0x6E7061757365455243313135355072657365744D696E PUSH21 0x65725061757365723A206D75737420686176652070 PUSH2 0x7573 PUSH6 0x7220726F6C65 KECCAK256 PUSH21 0x6F207061757365455243313135353A207365747469 PUSH15 0x6720617070726F76616C2073746174 PUSH22 0x7320666F722073656C66455243313135353A20616363 PUSH16 0x756E747320616E6420696473206C656E PUSH8 0x7468206D69736D61 PUSH21 0x6368455243313135353A2069647320616E6420616D PUSH16 0x756E7473206C656E677468206D69736D PUSH2 0x7463 PUSH9 0x455243313135353A20 PUSH14 0x696E7420746F20746865207A6572 PUSH16 0x2061646472657373416363657373436F PUSH15 0x74726F6C3A2063616E206F6E6C7920 PUSH19 0x656E6F756E636520726F6C657320666F722073 PUSH6 0x6C66A2646970 PUSH7 0x73582212209BBB DUP10 0xB1 0xE8 0x4B 0xD8 DUP9 CALLDATALOAD 0xB3 EXTCODEHASH CALLVALUE COINBASE JUMP PUSH11 0x1934D00E567EB1A6F52144 0x21 0xF7 0xBC 0xA9 0xAB DIV PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "55315:2533:0:-:0;;;55692:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;55692:207:0;;;;;;;;;;-1:-1:-1;55692:207:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;55692:207:0;;-1:-1:-1;55738:3:0;;-1:-1:-1;30372:40:0;;-1:-1:-1;;;;30372:18:0;:40::i;:::-;38335:12;38343:3;38335:7;:12::i;:::-;38436:41;-1:-1:-1;;;38436:18:0;:41::i;:::-;38577:54;-1:-1:-1;;;38577:18:0;:54::i;:::-;-1:-1:-1;52412:7:0;:15;;-1:-1:-1;;52412:15:0;;;55753:44:::1;52422:5:::0;55784:12:::1;:10;:12::i;:::-;55753:10;:44::i;:::-;55808:37;55454:24;55832:12;:10;:12::i;55808:37::-;55855;55522:24;55879:12;:10;:12::i;55855:37::-;55692:207:::0;55315:2533;;31103:198;-1:-1:-1;;;;;;31186:25:0;;;;;31178:66;;;;;-1:-1:-1;;;31178:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;31254:33:0;;;;;31290:4;31254:33;;;;;;;;:40;;-1:-1:-1;;31254:40:0;;;;;;31103:198::o;43910:86::-;43976:13;;;;:4;;:13;;;;;:::i;:::-;;43910:86;:::o;14316:104::-;14403:10;14316:104;:::o;21167:110::-;21245:25;21256:4;21262:7;21677:6;:12;;;;;;;;;;;:33;;21702:7;;21677:24;;;;;:33;;:::i;:::-;21673:109;;;21758:12;:10;:12::i;:::-;-1:-1:-1;;;;;21731:40:0;21749:7;-1:-1:-1;;;;;21731:40:0;21743:4;21731:40;;;;;;;;;;21604:184;;:::o;4888:141::-;4958:4;4981:41;4986:3;-1:-1:-1;;;;;5006:14:0;;4981:4;:41::i;:::-;4974:48;;4888:141;;;;;:::o;1635:404::-;1698:4;1719:21;1729:3;1734:5;1719:9;:21::i;:::-;1714:319;;-1:-1:-1;1756:23:0;;;;;;;;:11;:23;;;;;;;;;;;;;1936:18;;1914:19;;;:12;;;:19;;;;;;:40;;;;1968:11;;1714:319;-1:-1:-1;2017:5:0;2010:12;;3800:127;3873:4;3896:19;;;:12;;;;;:19;;;;;;:24;;;3800:127::o;55315:2533::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;55315:2533:0;;;-1:-1:-1;55315:2533:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x172 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x731133E9 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xCA15C873 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE63AB1E9 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0xAE2 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0xAEA JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0xB18 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0xBE1 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH4 0xCA15C873 EQ PUSH2 0xA91 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0xAAE JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0xAB6 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH4 0x731133E9 EQ PUSH2 0x928 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x9E8 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x9F0 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0xA2F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0xA5B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xA63 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x672 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x67A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x7ED JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x7F5 JUMPI PUSH2 0x172 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x459 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC13 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x247 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x274 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xD3C SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x4A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xDCF SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x630 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1139 JUMP JUMPDEST PUSH2 0x43A PUSH2 0x119A JUMP JUMPDEST PUSH2 0x79D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x6AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x6BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x6DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x120B SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7D9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7C1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH2 0x1389 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x80B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x8B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x8C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x8EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1393 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x93E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x974 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x986 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x9A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x140C SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x43A PUSH2 0x147F JUMP JUMPDEST PUSH2 0xA13 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x150D JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x1525 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x152A JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1619 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x1630 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xACC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1654 JUMP JUMPDEST PUSH2 0x1A3 PUSH2 0x16AD JUMP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0xB2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xB6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xB7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xBA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x16FF SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xBF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x18CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2AF4 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD30 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD05 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD30 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD13 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6D PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x150D JUMP JUMPDEST PUSH2 0xDA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C73 PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB4 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1957 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xE0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D9B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xE54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BF9 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE5C PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xE87 JUMPI POP PUSH2 0xE87 DUP6 PUSH2 0xE82 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x16D1 JUMP JUMPDEST PUSH2 0xEC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C1E PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xECC PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0xEDC DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BAC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xFE2 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xEF6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF0E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0xF7B DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CAB PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1BBA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xFB2 SWAP1 DUP3 PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP PUSH1 0x1 ADD PUSH2 0xEDF JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1068 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1050 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10A7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x108F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x10CA DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1CAB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x10F0 SWAP1 PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x112B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2AC5 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1135 DUP3 DUP3 PUSH2 0x1F2A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1141 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1190 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DE4 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1135 DUP3 DUP3 PUSH2 0x1F93 JUMP JUMPDEST PUSH2 0x11C6 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x1201 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2CD5 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1209 PUSH2 0x1FFC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x124D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D72 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1291 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1381 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x12B7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1305 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B1F PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1315 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1339 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x136E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x1297 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x139B PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x13C1 JUMPI POP PUSH2 0x13C1 DUP4 PUSH2 0xE82 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x13FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BA0 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1407 DUP4 DUP4 DUP4 PUSH2 0x209A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1438 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x1473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C73 PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB4 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2308 JUMP JUMPDEST PUSH2 0x14AB PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x14E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D10 PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1209 PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1506 SWAP1 DUP4 PUSH2 0x248A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1506 SWAP1 DUP4 PUSH2 0x2496 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x153C PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1582 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D49 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x158F PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x15D3 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xC7F SWAP1 PUSH2 0x24AB JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1672 SWAP1 PUSH2 0xD68 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x1190 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BC9 PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1744 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BF9 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x174C PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1772 JUMPI POP PUSH2 0x1772 DUP6 PUSH2 0xE82 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x17AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BA0 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17B7 PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0x17D7 DUP2 DUP8 DUP8 PUSH2 0x17C8 DUP9 PUSH2 0x24B6 JUMP JUMPDEST PUSH2 0x17D1 DUP9 PUSH2 0x24B6 JUMP JUMPDEST DUP8 PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x181E DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CAB PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1855 SWAP1 DUP5 PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE SWAP4 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE DUP1 MLOAD DUP11 DUP5 AND SWAP4 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 PUSH2 0x10CA DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x24FA JUMP JUMPDEST PUSH2 0x18D2 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x18F8 JUMPI POP PUSH2 0x18F8 DUP4 PUSH2 0xE82 PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x1933 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2BA0 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1407 DUP4 DUP4 DUP4 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1506 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x279E JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x199C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DC3 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x19DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D9B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19E6 PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0x19F7 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1BAC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1ABB JUMPI PUSH2 0x1A72 PUSH1 0x2 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1A16 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A5C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1C51 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1A82 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SSTORE PUSH1 0x1 ADD PUSH2 0x19FA JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B42 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B2A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B81 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B69 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1BA5 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1CAB JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10CA DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x27E8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1C49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C0E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BF6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1C3B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1506 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1CBD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x283A JUMP JUMPDEST ISZERO PUSH2 0x10CA JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D4B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D33 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D8A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D72 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DC6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DAE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1DF3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1E3D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x1ED2 JUMPI PUSH2 0x1E49 PUSH2 0x29A1 JUMP JUMPDEST DUP1 PUSH2 0x1E54 JUMPI POP PUSH2 0x1E9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD DUP5 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1C0E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1BF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A47 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x1F21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A9D PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1F42 SWAP1 DUP3 PUSH2 0x193E JUMP JUMPDEST ISZERO PUSH2 0x1135 JUMPI PUSH2 0x1F4F PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1FAB SWAP1 DUP3 PUSH2 0x2840 JUMP JUMPDEST ISZERO PUSH2 0x1135 JUMPI PUSH2 0x1FB8 PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x204A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x207D PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x20DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C50 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x211F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D9B PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2129 PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0x2149 DUP2 DUP6 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BAC JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2227 JUMPI PUSH2 0x21DE DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2164 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B50 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x2195 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1BBA SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x21EE JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SSTORE PUSH1 0x1 ADD PUSH2 0x214C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22AE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2296 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP4 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22ED JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22D5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x234D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2DC3 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2357 PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0x2369 DUP2 PUSH1 0x0 DUP8 PUSH2 0x17C8 DUP9 PUSH2 0x24B6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x2396 SWAP1 DUP5 PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP10 DUP2 MSTORE SWAP3 DUP4 ADD DUP9 SWAP1 MSTORE DUP2 MLOAD SWAP1 SWAP5 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 PUSH2 0x1BA5 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x24FA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2454 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x207D PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1506 DUP4 DUP4 PUSH2 0x2855 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1506 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x28B9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7F DUP3 PUSH2 0x28D1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x24E9 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x250C DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x283A JUMP JUMPDEST ISZERO PUSH2 0x10CA JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x259B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2583 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x25C8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2610 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x260B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x261C JUMPI PUSH2 0x1E49 PUSH2 0x29A1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x1F21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A9D PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x26B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C50 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x26BA PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP PUSH2 0x26EA DUP2 DUP6 PUSH1 0x0 PUSH2 0x26CC DUP8 PUSH2 0x24B6 JUMP JUMPDEST PUSH2 0x26D5 DUP8 PUSH2 0x24B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1BAC JUMP JUMPDEST PUSH2 0x2731 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B50 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x1BBA JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE DUP2 MLOAD DUP9 DUP2 MSTORE SWAP3 DUP4 ADD DUP8 SWAP1 MSTORE DUP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 DUP7 AND SWAP3 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27AA DUP4 DUP4 PUSH2 0x28B9 JUMP JUMPDEST PUSH2 0x27E0 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0xC7F JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0x27F6 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x27FE PUSH2 0x1389 JUMP JUMPDEST ISZERO PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2B74 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1506 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x28D5 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x2897 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A7B PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x28A6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x2991 JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2908 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2925 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x2955 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xC7F JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x29B1 JUMPI PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY PUSH4 0x8C379A0 PUSH2 0x29C5 DUP3 MLOAD PUSH2 0x299B JUMP JUMPDEST EQ PUSH2 0x29CF JUMPI PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x29FF JUMPI POP POP POP POP PUSH2 0x1390 JUMP JUMPDEST DUP3 DUP5 ADD SWAP3 POP DUP3 MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2A19 JUMPI POP POP POP POP PUSH2 0x1390 JUMP JUMPDEST POP RETURNDATASIZE DUP4 ADD PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x2A31 JUMPI POP POP POP PUSH2 0x1390 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F206E6F6E20455243313135 CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E6473455243313135353A204552 NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD MSTORE PUSH6 0x636569766572 KECCAK256 PUSH19 0x656A656374656420746F6B656E734163636573 PUSH20 0x436F6E74726F6C3A2073656E646572206D757374 KECCAK256 PUSH3 0x652061 PUSH15 0x2061646D696E20746F206772616E74 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A2062617463682062 PUSH2 0x6C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373455243313135353A206275726E20616D PUSH16 0x756E7420657863656564732062616C61 PUSH15 0x636545524331313535506175736162 PUSH13 0x653A20746F6B656E207472616E PUSH20 0x666572207768696C652070617573656445524331 BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH4 0x616C6C65 PUSH19 0x206973206E6F74206F776E6572206E6F722061 PUSH17 0x70726F766564416363657373436F6E7472 PUSH16 0x6C3A2073656E646572206D7573742062 PUSH6 0x20616E206164 PUSH14 0x696E20746F207265766F6B654552 NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0x4552433131 CALLDATALOAD CALLDATALOAD GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F2061646472657373455243313135355072657365744D696E PUSH21 0x65725061757365723A206D7573742068617665206D PUSH10 0x6E74657220726F6C6520 PUSH21 0x6F206D696E74455243313135353A20696E73756666 PUSH10 0x6369656E742062616C61 PUSH15 0x636520666F72207472616E73666572 GASLIMIT MSTORE NUMBER BALANCE BALANCE CALLDATALOAD CALLDATALOAD POP PUSH19 0x657365744D696E7465725061757365723A206D PUSH22 0x737420686176652070617573657220726F6C6520746F KECCAK256 PUSH22 0x6E7061757365455243313135355072657365744D696E PUSH21 0x65725061757365723A206D75737420686176652070 PUSH2 0x7573 PUSH6 0x7220726F6C65 KECCAK256 PUSH21 0x6F207061757365455243313135353A207365747469 PUSH15 0x6720617070726F76616C2073746174 PUSH22 0x7320666F722073656C66455243313135353A20616363 PUSH16 0x756E747320616E6420696473206C656E PUSH8 0x7468206D69736D61 PUSH21 0x6368455243313135353A2069647320616E6420616D PUSH16 0x756E7473206C656E677468206D69736D PUSH2 0x7463 PUSH9 0x455243313135353A20 PUSH14 0x696E7420746F20746865207A6572 PUSH16 0x2061646472657373416363657373436F PUSH15 0x74726F6C3A2063616E206F6E6C7920 PUSH19 0x656E6F756E636520726F6C657320666F722073 PUSH6 0x6C66A2646970 PUSH7 0x73582212209BBB DUP10 0xB1 0xE8 0x4B 0xD8 DUP9 CALLDATALOAD 0xB3 EXTCODEHASH CALLVALUE COINBASE JUMP PUSH11 0x1934D00E567EB1A6F52144 0x21 0xF7 0xBC 0xA9 0xAB DIV PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "55315:2533:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39276:220;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;39276:220:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;30569:140;;;;;;;;;;;;;;;;-1:-1:-1;30569:140:0;-1:-1:-1;;;;;;30569:140:0;;:::i;:::-;;;;;;;;;;;;;;;;;;39037:97;;;;;;;;;;;;;;;;-1:-1:-1;39037:97:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;56458:278;;;;;;;;;;;;;;;;-1:-1:-1;;;;;56458:278:0;;;;;;;;;;;;;;;-1:-1:-1;;;56458:278:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;56458:278:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;56458:278:0;;;;;;;;-1:-1:-1;56458:278:0;;-1:-1:-1;;;;;56458:278:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;56458:278:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;56458:278:0;;;;;;;;-1:-1:-1;56458:278:0;;-1:-1:-1;;;;;56458:278:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;56458:278:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;56458:278:0;;-1:-1:-1;56458:278:0;;-1:-1:-1;;;;;56458:278:0:i;:::-;;18861:112;;;;;;;;;;;;;;;;-1:-1:-1;18861:112:0;;:::i;41903:1184::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;41903:1184:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;41903:1184:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;41903:1184:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;41903:1184:0;;;;;;;;-1:-1:-1;41903:1184:0;;-1:-1:-1;;;;;41903:1184:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;41903:1184:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;41903:1184:0;;;;;;;;-1:-1:-1;41903:1184:0;;-1:-1:-1;;;;;41903:1184:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;41903:1184:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;41903:1184:0;;-1:-1:-1;41903:1184:0;;-1:-1:-1;;;;;41903:1184:0:i;19223:223::-;;;;;;;;;;;;;;;;-1:-1:-1;19223:223:0;;;;;;-1:-1:-1;;;;;19223:223:0;;:::i;20397:205::-;;;;;;;;;;;;;;;;-1:-1:-1;20397:205:0;;;;;;-1:-1:-1;;;;;20397:205:0;;:::i;57321:177::-;;;:::i;39653:615::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;39653:615:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;39653:615:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39653:615:0;;;;;;;;-1:-1:-1;39653:615:0;;-1:-1:-1;;;;;39653:615:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;39653:615:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39653:615:0;;-1:-1:-1;39653:615:0;;-1:-1:-1;;;;;39653:615:0:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52529:76;;;:::i;51184:312::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;51184:312:0;;;;;;;;;;;;;;;-1:-1:-1;;;51184:312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;51184:312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;51184:312:0;;;;;;;;-1:-1:-1;51184:312:0;;-1:-1:-1;;;;;51184:312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;51184:312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;51184:312:0;;-1:-1:-1;51184:312:0;;-1:-1:-1;;;;;51184:312:0:i;56110:246::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;56110:246:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;56110:246:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;56110:246:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;56110:246:0;;-1:-1:-1;56110:246:0;;-1:-1:-1;;;;;56110:246:0:i;56941:171::-;;;:::i;18544:136::-;;;;;;;;;;;;;;;;-1:-1:-1;18544:136:0;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;18544:136:0;;;;;;;;;;;;;;17529:137;;;;;;;;;;;;;;;;-1:-1:-1;17529:137:0;;;;;;-1:-1:-1;;;;;17529:137:0;;:::i;16306:49::-;;;:::i;40336:306::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;40336:306:0;;;;;;;;;;:::i;17834:125::-;;;;;;;;;;;;;;;;-1:-1:-1;17834:125:0;;:::i;55416:62::-;;;:::i;19680:226::-;;;;;;;;;;;;;;;;-1:-1:-1;19680:226:0;;;;;;-1:-1:-1;;;;;19680:226:0;;:::i;55484:62::-;;;:::i;40709:158::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;40709:158:0;;;;;;;;;;:::i;40934:897::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;40934:897:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;40934:897:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;40934:897:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;40934:897:0;;-1:-1:-1;40934:897:0;;-1:-1:-1;;;;;40934:897:0:i;50898:280::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;50898:280:0;;;;;;;;;;;;;:::i;39276:220::-;39354:7;-1:-1:-1;;;;;39381:21:0;;39373:77;;;;-1:-1:-1;;;39373:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39467:13:0;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;39467:22:0;;;;;;;;;;39276:220;;;;;:::o;30569:140::-;-1:-1:-1;;;;;;30669:33:0;30646:4;30669:33;;;:20;:33;;;;;;;;;30569:140::o;39037:97::-;39123:4;39116:11;;;;;;;;-1:-1:-1;;39116:11:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39091:13;;39116:11;;39123:4;;39116:11;;39123:4;39116:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39037:97;;;:::o;56458:278::-;56589:34;55454:24;56610:12;:10;:12::i;:::-;56589:7;:34::i;:::-;56581:103;;;;-1:-1:-1;;;56581:103:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;56695:34;56706:2;56710:3;56715:7;56724:4;56695:10;:34::i;:::-;56458:278;;;;:::o;18861:112::-;18918:7;18944:12;;;;;;;;;;:22;;;;18861:112::o;41903:1184::-;42157:7;:14;42143:3;:10;:28;42135:81;;;;-1:-1:-1;;;42135:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;42234:16:0;;42226:66;;;;-1:-1:-1;;;42226:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42331:12;:10;:12::i;:::-;-1:-1:-1;;;;;42323:20:0;:4;-1:-1:-1;;;;;42323:20:0;;:60;;;;42347:36;42364:4;42370:12;:10;:12::i;:::-;42347:16;:36::i;:::-;42302:157;;;;-1:-1:-1;;;42302:157:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42470:16;42489:12;:10;:12::i;:::-;42470:31;;42512:60;42533:8;42543:4;42549:2;42553:3;42558:7;42567:4;42512:20;:60::i;:::-;42588:9;42583:349;42607:3;:10;42603:1;:14;42583:349;;;42638:10;42651:3;42655:1;42651:6;;;;;;;;;;;;;;42638:19;;42671:14;42688:7;42696:1;42688:10;;;;;;;;;;;;;;42671:27;;42735:123;42776:6;42735:123;;;;;;;;;;;;;;;;;:9;:13;42745:2;42735:13;;;;;;;;;;;:19;42749:4;-1:-1:-1;;;;;42735:19:0;-1:-1:-1;;;;;42735:19:0;;;;;;;;;;;;;:23;;:123;;;;;:::i;:::-;42713:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;42713:19:0;;;;;;;;;;:145;;;;42892:17;;;;;;:29;;42914:6;42892:21;:29::i;:::-;42872:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;42872:17:0;;;;;;;;;;:49;;;;-1:-1:-1;42619:3:0;;42583:349;;;;42977:2;-1:-1:-1;;;;;42947:47:0;42971:4;-1:-1:-1;;;;;42947:47:0;42961:8;-1:-1:-1;;;;;42947:47:0;;42981:3;42986:7;42947:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43005:75;43041:8;43051:4;43057:2;43061:3;43066:7;43075:4;43005:35;:75::i;:::-;41903:1184;;;;;;:::o;19223:223::-;19314:6;:12;;;;;;;;;;:22;;;19306:45;;19338:12;:10;:12::i;19306:45::-;19298:105;;;;-1:-1:-1;;;19298:105:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19414:25;19425:4;19431:7;19414:10;:25::i;:::-;19223:223;;:::o;20397:205::-;20494:12;:10;:12::i;:::-;-1:-1:-1;;;;;20483:23:0;:7;-1:-1:-1;;;;;20483:23:0;;20475:83;;;;-1:-1:-1;;;20475:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20569:26;20581:4;20587:7;20569:11;:26::i;57321:177::-;57373:34;55522:24;57394:12;:10;:12::i;57373:34::-;57365:106;;;;-1:-1:-1;;;57365:106:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;57481:10;:8;:10::i;:::-;57321:177::o;39653:615::-;39810:16;39869:3;:10;39850:8;:15;:29;39842:83;;;;-1:-1:-1;;;39842:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39936:30;39983:8;:15;39969:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39969:30:0;;39936:63;;40015:9;40010:221;40034:8;:15;40030:1;:19;40010:221;;;40101:1;-1:-1:-1;;;;;40078:25:0;:8;40087:1;40078:11;;;;;;;;;;;;;;-1:-1:-1;;;;;40078:25:0;;;40070:87;;;;-1:-1:-1;;;40070:87:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40190:9;:17;40200:3;40204:1;40200:6;;;;;;;;;;;;;;40190:17;;;;;;;;;;;:30;40208:8;40217:1;40208:11;;;;;;;;;;;;;;-1:-1:-1;;;;;40190:30:0;-1:-1:-1;;;;;40190:30:0;;;;;;;;;;;;;40171:13;40185:1;40171:16;;;;;;;;;;;;;;;;;:49;40051:3;;40010:221;;;-1:-1:-1;40248:13:0;39653:615;-1:-1:-1;;;39653:615:0:o;52529:76::-;52591:7;;;;52529:76;;:::o;51184:312::-;51324:12;:10;:12::i;:::-;-1:-1:-1;;;;;51313:23:0;:7;-1:-1:-1;;;;;51313:23:0;;:66;;;;51340:39;51357:7;51366:12;:10;:12::i;51340:39::-;51292:154;;;;-1:-1:-1;;;51292:154:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51457:32;51468:7;51477:3;51482:6;51457:10;:32::i;:::-;51184:312;;;:::o;56110:246::-;56216:34;55454:24;56237:12;:10;:12::i;56216:34::-;56208:103;;;;-1:-1:-1;;;56208:103:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;56322:27;56328:2;56332;56336:6;56344:4;56322:5;:27::i;56941:171::-;56991:34;55522:24;57012:12;:10;:12::i;56991:34::-;56983:104;;;;-1:-1:-1;;;56983:104:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;57097:8;:6;:8::i;18544:136::-;18617:7;18643:12;;;;;;;;;;:30;;18667:5;18643:23;:30::i;:::-;18636:37;18544:136;-1:-1:-1;;;18544:136:0:o;17529:137::-;17598:4;17621:12;;;;;;;;;;:38;;17651:7;17621:29;:38::i;16306:49::-;16351:4;16306:49;:::o;40336:306::-;40454:8;-1:-1:-1;;;;;40438:24:0;:12;:10;:12::i;:::-;-1:-1:-1;;;;;40438:24:0;;;40430:78;;;;-1:-1:-1;;;40430:78:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40564:8;40519:18;:32;40538:12;:10;:12::i;:::-;-1:-1:-1;;;;;40519:32:0;;;;;;;;;;;;;;;;;-1:-1:-1;40519:32:0;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;40519:53:0;;;;;;;;;;;40602:12;:10;:12::i;:::-;-1:-1:-1;;;;;40587:48:0;;40626:8;40587:48;;;;;;;;;;;;;;;;;;;;40336:306;;:::o;17834:125::-;17897:7;17923:12;;;;;;;;;;:29;;:27;:29::i;55416:62::-;55454:24;55416:62;:::o;19680:226::-;19772:6;:12;;;;;;;;;;:22;;;19764:45;;19796:12;:10;:12::i;19764:45::-;19756:106;;;;-1:-1:-1;;;19756:106:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55484:62;55522:24;55484:62;:::o;40709:158::-;-1:-1:-1;;;;;40823:27:0;;;40800:4;40823:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;40709:158::o;40934:897::-;-1:-1:-1;;;;;41149:16:0;;41141:66;;;;-1:-1:-1;;;41141:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41246:12;:10;:12::i;:::-;-1:-1:-1;;;;;41238:20:0;:4;-1:-1:-1;;;;;41238:20:0;;:60;;;;41262:36;41279:4;41285:12;:10;:12::i;41262:36::-;41217:148;;;;-1:-1:-1;;;41217:148:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41376:16;41395:12;:10;:12::i;:::-;41376:31;;41418:96;41439:8;41449:4;41455:2;41459:21;41477:2;41459:17;:21::i;:::-;41482:25;41500:6;41482:17;:25::i;:::-;41509:4;41418:20;:96::i;:::-;41547:77;41571:6;41547:77;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;41547:19:0;;;;;;;;;;;:77;:23;:77::i;:::-;41525:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;41525:19:0;;;;;;;;;;:99;;;;41654:17;;;;;;:29;;41676:6;41654:21;:29::i;:::-;41634:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;41634:17:0;;;;;;;;;;;;;:49;;;;41699:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41756:68;41787:8;41797:4;41803:2;41807;41811:6;41819:4;41756:30;:68::i;50898:280::-;51013:12;:10;:12::i;:::-;-1:-1:-1;;;;;51002:23:0;:7;-1:-1:-1;;;;;51002:23:0;;:66;;;;51029:39;51046:7;51055:12;:10;:12::i;51029:39::-;50981:154;;;;-1:-1:-1;;;50981:154:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51146:25;51152:7;51161:2;51165:5;51146;:25::i;4888:141::-;4958:4;4981:41;4986:3;-1:-1:-1;;;;;5006:14:0;;4981:4;:41::i;14316:104::-;14403:10;14316:104;:::o;45296:700::-;-1:-1:-1;;;;;45430:16:0;;45422:62;;;;-1:-1:-1;;;45422:62:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45516:7;:14;45502:3;:10;:28;45494:81;;;;-1:-1:-1;;;45494:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45586:16;45605:12;:10;:12::i;:::-;45586:31;;45628:66;45649:8;45667:1;45671:2;45675:3;45680:7;45689:4;45628:20;:66::i;:::-;45710:6;45705:124;45726:3;:10;45722:1;:14;45705:124;;;45781:37;45796:9;:17;45806:3;45810:1;45806:6;;;;;;;;;;;;;;45796:17;;;;;;;;;;;:21;45814:2;-1:-1:-1;;;;;45796:21:0;-1:-1:-1;;;;;45796:21:0;;;;;;;;;;;;;45781:7;45789:1;45781:10;;;;;;;;;;;;;;:14;;:37;;;;:::i;:::-;45757:9;:17;45767:3;45771:1;45767:6;;;;;;;;;;;;;;;;;;;45757:17;;;;;;;;;;;;;-1:-1:-1;45757:17:0;;;-1:-1:-1;;;;;45757:21:0;;;;;;;;;:61;45738:3;;45705:124;;;;45880:2;-1:-1:-1;;;;;45844:53:0;45876:1;-1:-1:-1;;;;;45844:53:0;45858:8;-1:-1:-1;;;;;45844:53:0;;45884:3;45889:7;45844:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45908:81;45944:8;45962:1;45966:2;45970:3;45975:7;45984:4;45908:35;:81::i;:::-;45296:700;;;;;:::o;57504:342::-;57773:66;57800:8;57810:4;57816:2;57820:3;57825:7;57834:4;57773:26;:66::i;33068:187::-;33154:7;33189:12;33181:6;;;;33173:29;;;;-1:-1:-1;;;33173:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;33224:5:0;;;33068:187::o;32196:176::-;32254:7;32285:5;;;32308:6;;;;32300:46;;;;;-1:-1:-1;;;32300:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;49596:778;49840:15;:2;-1:-1:-1;;;;;49840:13:0;;:15::i;:::-;49836:532;;;49892:2;-1:-1:-1;;;;;49875:43:0;;49919:8;49929:4;49935:3;49940:7;49949:4;49875:79;;;;;;;;;;;;;-1:-1:-1;;;;;49875:79:0;;;;;;-1:-1:-1;;;;;49875:79:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;49875:79:0;;;49871:487;;;;:::i;:::-;;;;;;;;50227:14;;-1:-1:-1;;;50227:14:0;;;;;;;;;;;;;;;;;50234:6;;50227:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49871:487;50281:62;;-1:-1:-1;;;50281:62:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49871:487;-1:-1:-1;;;;;;50003:64:0;;-1:-1:-1;;;50003:64:0;49999:161;;50091:50;;-1:-1:-1;;;50091:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49999:161;49955:219;49596:778;;;;;;:::o;21604:184::-;21677:6;:12;;;;;;;;;;:33;;21702:7;21677:24;:33::i;:::-;21673:109;;;21758:12;:10;:12::i;:::-;-1:-1:-1;;;;;21731:40:0;21749:7;-1:-1:-1;;;;;21731:40:0;21743:4;21731:40;;;;;;;;;;21604:184;;:::o;21794:188::-;21868:6;:12;;;;;;;;;;:36;;21896:7;21868:27;:36::i;:::-;21864:112;;;21952:12;:10;:12::i;:::-;-1:-1:-1;;;;;21925:40:0;21943:7;-1:-1:-1;;;;;21925:40:0;21937:4;21925:40;;;;;;;;;;21794:188;;:::o;53531:117::-;53099:7;;;;53091:40;;;;;-1:-1:-1;;;53091:40:0;;;;;;;;;;;;-1:-1:-1;;;53091:40:0;;;;;;;;;;;;;;;53589:7:::1;:15:::0;;-1:-1:-1;;53589:15:0::1;::::0;;53619:22:::1;53628:12;:10;:12::i;:::-;53619:22;::::0;;-1:-1:-1;;;;;53619:22:0;;::::1;::::0;;;;;;;::::1;::::0;;::::1;53531:117::o:0;46977:705::-;-1:-1:-1;;;;;47097:21:0;;47089:69;;;;-1:-1:-1;;;47089:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47190:7;:14;47176:3;:10;:28;47168:81;;;;-1:-1:-1;;;47168:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47260:16;47279:12;:10;:12::i;:::-;47260:31;;47302:69;47323:8;47333:7;47350:1;47354:3;47359:7;47302:69;;;;;;;;;;;;:20;:69::i;:::-;47387:6;47382:220;47403:3;:10;47399:1;:14;47382:220;;;47463:128;47511:7;47519:1;47511:10;;;;;;;;;;;;;;47463:128;;;;;;;;;;;;;;;;;:9;:17;47473:3;47477:1;47473:6;;;;;;;;;;;;;;47463:17;;;;;;;;;;;:26;47481:7;-1:-1:-1;;;;;47463:26:0;-1:-1:-1;;;;;47463:26:0;;;;;;;;;;;;;:30;;:128;;;;;:::i;:::-;47434:9;:17;47444:3;47448:1;47444:6;;;;;;;;;;;;;;;;;;;47434:17;;;;;;;;;;;;;-1:-1:-1;47434:17:0;;;-1:-1:-1;;;;;47434:26:0;;;;;;;;;:157;47415:3;;47382:220;;;;47658:1;-1:-1:-1;;;;;47617:58:0;47641:7;-1:-1:-1;;;;;47617:58:0;47631:8;-1:-1:-1;;;;;47617:58:0;;47662:3;47667:7;47617:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46977:705;;;;:::o;44379:572::-;-1:-1:-1;;;;;44493:21:0;;44485:67;;;;-1:-1:-1;;;44485:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44563:16;44582:12;:10;:12::i;:::-;44563:31;;44605:107;44626:8;44644:1;44648:7;44657:21;44675:2;44657:17;:21::i;44605:107::-;44748:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;44748:22:0;;;;;;;;;;:34;;44775:6;44748:26;:34::i;:::-;44723:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;44723:22:0;;;;;;;;;;;;:59;;;;44797:57;;;;;;;;;;;;;44723:22;;44797:57;;;;;;;;;;;;44865:79;44896:8;44914:1;44918:7;44927:2;44931:6;44939:4;44865:30;:79::i;53284:115::-;52835:7;;;;52834:8;52826:37;;;;;-1:-1:-1;;;52826:37:0;;;;;;;;;;;;-1:-1:-1;;;52826:37:0;;;;;;;;;;;;;;;53343:7:::1;:14:::0;;-1:-1:-1;;53343:14:0::1;53353:4;53343:14;::::0;;53372:20:::1;53379:12;:10;:12::i;6109:147::-:0;6183:7;6225:22;6229:3;6241:5;6225:3;:22::i;5425:156::-;5505:4;5528:46;5538:3;-1:-1:-1;;;;;5558:14:0;;5528:9;:46::i;5662:115::-;5725:7;5751:19;5759:3;5751:7;:19::i;50380:193::-;50499:16;;;50513:1;50499:16;;;;;;;;;50446;;;;50499;;;;;;;;;;;;-1:-1:-1;50499:16:0;50474:41;;50536:7;50525:5;50531:1;50525:8;;;;;;;;;;;;;;;;;:18;50561:5;50380:193;-1:-1:-1;;50380:193:0:o;48849:741::-;49068:15;:2;-1:-1:-1;;;;;49068:13:0;;:15::i;:::-;49064:520;;;49120:2;-1:-1:-1;;;;;49103:38:0;;49142:8;49152:4;49158:2;49162:6;49170:4;49103:72;;;;;;;;;;;;;-1:-1:-1;;;;;49103:72:0;;;;;;-1:-1:-1;;;;;49103:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;49103:72:0;;;49099:475;;;;:::i;:::-;-1:-1:-1;;;;;;49224:59:0;;-1:-1:-1;;;49224:59:0;49220:156;;49307:50;;-1:-1:-1;;;49307:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46245:538;-1:-1:-1;;;;;46340:21:0;;46332:69;;;;-1:-1:-1;;;46332:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46412:16;46431:12;:10;:12::i;:::-;46412:31;;46454:105;46475:8;46485:7;46502:1;46506:21;46524:2;46506:17;:21::i;:::-;46529:25;46547:6;46529:17;:25::i;:::-;46454:105;;;;;;;;;;;;:20;:105::i;:::-;46595:108;46635:6;46595:108;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;46595:22:0;;;;;;;;;;;:108;:26;:108::i;:::-;46570:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;46570:22:0;;;;;;;;;;;;:133;;;;46719:57;;;;;;;;;;;;;46570:13;;:22;;46719:57;;;;;;;;;;;;;46245:538;;;;:::o;1635:404::-;1698:4;1719:21;1729:3;1734:5;1719:9;:21::i;:::-;1714:319;;-1:-1:-1;1756:23:0;;;;;;;;:11;:23;;;;;;;;;;;;;1936:18;;1914:19;;;:12;;;:19;;;;;;:40;;;;1968:11;;1714:319;-1:-1:-1;2017:5:0;2010:12;;54249:393;54492:66;54519:8;54529:4;54535:2;54539:3;54544:7;54553:4;54492:26;:66::i;:::-;54578:8;:6;:8::i;:::-;54577:9;54569:66;;;;-1:-1:-1;;;54569:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8547:413;8907:20;8945:8;;;8547:413::o;5197:147::-;5270:4;5293:44;5301:3;-1:-1:-1;;;;;5321:14:0;;5293:7;:44::i;4447:201::-;4541:18;;4514:7;;4541:26;-1:-1:-1;4533:73:0;;;;-1:-1:-1;;;4533:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4623:3;:11;;4635:5;4623:18;;;;;;;;;;;;;;;;4616:25;;4447:201;;;;:::o;3800:127::-;3873:4;3896:19;;;:12;;;;;:19;;;;;;:24;;;3800:127::o;4008:107::-;4090:18;;4008:107::o;2207:1512::-;2273:4;2410:19;;;:12;;;:19;;;;;;2444:15;;2440:1273;;2873:18;;-1:-1:-1;;2825:14:0;;;;2873:22;;;;2801:21;;2873:3;;:22;;3155;;;;;;;;;;;;;;3135:42;;3298:9;3269:3;:11;;3281:13;3269:26;;;;;;;;;;;;;;;;;;;:38;;;;3373:23;;;3415:1;3373:12;;;:23;;;;;;3399:17;;;3373:43;;3522:17;;3373:3;;3522:17;;;;;;;;;;;;;;;;;;;;;;3614:3;:12;;:19;3627:5;3614:19;;;;;;;;;;;3607:26;;;3655:4;3648:11;;;;;;;;2440:1273;3697:5;3690:12;;;;;110:106:-1;195:3;191:15;;163:53::o;224:739::-;;297:4;279:16;276:26;273:2;;;305:5;;273:2;339:1;-1:-1;;318:23;414:10;357:34;-1:-1;382:8;357:34;:::i;:::-;406:19;396:2;;429:5;;396:2;460;454:9;496:16;-1:-1;;492:24;339:1;454:9;468:49;543:4;537:11;624:16;576:18;624:16;617:4;609:6;605:17;602:39;576:18;568:6;565:30;556:91;553:2;;;655:5;;;;;;553:2;693:6;687:4;683:17;672:28;;725:3;719:10;705:24;;576:18;740:6;737:30;734:2;;;770:5;;;;;;734:2;;847:16;841:4;837:27;807:4;814:6;802:3;794:27;;829:36;826:2;;;868:5;;;;;826:2;89:7;73:14;-1:-1;;69:28;892:50;;807:4;892:50;460:2;881:62;900:3;-1:-1;;267:696;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2369600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "309",
								"MINTER_ROLE()": "265",
								"PAUSER_ROLE()": "242",
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"burn(address,uint256,uint256)": "infinite",
								"burnBatch(address,uint256[],uint256[])": "infinite",
								"getRoleAdmin(bytes32)": "1227",
								"getRoleMember(bytes32,uint256)": "infinite",
								"getRoleMemberCount(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "infinite",
								"isApprovedForAll(address,address)": "1328",
								"mint(address,uint256,uint256,bytes)": "infinite",
								"mintBatch(address,uint256[],uint256[],bytes)": "infinite",
								"pause()": "infinite",
								"paused()": "1122",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "1206",
								"unpause()": "infinite",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 55738,
									"end": 55741,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55738,
									"end": 55741,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 30372,
									"end": 30412,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 30372,
									"end": 30412,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1FFC9A7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 30372,
									"end": 30390,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 30372,
									"end": 30412,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 30372,
									"end": 30412,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 30372,
									"end": 30412,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38335,
									"end": 38347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 38343,
									"end": 38346,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 38335,
									"end": 38342,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 38335,
									"end": 38347,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 38335,
									"end": 38347,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 38335,
									"end": 38347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38436,
									"end": 38477,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6CDB3D13"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 38436,
									"end": 38454,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 38436,
									"end": 38477,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 38436,
									"end": 38477,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 38436,
									"end": 38477,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 38577,
									"end": 38631,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "3A24D07"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 38577,
									"end": 38595,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 38577,
									"end": 38631,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 38577,
									"end": 38631,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 38577,
									"end": 38631,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 52412,
									"end": 52419,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 52412,
									"end": 52427,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 52412,
									"end": 52427,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 52412,
									"end": 52427,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 52412,
									"end": 52427,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 52412,
									"end": 52427,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 55753,
									"end": 55797,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 52422,
									"end": 52427,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55784,
									"end": 55796,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 55784,
									"end": 55794,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 55784,
									"end": 55796,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 55784,
									"end": 55796,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 55784,
									"end": 55796,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55753,
									"end": 55763,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 55753,
									"end": 55797,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 55753,
									"end": 55797,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 55753,
									"end": 55797,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55808,
									"end": 55845,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 55454,
									"end": 55478,
									"name": "PUSH",
									"source": 0,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 55832,
									"end": 55844,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 55832,
									"end": 55842,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 55832,
									"end": 55844,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 55808,
									"end": 55845,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 55808,
									"end": 55845,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55855,
									"end": 55892,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 55522,
									"end": 55546,
									"name": "PUSH",
									"source": 0,
									"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
								},
								{
									"begin": 55879,
									"end": 55891,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 55879,
									"end": 55889,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 55879,
									"end": 55891,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 55855,
									"end": 55892,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 55855,
									"end": 55892,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55692,
									"end": 55899,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 31103,
									"end": 31301,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 31103,
									"end": 31301,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 31186,
									"end": 31211,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31186,
									"end": 31211,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31186,
									"end": 31211,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31186,
									"end": 31211,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 31186,
									"end": 31211,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "PUSH",
									"source": 0,
									"value": "1C"
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "PUSH",
									"source": 0,
									"value": "4552433136353A20696E76616C696420696E7465726661636520696400000000"
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 31178,
									"end": 31244,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31290,
									"end": 31294,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31287,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31294,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31294,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 31254,
									"end": 31294,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31294,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31294,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31294,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31294,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 31254,
									"end": 31294,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 31103,
									"end": 31301,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 43910,
									"end": 43996,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 43910,
									"end": 43996,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43976,
									"end": 43980,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 43976,
									"end": 43980,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43976,
									"end": 43989,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43910,
									"end": 43996,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 43910,
									"end": 43996,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14316,
									"end": 14420,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 14316,
									"end": 14420,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14403,
									"end": 14413,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 14316,
									"end": 14420,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14316,
									"end": 14420,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 21167,
									"end": 21277,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 21167,
									"end": 21277,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21245,
									"end": 21270,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 21256,
									"end": 21260,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21262,
									"end": 21269,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21677,
									"end": 21683,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 21677,
									"end": 21689,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21677,
									"end": 21689,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21677,
									"end": 21689,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21677,
									"end": 21689,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 21677,
									"end": 21689,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21677,
									"end": 21689,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 21677,
									"end": 21689,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 21677,
									"end": 21689,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21677,
									"end": 21689,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21677,
									"end": 21689,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21677,
									"end": 21689,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 21677,
									"end": 21710,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 21677,
									"end": 21710,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21702,
									"end": 21709,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 21702,
									"end": 21709,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21677,
									"end": 21701,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551760"
								},
								{
									"begin": 21677,
									"end": 21701,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 21677,
									"end": 21701,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 21677,
									"end": 21701,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 21677,
									"end": 21701,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 21677,
									"end": 21710,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21677,
									"end": 21710,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 21677,
									"end": 21710,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 21677,
									"end": 21710,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 21677,
									"end": 21710,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 21673,
									"end": 21782,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 21673,
									"end": 21782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 21673,
									"end": 21782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 21758,
									"end": 21770,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 21758,
									"end": 21768,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 21758,
									"end": 21770,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 21758,
									"end": 21770,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 21758,
									"end": 21770,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 21731,
									"end": 21771,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21749,
									"end": 21756,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 21731,
									"end": 21771,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 21743,
									"end": 21747,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 21731,
									"end": 21771,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 21731,
									"end": 21771,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21731,
									"end": 21771,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21731,
									"end": 21771,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 21731,
									"end": 21771,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 21731,
									"end": 21771,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 21731,
									"end": 21771,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 21731,
									"end": 21771,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 21731,
									"end": 21771,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 21731,
									"end": 21771,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 21604,
									"end": 21788,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21604,
									"end": 21788,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 21604,
									"end": 21788,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 4888,
									"end": 5029,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 4888,
									"end": 5029,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4958,
									"end": 4962,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4981,
									"end": 5022,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 4986,
									"end": 4989,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5006,
									"end": 5020,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 5006,
									"end": 5020,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4981,
									"end": 4985,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 4981,
									"end": 5022,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 4981,
									"end": 5022,
									"name": "tag",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 4981,
									"end": 5022,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4974,
									"end": 5022,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4974,
									"end": 5022,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4888,
									"end": 5029,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 4888,
									"end": 5029,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4888,
									"end": 5029,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 4888,
									"end": 5029,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4888,
									"end": 5029,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4888,
									"end": 5029,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4888,
									"end": 5029,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1635,
									"end": 2039,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 1635,
									"end": 2039,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1698,
									"end": 1702,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1719,
									"end": 1740,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 1729,
									"end": 1732,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1734,
									"end": 1739,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1719,
									"end": 1728,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 1719,
									"end": 1740,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1719,
									"end": 1740,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 1719,
									"end": 1740,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1714,
									"end": 2033,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 1714,
									"end": 2033,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1756,
									"end": 1767,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1756,
									"end": 1779,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1936,
									"end": 1954,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1936,
									"end": 1954,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1914,
									"end": 1933,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1914,
									"end": 1933,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1914,
									"end": 1933,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1914,
									"end": 1926,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1914,
									"end": 1926,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 1914,
									"end": 1926,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1914,
									"end": 1933,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1914,
									"end": 1933,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1914,
									"end": 1933,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1914,
									"end": 1933,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1914,
									"end": 1933,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1914,
									"end": 1933,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1914,
									"end": 1954,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1914,
									"end": 1954,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1914,
									"end": 1954,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1914,
									"end": 1954,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1968,
									"end": 1979,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 1968,
									"end": 1979,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1714,
									"end": 2033,
									"name": "tag",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 1714,
									"end": 2033,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2017,
									"end": 2022,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2010,
									"end": 2022,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 2010,
									"end": 2022,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3800,
									"end": 3927,
									"name": "tag",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 3800,
									"end": 3927,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3873,
									"end": 3877,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3896,
									"end": 3915,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 3915,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 3915,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 3908,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3896,
									"end": 3908,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 3908,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 3908,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 3908,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 3915,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3896,
									"end": 3915,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 3915,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3896,
									"end": 3915,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 3915,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 3915,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 3920,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 3920,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3896,
									"end": 3920,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3800,
									"end": 3927,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "tag",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "tag",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "tag",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "62"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "tag",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "tag",
									"source": 0,
									"value": "62"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "tag",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55315,
									"end": 57848,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209bbb89b1e84bd88835b33f3441566a1934d00e567eb1a6f5214421f7bca9ab0464736f6c634300060c0033",
									".code": [
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "731133E9"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "CA15C873"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "E63AB1E9"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "E63AB1E9"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "F5298ACA"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "CA15C873"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "D5391393"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "731133E9"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "9010D07C"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "6B20C454"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "1F7FDFFA"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55315,
											"end": 57848,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57321,
											"end": 57498,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 57321,
											"end": 57498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57321,
											"end": 57498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 57321,
											"end": 57498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 57321,
											"end": 57498,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 52529,
											"end": 52605,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 52529,
											"end": 52605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52529,
											"end": 52605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 52529,
											"end": 52605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 52529,
											"end": 52605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56941,
											"end": 57112,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 56941,
											"end": 57112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56941,
											"end": 57112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 56941,
											"end": 57112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 56941,
											"end": 57112,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16306,
											"end": 16355,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 16306,
											"end": 16355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 16306,
											"end": 16355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 16306,
											"end": 16355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55416,
											"end": 55478,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 55416,
											"end": 55478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55416,
											"end": 55478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 55416,
											"end": 55478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 55416,
											"end": 55478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55484,
											"end": 55546,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 55484,
											"end": 55546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55484,
											"end": 55546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 55484,
											"end": 55546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 55484,
											"end": 55546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "GT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39354,
											"end": 39361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39381,
											"end": 39402,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39381,
											"end": 39402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "PUSH",
											"source": 0,
											"value": "2B"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "PUSH data",
											"source": 0,
											"value": "1F4DE6A436172E7F7B1540476031CB037FC18EDE9CC346A56DA1697CBD352AA9"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "PUSH",
											"source": 0,
											"value": "2B"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 39373,
											"end": 39450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39476,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39480,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39467,
											"end": 39489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39276,
											"end": 39496,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30646,
											"end": 30650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30689,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30669,
											"end": 30702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30709,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39123,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39091,
											"end": 39104,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 39091,
											"end": 39104,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39123,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39123,
											"end": 39127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39123,
											"end": 39127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39116,
											"end": 39127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39134,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56589,
											"end": 56623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 55454,
											"end": 55478,
											"name": "PUSH",
											"source": 0,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 56610,
											"end": 56622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 56610,
											"end": 56620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 56610,
											"end": 56622,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56610,
											"end": 56622,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 56610,
											"end": 56622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56589,
											"end": 56596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 56589,
											"end": 56623,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56589,
											"end": 56623,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 56589,
											"end": 56623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "PUSH data",
											"source": 0,
											"value": "8955910BE8371DDA281E80FA38D092164791CCBD984AAA07B76276BEF2682E9C"
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 56581,
											"end": 56684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56695,
											"end": 56729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 56706,
											"end": 56708,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56710,
											"end": 56713,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56715,
											"end": 56722,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56724,
											"end": 56728,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56695,
											"end": 56705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 56695,
											"end": 56729,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56695,
											"end": 56729,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 56695,
											"end": 56729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56458,
											"end": 56736,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18918,
											"end": 18925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18944,
											"end": 18956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18944,
											"end": 18956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18944,
											"end": 18956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18944,
											"end": 18956,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18944,
											"end": 18956,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18944,
											"end": 18956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18944,
											"end": 18956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18944,
											"end": 18956,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18944,
											"end": 18956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18944,
											"end": 18956,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18944,
											"end": 18966,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18944,
											"end": 18966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18944,
											"end": 18966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18944,
											"end": 18966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18861,
											"end": 18973,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42157,
											"end": 42164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42157,
											"end": 42171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42143,
											"end": 42146,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42143,
											"end": 42153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42143,
											"end": 42171,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "PUSH data",
											"source": 0,
											"value": "E909E0C9A8F96B4F9AF03B716811ECE20BEB070BE416893ED1D50619B5930807"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 42135,
											"end": 42216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42234,
											"end": 42250,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42234,
											"end": 42250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "PUSH data",
											"source": 0,
											"value": "6FAF1C67F278B07C6771DCF4C315A89C21C0EAED11D9AB3D51774DA1CFEF545D"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 42226,
											"end": 42292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42331,
											"end": 42343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 42331,
											"end": 42341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 42331,
											"end": 42343,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42331,
											"end": 42343,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 42331,
											"end": 42343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42323,
											"end": 42343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42323,
											"end": 42327,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42323,
											"end": 42343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42323,
											"end": 42343,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42323,
											"end": 42383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42323,
											"end": 42383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 42323,
											"end": 42383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42323,
											"end": 42383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42347,
											"end": 42383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 42364,
											"end": 42368,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42370,
											"end": 42382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 42370,
											"end": 42380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 42370,
											"end": 42382,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42370,
											"end": 42382,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 42370,
											"end": 42382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42347,
											"end": 42363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 42347,
											"end": 42383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42347,
											"end": 42383,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 42347,
											"end": 42383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "PUSH data",
											"source": 0,
											"value": "70A41C66829F5508884CDA9EF3D2F72551B34F23E4035BE97941681123D2D686"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 42302,
											"end": 42459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42470,
											"end": 42486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42489,
											"end": 42501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 42489,
											"end": 42499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 42489,
											"end": 42501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42489,
											"end": 42501,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 42489,
											"end": 42501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42470,
											"end": 42501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42470,
											"end": 42501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 42533,
											"end": 42541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42543,
											"end": 42547,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 42549,
											"end": 42551,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 42553,
											"end": 42556,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 42558,
											"end": 42565,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 42567,
											"end": 42571,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 42512,
											"end": 42572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42512,
											"end": 42572,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 42512,
											"end": 42572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42588,
											"end": 42597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42583,
											"end": 42932,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 42583,
											"end": 42932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42607,
											"end": 42610,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42607,
											"end": 42617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42603,
											"end": 42604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42603,
											"end": 42617,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42583,
											"end": 42932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42583,
											"end": 42932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 42583,
											"end": 42932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42638,
											"end": 42648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42651,
											"end": 42654,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42655,
											"end": 42656,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42651,
											"end": 42657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42638,
											"end": 42657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42638,
											"end": 42657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42671,
											"end": 42685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42688,
											"end": 42695,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42696,
											"end": 42697,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 42698,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42671,
											"end": 42698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42671,
											"end": 42698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 42776,
											"end": 42782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "PUSH data",
											"source": 0,
											"value": "8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF"
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42744,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42745,
											"end": 42747,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42735,
											"end": 42748,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42749,
											"end": 42753,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42754,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 42735,
											"end": 42758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 42735,
											"end": 42858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42722,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42726,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42713,
											"end": 42732,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42732,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42732,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42732,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42732,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42858,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42858,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 42713,
											"end": 42858,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 42892,
											"end": 42909,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 42892,
											"end": 42909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42892,
											"end": 42909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42892,
											"end": 42909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42892,
											"end": 42909,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42892,
											"end": 42909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42892,
											"end": 42921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 42892,
											"end": 42921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 42920,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42892,
											"end": 42913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 42892,
											"end": 42921,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42892,
											"end": 42921,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 42892,
											"end": 42921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42881,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42885,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42872,
											"end": 42889,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42889,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42889,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42889,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42872,
											"end": 42921,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42619,
											"end": 42622,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 42619,
											"end": 42622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42583,
											"end": 42932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 42583,
											"end": 42932,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42583,
											"end": 42932,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 42583,
											"end": 42932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42583,
											"end": 42932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42977,
											"end": 42979,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42971,
											"end": 42975,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42961,
											"end": 42969,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 42981,
											"end": 42984,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 42986,
											"end": 42993,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42947,
											"end": 42994,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 43005,
											"end": 43080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 43041,
											"end": 43049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43051,
											"end": 43055,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43057,
											"end": 43059,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43061,
											"end": 43064,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43066,
											"end": 43073,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43075,
											"end": 43079,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43005,
											"end": 43040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 43005,
											"end": 43080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43005,
											"end": 43080,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 43005,
											"end": 43080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41903,
											"end": 43087,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19314,
											"end": 19320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19314,
											"end": 19326,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19314,
											"end": 19326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19314,
											"end": 19326,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19314,
											"end": 19326,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19314,
											"end": 19326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19314,
											"end": 19326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19314,
											"end": 19326,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19314,
											"end": 19326,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19314,
											"end": 19326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19314,
											"end": 19326,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19314,
											"end": 19336,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19314,
											"end": 19336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19314,
											"end": 19336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19306,
											"end": 19351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 19306,
											"end": 19351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19338,
											"end": 19350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 19338,
											"end": 19348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 19338,
											"end": 19350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19306,
											"end": 19351,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 19306,
											"end": 19351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "PUSH",
											"source": 0,
											"value": "2F"
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "PUSH data",
											"source": 0,
											"value": "BA7116025F1EF6B158A2BD2238E617F30E17C9E456917D901086CA4F8AD2811"
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "PUSH",
											"source": 0,
											"value": "2F"
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 19298,
											"end": 19403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19414,
											"end": 19439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 19425,
											"end": 19429,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19431,
											"end": 19438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19414,
											"end": 19424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 19414,
											"end": 19439,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19414,
											"end": 19439,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 19414,
											"end": 19439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19223,
											"end": 19446,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 20397,
											"end": 20602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20494,
											"end": 20506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 20494,
											"end": 20504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 20494,
											"end": 20506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20494,
											"end": 20506,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 20494,
											"end": 20506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20483,
											"end": 20506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20483,
											"end": 20490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20483,
											"end": 20506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20483,
											"end": 20506,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "PUSH",
											"source": 0,
											"value": "2F"
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "PUSH data",
											"source": 0,
											"value": "FB06FA8FF2141E8ED74502F6792273793F25F0E9D3CF15344F3F5A0D4948FD4B"
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "PUSH",
											"source": 0,
											"value": "2F"
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 20475,
											"end": 20558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20569,
											"end": 20595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 20581,
											"end": 20585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20587,
											"end": 20594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20569,
											"end": 20580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 20569,
											"end": 20595,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57321,
											"end": 57498,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 57321,
											"end": 57498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57373,
											"end": 57407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 55522,
											"end": 55546,
											"name": "PUSH",
											"source": 0,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 57394,
											"end": 57406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 57394,
											"end": 57404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 57394,
											"end": 57406,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57373,
											"end": 57407,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 57373,
											"end": 57407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "PUSH",
											"source": 0,
											"value": "3B"
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "PUSH data",
											"source": 0,
											"value": "BE510562063387B7714478BE5EFF01A8C39EFBB1B76D9BE224D34AAC440C9E31"
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "PUSH",
											"source": 0,
											"value": "3B"
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 57365,
											"end": 57471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57481,
											"end": 57491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 57481,
											"end": 57489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 57481,
											"end": 57491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57481,
											"end": 57491,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 57481,
											"end": 57491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57321,
											"end": 57498,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39810,
											"end": 39826,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 39869,
											"end": 39872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39869,
											"end": 39879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39850,
											"end": 39858,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39850,
											"end": 39865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39850,
											"end": 39879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "PUSH data",
											"source": 0,
											"value": "E155F5D69798C6205436A388A4F3A5FD42F54147B40F4D63A2C8071FF8A9FEE5"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 39842,
											"end": 39925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39936,
											"end": 39966,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 39983,
											"end": 39991,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39983,
											"end": 39998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39969,
											"end": 39999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39936,
											"end": 39999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39936,
											"end": 39999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40015,
											"end": 40024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40010,
											"end": 40231,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 40010,
											"end": 40231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40034,
											"end": 40042,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40034,
											"end": 40049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40030,
											"end": 40031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40030,
											"end": 40049,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40010,
											"end": 40231,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40010,
											"end": 40231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 40010,
											"end": 40231,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40101,
											"end": 40102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40078,
											"end": 40103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40086,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40087,
											"end": 40088,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40078,
											"end": 40103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40103,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40078,
											"end": 40103,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "PUSH",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "PUSH data",
											"source": 0,
											"value": "1FBBB69D10332726591DC7EE4A23A94661EDA2BEC5CE6BF93A68249147DC8D9C"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "PUSH",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 40070,
											"end": 40157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40199,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40200,
											"end": 40203,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40204,
											"end": 40205,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40200,
											"end": 40206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40190,
											"end": 40207,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40208,
											"end": 40216,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 40217,
											"end": 40218,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40208,
											"end": 40219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40190,
											"end": 40220,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40185,
											"end": 40186,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40171,
											"end": 40220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40051,
											"end": 40054,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40051,
											"end": 40054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40010,
											"end": 40231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 40010,
											"end": 40231,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40010,
											"end": 40231,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 40010,
											"end": 40231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40248,
											"end": 40261,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39653,
											"end": 40268,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 52529,
											"end": 52605,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 52529,
											"end": 52605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52591,
											"end": 52598,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 52591,
											"end": 52598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52591,
											"end": 52598,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 52591,
											"end": 52598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52529,
											"end": 52605,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 52529,
											"end": 52605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52529,
											"end": 52605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52529,
											"end": 52605,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51324,
											"end": 51336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 51324,
											"end": 51334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 51324,
											"end": 51336,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51324,
											"end": 51336,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 51324,
											"end": 51336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51313,
											"end": 51336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51313,
											"end": 51320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51313,
											"end": 51336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51313,
											"end": 51336,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51313,
											"end": 51379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51313,
											"end": 51379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 51313,
											"end": 51379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51313,
											"end": 51379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51340,
											"end": 51379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 51357,
											"end": 51364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51366,
											"end": 51378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 51366,
											"end": 51376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 51366,
											"end": 51378,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51340,
											"end": 51379,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 51340,
											"end": 51379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "PUSH data",
											"source": 0,
											"value": "394AC917F53B95EE25DB2A5DA5874C5B1F0AF95A4FDF34992FF8B19C458F239A"
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 51292,
											"end": 51446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51457,
											"end": 51489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 51468,
											"end": 51475,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51477,
											"end": 51480,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51482,
											"end": 51488,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51457,
											"end": 51467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 51457,
											"end": 51489,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51457,
											"end": 51489,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 51457,
											"end": 51489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51184,
											"end": 51496,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 56110,
											"end": 56356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56216,
											"end": 56250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 55454,
											"end": 55478,
											"name": "PUSH",
											"source": 0,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 56237,
											"end": 56249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 56237,
											"end": 56247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 56237,
											"end": 56249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56216,
											"end": 56250,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 56216,
											"end": 56250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "PUSH data",
											"source": 0,
											"value": "8955910BE8371DDA281E80FA38D092164791CCBD984AAA07B76276BEF2682E9C"
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "PUSH",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 56208,
											"end": 56311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56322,
											"end": 56349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 56328,
											"end": 56330,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56332,
											"end": 56334,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56336,
											"end": 56342,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56344,
											"end": 56348,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56322,
											"end": 56327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 56322,
											"end": 56349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56941,
											"end": 57112,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 56941,
											"end": 57112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56991,
											"end": 57025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 55522,
											"end": 55546,
											"name": "PUSH",
											"source": 0,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 57012,
											"end": 57024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 57012,
											"end": 57022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 57012,
											"end": 57024,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56991,
											"end": 57025,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 56991,
											"end": 57025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "PUSH",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "PUSH data",
											"source": 0,
											"value": "D5053A301ADEC69BF5C7C3782556A354B14090E41FA7CA93C4DE3863FD6A98B9"
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "PUSH",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 56983,
											"end": 57087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57097,
											"end": 57105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 57097,
											"end": 57103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 57097,
											"end": 57105,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18617,
											"end": 18624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18643,
											"end": 18655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18643,
											"end": 18655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18643,
											"end": 18655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18643,
											"end": 18655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18643,
											"end": 18655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18643,
											"end": 18655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18643,
											"end": 18655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18643,
											"end": 18655,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18643,
											"end": 18655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18643,
											"end": 18655,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18643,
											"end": 18673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 18643,
											"end": 18673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18667,
											"end": 18672,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18643,
											"end": 18666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 18643,
											"end": 18673,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18643,
											"end": 18673,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 18643,
											"end": 18673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18636,
											"end": 18673,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18544,
											"end": 18680,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 17529,
											"end": 17666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17598,
											"end": 17602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17621,
											"end": 17633,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17621,
											"end": 17633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17621,
											"end": 17633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17621,
											"end": 17633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17621,
											"end": 17633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17621,
											"end": 17633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17621,
											"end": 17633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17621,
											"end": 17633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17621,
											"end": 17633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17621,
											"end": 17633,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17621,
											"end": 17659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 17621,
											"end": 17659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17651,
											"end": 17658,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17621,
											"end": 17650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 17621,
											"end": 17659,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16306,
											"end": 16355,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 16306,
											"end": 16355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16351,
											"end": 16355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16306,
											"end": 16355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16306,
											"end": 16355,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40454,
											"end": 40462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40438,
											"end": 40462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40438,
											"end": 40450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 40438,
											"end": 40448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 40438,
											"end": 40450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40438,
											"end": 40450,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 40438,
											"end": 40450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40438,
											"end": 40462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40438,
											"end": 40462,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40438,
											"end": 40462,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "PUSH data",
											"source": 0,
											"value": "DF9806C6DC743DE602E49918A67B580590D69AB768BDB59F977C0A884A91A7C2"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 40430,
											"end": 40508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40564,
											"end": 40572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40537,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40538,
											"end": 40550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 40538,
											"end": 40548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 40538,
											"end": 40550,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40538,
											"end": 40550,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 40538,
											"end": 40550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40551,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40561,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40519,
											"end": 40572,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 40602,
											"end": 40614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 40602,
											"end": 40612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 40602,
											"end": 40614,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40602,
											"end": 40614,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 40602,
											"end": 40614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 40626,
											"end": 40634,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40587,
											"end": 40635,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40336,
											"end": 40642,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17834,
											"end": 17959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17897,
											"end": 17904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17923,
											"end": 17935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17923,
											"end": 17935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17923,
											"end": 17935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17923,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17923,
											"end": 17935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17923,
											"end": 17935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17923,
											"end": 17935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17923,
											"end": 17935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17923,
											"end": 17935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17923,
											"end": 17935,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17923,
											"end": 17952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 17923,
											"end": 17952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17923,
											"end": 17950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 17923,
											"end": 17952,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55416,
											"end": 55478,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 55416,
											"end": 55478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55454,
											"end": 55478,
											"name": "PUSH",
											"source": 0,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 55416,
											"end": 55478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55416,
											"end": 55478,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 19680,
											"end": 19906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19772,
											"end": 19778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19772,
											"end": 19784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19772,
											"end": 19784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19772,
											"end": 19784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19772,
											"end": 19784,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19772,
											"end": 19784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19772,
											"end": 19784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19772,
											"end": 19784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19772,
											"end": 19784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19772,
											"end": 19784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19772,
											"end": 19784,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19772,
											"end": 19794,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19772,
											"end": 19794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19772,
											"end": 19794,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19764,
											"end": 19809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 19764,
											"end": 19809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19796,
											"end": 19808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 19796,
											"end": 19806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 19796,
											"end": 19808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19764,
											"end": 19809,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 19764,
											"end": 19809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "PUSH data",
											"source": 0,
											"value": "64344570EAB7406CA49D34D38BF2B2496DFDA914405390C5057C8B0AABF798A3"
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19756,
											"end": 19862,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55484,
											"end": 55546,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 55484,
											"end": 55546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55522,
											"end": 55546,
											"name": "PUSH",
											"source": 0,
											"value": "65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A"
										},
										{
											"begin": 55484,
											"end": 55546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55484,
											"end": 55546,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40800,
											"end": 40804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40841,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40850,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40823,
											"end": 40860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40709,
											"end": 40867,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 40934,
											"end": 41831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41149,
											"end": 41165,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41149,
											"end": 41165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "PUSH data",
											"source": 0,
											"value": "6FAF1C67F278B07C6771DCF4C315A89C21C0EAED11D9AB3D51774DA1CFEF545D"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 41141,
											"end": 41207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41246,
											"end": 41258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 41246,
											"end": 41256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 41246,
											"end": 41258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41246,
											"end": 41258,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 41246,
											"end": 41258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41238,
											"end": 41258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41238,
											"end": 41242,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41238,
											"end": 41258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41238,
											"end": 41258,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41238,
											"end": 41298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41238,
											"end": 41298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 41238,
											"end": 41298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41238,
											"end": 41298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41262,
											"end": 41298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 41279,
											"end": 41283,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41285,
											"end": 41297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 41285,
											"end": 41295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 41285,
											"end": 41297,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41262,
											"end": 41298,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 41262,
											"end": 41298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "PUSH data",
											"source": 0,
											"value": "394AC917F53B95EE25DB2A5DA5874C5B1F0AF95A4FDF34992FF8B19C458F239A"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 41217,
											"end": 41365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41376,
											"end": 41392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41395,
											"end": 41407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 41395,
											"end": 41405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 41395,
											"end": 41407,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41395,
											"end": 41407,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 41395,
											"end": 41407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41376,
											"end": 41407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41376,
											"end": 41407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 41439,
											"end": 41447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41449,
											"end": 41453,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41455,
											"end": 41457,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41459,
											"end": 41480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 41477,
											"end": 41479,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 41459,
											"end": 41476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 41459,
											"end": 41480,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41459,
											"end": 41480,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 41459,
											"end": 41480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41482,
											"end": 41507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 41500,
											"end": 41506,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 41482,
											"end": 41499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 41482,
											"end": 41507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41482,
											"end": 41507,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 41482,
											"end": 41507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41509,
											"end": 41513,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41418,
											"end": 41438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 41418,
											"end": 41514,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41418,
											"end": 41514,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 41418,
											"end": 41514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 41571,
											"end": 41577,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "PUSH data",
											"source": 0,
											"value": "8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF"
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41556,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41560,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 41547,
											"end": 41624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41534,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41538,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41525,
											"end": 41544,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41544,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41544,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41544,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41624,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41624,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41525,
											"end": 41624,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 41654,
											"end": 41671,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41654,
											"end": 41671,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41654,
											"end": 41671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41654,
											"end": 41671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41654,
											"end": 41671,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41654,
											"end": 41671,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41654,
											"end": 41683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 41654,
											"end": 41683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41676,
											"end": 41682,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41654,
											"end": 41675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 41654,
											"end": 41683,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41654,
											"end": 41683,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 41654,
											"end": 41683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41643,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41647,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41651,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41683,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41683,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 41634,
											"end": 41683,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41699,
											"end": 41745,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 41756,
											"end": 41824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 41787,
											"end": 41795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41797,
											"end": 41801,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41803,
											"end": 41805,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41807,
											"end": 41809,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41811,
											"end": 41817,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41819,
											"end": 41823,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41756,
											"end": 41786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 41756,
											"end": 41824,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 50898,
											"end": 51178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51013,
											"end": 51025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 51013,
											"end": 51023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 51013,
											"end": 51025,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51013,
											"end": 51025,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 51013,
											"end": 51025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51002,
											"end": 51025,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51002,
											"end": 51009,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51002,
											"end": 51025,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51002,
											"end": 51025,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51002,
											"end": 51068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51002,
											"end": 51068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 51002,
											"end": 51068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51002,
											"end": 51068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51029,
											"end": 51068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 51046,
											"end": 51053,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51055,
											"end": 51067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 51055,
											"end": 51065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 51055,
											"end": 51067,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51029,
											"end": 51068,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 51029,
											"end": 51068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "PUSH data",
											"source": 0,
											"value": "394AC917F53B95EE25DB2A5DA5874C5B1F0AF95A4FDF34992FF8B19C458F239A"
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "PUSH",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 50981,
											"end": 51135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51146,
											"end": 51171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 51152,
											"end": 51159,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51161,
											"end": 51163,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51165,
											"end": 51170,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51146,
											"end": 51151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 51146,
											"end": 51171,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4888,
											"end": 5029,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4888,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 4962,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4981,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 4986,
											"end": 4989,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5006,
											"end": 5020,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4981,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 4981,
											"end": 5022,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14316,
											"end": 14420,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 14316,
											"end": 14420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14403,
											"end": 14413,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14316,
											"end": 14420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14316,
											"end": 14420,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 45296,
											"end": 45996,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 45296,
											"end": 45996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45430,
											"end": 45446,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45430,
											"end": 45446,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "PUSH data",
											"source": 0,
											"value": "EBF031A1B7EE1D0B3A7752B450A3268E8B6C334561B48C1C0BA0F5BAC05749F2"
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 45422,
											"end": 45484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45516,
											"end": 45523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45516,
											"end": 45530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45502,
											"end": 45505,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45502,
											"end": 45512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45502,
											"end": 45530,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "PUSH data",
											"source": 0,
											"value": "E909E0C9A8F96B4F9AF03B716811ECE20BEB070BE416893ED1D50619B5930807"
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 45494,
											"end": 45575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45586,
											"end": 45602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45605,
											"end": 45617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 45605,
											"end": 45615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 45605,
											"end": 45617,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45605,
											"end": 45617,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 45605,
											"end": 45617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45586,
											"end": 45617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45586,
											"end": 45617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45628,
											"end": 45694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 45649,
											"end": 45657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45667,
											"end": 45668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45671,
											"end": 45673,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 45675,
											"end": 45678,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 45680,
											"end": 45687,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 45689,
											"end": 45693,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 45628,
											"end": 45648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 45628,
											"end": 45694,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45628,
											"end": 45694,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 45628,
											"end": 45694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45710,
											"end": 45716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45705,
											"end": 45829,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 45705,
											"end": 45829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45726,
											"end": 45729,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45726,
											"end": 45736,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45722,
											"end": 45723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45722,
											"end": 45736,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 45705,
											"end": 45829,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45705,
											"end": 45829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 45705,
											"end": 45829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45781,
											"end": 45818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 45796,
											"end": 45805,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 45796,
											"end": 45813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45806,
											"end": 45809,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 45810,
											"end": 45811,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45806,
											"end": 45812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45806,
											"end": 45812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45806,
											"end": 45812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45806,
											"end": 45812,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 45806,
											"end": 45812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 45806,
											"end": 45812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45806,
											"end": 45812,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 45806,
											"end": 45812,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 45806,
											"end": 45812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45806,
											"end": 45812,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45806,
											"end": 45812,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 45806,
											"end": 45812,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45806,
											"end": 45812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45806,
											"end": 45812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45806,
											"end": 45812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45796,
											"end": 45813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45796,
											"end": 45813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45796,
											"end": 45813,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45796,
											"end": 45813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45796,
											"end": 45813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45796,
											"end": 45813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45796,
											"end": 45813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45796,
											"end": 45813,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45796,
											"end": 45813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45796,
											"end": 45813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45796,
											"end": 45813,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45796,
											"end": 45817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45814,
											"end": 45816,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45796,
											"end": 45817,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45796,
											"end": 45817,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45796,
											"end": 45817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45796,
											"end": 45817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45796,
											"end": 45817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45796,
											"end": 45817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45796,
											"end": 45817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45796,
											"end": 45817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45796,
											"end": 45817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45796,
											"end": 45817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45796,
											"end": 45817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45796,
											"end": 45817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45796,
											"end": 45817,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45796,
											"end": 45817,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45781,
											"end": 45788,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 45789,
											"end": 45790,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45781,
											"end": 45791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45781,
											"end": 45791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45781,
											"end": 45791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45781,
											"end": 45791,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 45781,
											"end": 45791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 45781,
											"end": 45791,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45781,
											"end": 45791,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 45781,
											"end": 45791,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 45781,
											"end": 45791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45781,
											"end": 45791,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45781,
											"end": 45791,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 45781,
											"end": 45791,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45781,
											"end": 45791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45781,
											"end": 45791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45781,
											"end": 45791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45781,
											"end": 45795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 45781,
											"end": 45795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45781,
											"end": 45818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45781,
											"end": 45818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45781,
											"end": 45818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 45781,
											"end": 45818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45781,
											"end": 45818,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45781,
											"end": 45818,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 45781,
											"end": 45818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45766,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 45757,
											"end": 45774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45767,
											"end": 45770,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 45771,
											"end": 45772,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45773,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 45767,
											"end": 45773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45773,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45773,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 45767,
											"end": 45773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45773,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45767,
											"end": 45773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45773,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45767,
											"end": 45773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45774,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45774,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45774,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45757,
											"end": 45774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 45757,
											"end": 45774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45774,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45757,
											"end": 45778,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45778,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45778,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45778,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45757,
											"end": 45818,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45738,
											"end": 45741,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 45738,
											"end": 45741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45705,
											"end": 45829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 45705,
											"end": 45829,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45705,
											"end": 45829,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 45705,
											"end": 45829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45705,
											"end": 45829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45880,
											"end": 45882,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45876,
											"end": 45877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45858,
											"end": 45866,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 45884,
											"end": 45887,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 45889,
											"end": 45896,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45844,
											"end": 45897,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 45908,
											"end": 45989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 45944,
											"end": 45952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45962,
											"end": 45963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45966,
											"end": 45968,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 45970,
											"end": 45973,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 45975,
											"end": 45982,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 45984,
											"end": 45988,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 45908,
											"end": 45943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 45908,
											"end": 45989,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45908,
											"end": 45989,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 45908,
											"end": 45989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45296,
											"end": 45996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45296,
											"end": 45996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45296,
											"end": 45996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45296,
											"end": 45996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45296,
											"end": 45996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45296,
											"end": 45996,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 57504,
											"end": 57846,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 57504,
											"end": 57846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57773,
											"end": 57839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 57800,
											"end": 57808,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57810,
											"end": 57814,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57816,
											"end": 57818,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57820,
											"end": 57823,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57825,
											"end": 57832,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57834,
											"end": 57838,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57773,
											"end": 57799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 57773,
											"end": 57839,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33068,
											"end": 33255,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 33068,
											"end": 33255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33154,
											"end": 33161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33189,
											"end": 33201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33181,
											"end": 33187,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33181,
											"end": 33187,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33181,
											"end": 33187,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33181,
											"end": 33187,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 33173,
											"end": 33202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33224,
											"end": 33229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33224,
											"end": 33229,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33224,
											"end": 33229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33068,
											"end": 33255,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32196,
											"end": 32372,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 32196,
											"end": 32372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32254,
											"end": 32261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32285,
											"end": 32290,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32285,
											"end": 32290,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32285,
											"end": 32290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32308,
											"end": 32314,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32308,
											"end": 32314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32308,
											"end": 32314,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32308,
											"end": 32314,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32300,
											"end": 32346,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49596,
											"end": 50374,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 49596,
											"end": 50374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49840,
											"end": 49855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 49840,
											"end": 49842,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49840,
											"end": 49853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49840,
											"end": 49853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 49840,
											"end": 49855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49840,
											"end": 49855,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 49840,
											"end": 49855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49836,
											"end": 50368,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49836,
											"end": 50368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 49836,
											"end": 50368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49892,
											"end": 49894,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49875,
											"end": 49918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49918,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 49919,
											"end": 49927,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 49929,
											"end": 49933,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 49935,
											"end": 49938,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49940,
											"end": 49947,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49949,
											"end": 49953,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 49875,
											"end": 49954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50234,
											"end": 50240,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50234,
											"end": 50240,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 50227,
											"end": 50241,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "PUSH data",
											"source": 0,
											"value": "AA752FB1526000E5241602AFFC3D70EF506DA48A27EA57140102B439E655ED"
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50281,
											"end": 50343,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 49871,
											"end": 50358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 50003,
											"end": 50067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50003,
											"end": 50067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50003,
											"end": 50067,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49999,
											"end": 50160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 49999,
											"end": 50160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "PUSH data",
											"source": 0,
											"value": "587CCCAD73A80A7F013DB13C596F4FEBC1968DC77E1D3589D5E7A509A3D6503"
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50091,
											"end": 50141,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49999,
											"end": 50160,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 49999,
											"end": 50160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49955,
											"end": 50174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49596,
											"end": 50374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49596,
											"end": 50374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49596,
											"end": 50374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49596,
											"end": 50374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49596,
											"end": 50374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49596,
											"end": 50374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49596,
											"end": 50374,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21604,
											"end": 21788,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 21604,
											"end": 21788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21677,
											"end": 21683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21677,
											"end": 21689,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21677,
											"end": 21689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21677,
											"end": 21689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21677,
											"end": 21689,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21677,
											"end": 21689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21677,
											"end": 21689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21677,
											"end": 21689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21677,
											"end": 21689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21677,
											"end": 21689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21677,
											"end": 21689,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21677,
											"end": 21710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 21677,
											"end": 21710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 21709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21677,
											"end": 21701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 21677,
											"end": 21710,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21677,
											"end": 21710,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 21677,
											"end": 21710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21673,
											"end": 21782,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21673,
											"end": 21782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 21673,
											"end": 21782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21758,
											"end": 21770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 21758,
											"end": 21768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 21758,
											"end": 21770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21758,
											"end": 21770,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 21758,
											"end": 21770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21731,
											"end": 21771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21749,
											"end": 21756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21731,
											"end": 21771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21743,
											"end": 21747,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21731,
											"end": 21771,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 21731,
											"end": 21771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21731,
											"end": 21771,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21731,
											"end": 21771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21731,
											"end": 21771,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21731,
											"end": 21771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21731,
											"end": 21771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21731,
											"end": 21771,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21731,
											"end": 21771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21731,
											"end": 21771,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 21604,
											"end": 21788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21604,
											"end": 21788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21604,
											"end": 21788,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21794,
											"end": 21982,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 21794,
											"end": 21982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21868,
											"end": 21874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21868,
											"end": 21880,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21868,
											"end": 21880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21868,
											"end": 21880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21868,
											"end": 21880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21868,
											"end": 21880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21868,
											"end": 21880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21868,
											"end": 21880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21868,
											"end": 21880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21868,
											"end": 21880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21868,
											"end": 21880,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21868,
											"end": 21904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 21868,
											"end": 21904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21896,
											"end": 21903,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21868,
											"end": 21895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 21868,
											"end": 21904,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21868,
											"end": 21904,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 21868,
											"end": 21904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21864,
											"end": 21976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21864,
											"end": 21976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 21864,
											"end": 21976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21952,
											"end": 21964,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 21952,
											"end": 21962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 21952,
											"end": 21964,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21952,
											"end": 21964,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 21952,
											"end": 21964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21925,
											"end": 21965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21943,
											"end": 21950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21925,
											"end": 21965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21937,
											"end": 21941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21925,
											"end": 21965,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 21925,
											"end": 21965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21925,
											"end": 21965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21925,
											"end": 21965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21925,
											"end": 21965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21925,
											"end": 21965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21925,
											"end": 21965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21925,
											"end": 21965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21925,
											"end": 21965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21925,
											"end": 21965,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 21794,
											"end": 21982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21794,
											"end": 21982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21794,
											"end": 21982,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 53531,
											"end": 53648,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 53531,
											"end": 53648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53099,
											"end": 53106,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53099,
											"end": 53106,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53099,
											"end": 53106,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 53099,
											"end": 53106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 53091,
											"end": 53131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53596,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53589,
											"end": 53604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 53589,
											"end": 53604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53604,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53619,
											"end": 53641,
											"name": "PUSH",
											"source": 0,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 53628,
											"end": 53640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 53628,
											"end": 53638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 53628,
											"end": 53640,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53628,
											"end": 53640,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 53628,
											"end": 53640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53619,
											"end": 53641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53619,
											"end": 53641,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53619,
											"end": 53641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53619,
											"end": 53641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53619,
											"end": 53641,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53619,
											"end": 53641,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53619,
											"end": 53641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53619,
											"end": 53641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53619,
											"end": 53641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53619,
											"end": 53641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53619,
											"end": 53641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53619,
											"end": 53641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53619,
											"end": 53641,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53619,
											"end": 53641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53619,
											"end": 53641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53619,
											"end": 53641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53619,
											"end": 53641,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 53531,
											"end": 53648,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 46977,
											"end": 47682,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 46977,
											"end": 47682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47097,
											"end": 47118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47097,
											"end": 47118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "PUSH data",
											"source": 0,
											"value": "87FD4AEE52F5758D127CD9704D5FFEF70F36ED1E87EB99B6F40E37A25C79A76A"
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 47089,
											"end": 47158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47190,
											"end": 47197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47190,
											"end": 47204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47176,
											"end": 47179,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47176,
											"end": 47186,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47176,
											"end": 47204,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "PUSH data",
											"source": 0,
											"value": "E909E0C9A8F96B4F9AF03B716811ECE20BEB070BE416893ED1D50619B5930807"
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 47168,
											"end": 47249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47260,
											"end": 47276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47279,
											"end": 47291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 47279,
											"end": 47289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 47279,
											"end": 47291,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47279,
											"end": 47291,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 47279,
											"end": 47291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47260,
											"end": 47291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47260,
											"end": 47291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47302,
											"end": 47371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 47323,
											"end": 47331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47333,
											"end": 47340,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47350,
											"end": 47351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47354,
											"end": 47357,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47359,
											"end": 47366,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47302,
											"end": 47371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47302,
											"end": 47371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47302,
											"end": 47371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47302,
											"end": 47371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47302,
											"end": 47371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47302,
											"end": 47371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47302,
											"end": 47371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47302,
											"end": 47371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47302,
											"end": 47371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47302,
											"end": 47371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47302,
											"end": 47371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47302,
											"end": 47371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47302,
											"end": 47322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 47302,
											"end": 47371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47302,
											"end": 47371,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 47302,
											"end": 47371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47387,
											"end": 47393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47382,
											"end": 47602,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 47382,
											"end": 47602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47403,
											"end": 47406,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47403,
											"end": 47413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47399,
											"end": 47400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47399,
											"end": 47413,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 47382,
											"end": 47602,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47382,
											"end": 47602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 47382,
											"end": 47602,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 47511,
											"end": 47518,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47519,
											"end": 47520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47511,
											"end": 47521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47511,
											"end": 47521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47511,
											"end": 47521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47511,
											"end": 47521,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 47511,
											"end": 47521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 47511,
											"end": 47521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47511,
											"end": 47521,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 47511,
											"end": 47521,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 47511,
											"end": 47521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47511,
											"end": 47521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47511,
											"end": 47521,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 47511,
											"end": 47521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47511,
											"end": 47521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47511,
											"end": 47521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47511,
											"end": 47521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "PUSH data",
											"source": 0,
											"value": "294A5DE01910E2350FF231C633AE2D453ED6B1B72C75506234B7AACE63EAE685"
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47472,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 47463,
											"end": 47480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47473,
											"end": 47476,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47477,
											"end": 47478,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47479,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 47473,
											"end": 47479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47479,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47479,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 47473,
											"end": 47479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47479,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47473,
											"end": 47479,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47479,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47473,
											"end": 47479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47480,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47463,
											"end": 47480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47480,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47463,
											"end": 47480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47463,
											"end": 47480,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47481,
											"end": 47488,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47463,
											"end": 47489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47463,
											"end": 47489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47463,
											"end": 47489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47463,
											"end": 47489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47463,
											"end": 47489,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 47463,
											"end": 47493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 47463,
											"end": 47591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47443,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 47434,
											"end": 47451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47444,
											"end": 47447,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47448,
											"end": 47449,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47444,
											"end": 47450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47444,
											"end": 47450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47444,
											"end": 47450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47444,
											"end": 47450,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 47444,
											"end": 47450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 47444,
											"end": 47450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47444,
											"end": 47450,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 47444,
											"end": 47450,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 47444,
											"end": 47450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47444,
											"end": 47450,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47444,
											"end": 47450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47444,
											"end": 47450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47444,
											"end": 47450,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 47444,
											"end": 47450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47444,
											"end": 47450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47444,
											"end": 47450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47444,
											"end": 47450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47444,
											"end": 47450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47444,
											"end": 47450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47444,
											"end": 47450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47451,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47451,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47434,
											"end": 47451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 47434,
											"end": 47451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47451,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47434,
											"end": 47460,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47460,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47460,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47460,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47434,
											"end": 47591,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47415,
											"end": 47418,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47415,
											"end": 47418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47382,
											"end": 47602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 47382,
											"end": 47602,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47382,
											"end": 47602,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 47382,
											"end": 47602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47382,
											"end": 47602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47658,
											"end": 47659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47641,
											"end": 47648,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47631,
											"end": 47639,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 47662,
											"end": 47665,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47667,
											"end": 47674,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47617,
											"end": 47675,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 46977,
											"end": 47682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46977,
											"end": 47682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46977,
											"end": 47682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46977,
											"end": 47682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46977,
											"end": 47682,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 44379,
											"end": 44951,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 44379,
											"end": 44951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44493,
											"end": 44514,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44493,
											"end": 44514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "PUSH data",
											"source": 0,
											"value": "EBF031A1B7EE1D0B3A7752B450A3268E8B6C334561B48C1C0BA0F5BAC05749F2"
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 44485,
											"end": 44552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44563,
											"end": 44579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44582,
											"end": 44594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 44582,
											"end": 44592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 44582,
											"end": 44594,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44582,
											"end": 44594,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 44582,
											"end": 44594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44563,
											"end": 44594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44563,
											"end": 44594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44605,
											"end": 44712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 44626,
											"end": 44634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44644,
											"end": 44645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44648,
											"end": 44655,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44657,
											"end": 44678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 44675,
											"end": 44677,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 44657,
											"end": 44674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 44657,
											"end": 44678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44605,
											"end": 44712,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 44605,
											"end": 44712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44748,
											"end": 44761,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44757,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 44748,
											"end": 44761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44748,
											"end": 44761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44748,
											"end": 44761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44761,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44748,
											"end": 44770,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44770,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 44748,
											"end": 44782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44775,
											"end": 44781,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44748,
											"end": 44774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 44748,
											"end": 44782,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44748,
											"end": 44782,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 44748,
											"end": 44782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44723,
											"end": 44736,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44732,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 44723,
											"end": 44736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44723,
											"end": 44736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44723,
											"end": 44736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44736,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44723,
											"end": 44745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44745,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44745,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44745,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44745,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44745,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44782,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44782,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44782,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44723,
											"end": 44745,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44797,
											"end": 44854,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 44865,
											"end": 44944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 44896,
											"end": 44904,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44914,
											"end": 44915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44918,
											"end": 44925,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44927,
											"end": 44929,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44931,
											"end": 44937,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44939,
											"end": 44943,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44865,
											"end": 44895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 44865,
											"end": 44944,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53284,
											"end": 53399,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 53284,
											"end": 53399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52835,
											"end": 52842,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 52835,
											"end": 52842,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52835,
											"end": 52842,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 52835,
											"end": 52842,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52834,
											"end": 52842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 52826,
											"end": 52863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53343,
											"end": 53350,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53343,
											"end": 53357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53343,
											"end": 53357,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 53343,
											"end": 53357,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53353,
											"end": 53357,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53343,
											"end": 53357,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 53343,
											"end": 53357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53343,
											"end": 53357,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53372,
											"end": 53392,
											"name": "PUSH",
											"source": 0,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 53379,
											"end": 53391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 53379,
											"end": 53389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 53379,
											"end": 53391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6109,
											"end": 6256,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 6109,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 6229,
											"end": 6232,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6241,
											"end": 6246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6225,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 6225,
											"end": 6247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5425,
											"end": 5581,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 5425,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5528,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 5538,
											"end": 5541,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5558,
											"end": 5572,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5558,
											"end": 5572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5528,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 5528,
											"end": 5574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5662,
											"end": 5777,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 5662,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5725,
											"end": 5732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5759,
											"end": 5762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5751,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 5751,
											"end": 5770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50380,
											"end": 50573,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 50380,
											"end": 50573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50513,
											"end": 50514,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50446,
											"end": 50462,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 50446,
											"end": 50462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50446,
											"end": 50462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50446,
											"end": 50462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50499,
											"end": 50515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50474,
											"end": 50515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50474,
											"end": 50515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50536,
											"end": 50543,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50531,
											"end": 50532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50525,
											"end": 50543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50561,
											"end": 50566,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50380,
											"end": 50573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50380,
											"end": 50573,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 48849,
											"end": 49590,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 48849,
											"end": 49590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49068,
											"end": 49083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 49068,
											"end": 49070,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49068,
											"end": 49081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49068,
											"end": 49081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 49068,
											"end": 49083,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49068,
											"end": 49083,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 49068,
											"end": 49083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49584,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49064,
											"end": 49584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 49064,
											"end": 49584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49120,
											"end": 49122,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49103,
											"end": 49141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49141,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 49142,
											"end": 49150,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 49152,
											"end": 49156,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 49158,
											"end": 49160,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49162,
											"end": 49168,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49170,
											"end": 49174,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 49103,
											"end": 49175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49099,
											"end": 49574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 49099,
											"end": 49574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49099,
											"end": 49574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 49099,
											"end": 49574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 49099,
											"end": 49574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49099,
											"end": 49574,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 49099,
											"end": 49574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 49224,
											"end": 49283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49224,
											"end": 49283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49224,
											"end": 49283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49220,
											"end": 49376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 49220,
											"end": 49376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "PUSH data",
											"source": 0,
											"value": "587CCCAD73A80A7F013DB13C596F4FEBC1968DC77E1D3589D5E7A509A3D6503"
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49307,
											"end": 49357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46245,
											"end": 46783,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 46245,
											"end": 46783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46340,
											"end": 46361,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46340,
											"end": 46361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "PUSH data",
											"source": 0,
											"value": "87FD4AEE52F5758D127CD9704D5FFEF70F36ED1E87EB99B6F40E37A25C79A76A"
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 46332,
											"end": 46401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46412,
											"end": 46428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46431,
											"end": 46443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 46431,
											"end": 46441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 46431,
											"end": 46443,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46431,
											"end": 46443,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 46431,
											"end": 46443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46412,
											"end": 46443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46412,
											"end": 46443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46454,
											"end": 46559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 46475,
											"end": 46483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46485,
											"end": 46492,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46502,
											"end": 46503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46506,
											"end": 46527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 46524,
											"end": 46526,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 46506,
											"end": 46523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 46506,
											"end": 46527,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46506,
											"end": 46527,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 46506,
											"end": 46527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46529,
											"end": 46554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 46547,
											"end": 46553,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 46529,
											"end": 46546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 46529,
											"end": 46554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46529,
											"end": 46554,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 46529,
											"end": 46554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46454,
											"end": 46559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46454,
											"end": 46559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46454,
											"end": 46559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46454,
											"end": 46559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46454,
											"end": 46559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46454,
											"end": 46559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46454,
											"end": 46559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46454,
											"end": 46559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46454,
											"end": 46559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46454,
											"end": 46559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46454,
											"end": 46559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46454,
											"end": 46559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46454,
											"end": 46474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 46454,
											"end": 46559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46454,
											"end": 46559,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 46454,
											"end": 46559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 46635,
											"end": 46641,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "PUSH data",
											"source": 0,
											"value": "294A5DE01910E2350FF231C633AE2D453ED6B1B72C75506234B7AACE63EAE685"
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46595,
											"end": 46608,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46604,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 46595,
											"end": 46608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46595,
											"end": 46608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46595,
											"end": 46608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46608,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46595,
											"end": 46617,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46617,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46617,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46617,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46595,
											"end": 46621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 46595,
											"end": 46703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46570,
											"end": 46583,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46579,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 46570,
											"end": 46583,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46570,
											"end": 46583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46570,
											"end": 46583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46583,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46583,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46570,
											"end": 46592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46592,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46592,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46592,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46592,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46592,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46703,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46703,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46703,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46583,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46583,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46570,
											"end": 46592,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46719,
											"end": 46776,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 46245,
											"end": 46783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46245,
											"end": 46783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46245,
											"end": 46783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46245,
											"end": 46783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46245,
											"end": 46783,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1635,
											"end": 2039,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1635,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1698,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1719,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 1729,
											"end": 1732,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 1719,
											"end": 1740,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1719,
											"end": 1740,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 1719,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 1714,
											"end": 2033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1756,
											"end": 1779,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 1954,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1936,
											"end": 1954,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 1933,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 1933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 1933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 1926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 1926,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 1926,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 1933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 1933,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 1933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1914,
											"end": 1933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 1933,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 1954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 1954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 1954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1914,
											"end": 1954,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1968,
											"end": 1979,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 2033,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 1714,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2017,
											"end": 2022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2010,
											"end": 2022,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54249,
											"end": 54642,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 54249,
											"end": 54642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54492,
											"end": 54558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 54519,
											"end": 54527,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54529,
											"end": 54533,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54535,
											"end": 54537,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54539,
											"end": 54542,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54544,
											"end": 54551,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54553,
											"end": 54557,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54492,
											"end": 54518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 54492,
											"end": 54558,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54492,
											"end": 54558,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 54492,
											"end": 54558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54578,
											"end": 54586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 54578,
											"end": 54584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 54578,
											"end": 54586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54578,
											"end": 54586,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 54578,
											"end": 54586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54577,
											"end": 54586,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "PUSH",
											"source": 0,
											"value": "2C"
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "PUSH data",
											"source": 0,
											"value": "382791644F51336ED3667770955AA8EB4EFB839029C48708CADB22E92D271435"
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "PUSH",
											"source": 0,
											"value": "2C"
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54569,
											"end": 54635,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8547,
											"end": 8960,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 8547,
											"end": 8960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8907,
											"end": 8927,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8953,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8953,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8547,
											"end": 8960,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5197,
											"end": 5344,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 5197,
											"end": 5344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 5301,
											"end": 5304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5321,
											"end": 5335,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5321,
											"end": 5335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5293,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 5293,
											"end": 5337,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4447,
											"end": 4648,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 4447,
											"end": 4648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4541,
											"end": 4567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "PUSH data",
											"source": 0,
											"value": "45D6834E6193A687012A3AD777F612279E549B6945364D9D2324F48610D3CBB"
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 4533,
											"end": 4606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4640,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4616,
											"end": 4641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4616,
											"end": 4641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4648,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4648,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3800,
											"end": 3927,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 3800,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3908,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3896,
											"end": 3908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3915,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3920,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3920,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3927,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4008,
											"end": 4115,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 4008,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4008,
											"end": 4115,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2207,
											"end": 3719,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 2207,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2273,
											"end": 2277,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2422,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2410,
											"end": 2422,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2422,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2429,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2410,
											"end": 2429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2429,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2429,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2440,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 2440,
											"end": 3713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2873,
											"end": 2891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2873,
											"end": 2891,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2825,
											"end": 2839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2839,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2825,
											"end": 2839,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2873,
											"end": 2895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2873,
											"end": 2895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2873,
											"end": 2895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2873,
											"end": 2895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2801,
											"end": 2822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2873,
											"end": 2876,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2873,
											"end": 2876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2873,
											"end": 2895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2873,
											"end": 2895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3177,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 3155,
											"end": 3177,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3177,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3177,
											"name": "tag",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 3155,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3177,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3177,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3155,
											"end": 3177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3177,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3177,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3272,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3280,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3281,
											"end": 3294,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3307,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3307,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3269,
											"end": 3307,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3416,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3373,
											"end": 3385,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3396,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3373,
											"end": 3396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3396,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3416,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3399,
											"end": 3416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3416,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3376,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3539,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3617,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3626,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3614,
											"end": 3626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3632,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3614,
											"end": 3633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3614,
											"end": 3633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3614,
											"end": 3633,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3633,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3655,
											"end": 3659,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3648,
											"end": 3659,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3648,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3648,
											"end": 3659,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2440,
											"end": 3713,
											"name": "tag",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 2440,
											"end": 3713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3690,
											"end": 3702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3690,
											"end": 3702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3690,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3690,
											"end": 3702,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 110,
											"end": 216,
											"name": "tag",
											"source": -1,
											"value": "460"
										},
										{
											"begin": 110,
											"end": 216,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 195,
											"end": 198,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": 191,
											"end": 206,
											"name": "SHR",
											"source": -1
										},
										{
											"begin": 191,
											"end": 206,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 163,
											"end": 216,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 224,
											"end": 963,
											"name": "tag",
											"source": -1,
											"value": "337"
										},
										{
											"begin": 224,
											"end": 963,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 224,
											"end": 963,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 301,
											"name": "PUSH",
											"source": -1,
											"value": "44"
										},
										{
											"begin": 279,
											"end": 295,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 276,
											"end": 302,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 273,
											"end": 275,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 273,
											"end": 275,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "463"
										},
										{
											"begin": 273,
											"end": 275,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 305,
											"end": 310,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "217"
										},
										{
											"begin": 305,
											"end": 310,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 273,
											"end": 275,
											"name": "tag",
											"source": -1,
											"value": "463"
										},
										{
											"begin": 273,
											"end": 275,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 339,
											"end": 340,
											"name": "PUSH",
											"source": -1,
											"value": "4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 318,
											"end": 341,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 414,
											"end": 424,
											"name": "PUSH",
											"source": -1,
											"value": "8C379A0"
										},
										{
											"begin": 357,
											"end": 391,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "464"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 382,
											"end": 390,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 357,
											"end": 391,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "460"
										},
										{
											"begin": 357,
											"end": 391,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": 357,
											"end": 391,
											"name": "tag",
											"source": -1,
											"value": "464"
										},
										{
											"begin": 357,
											"end": 391,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 406,
											"end": 425,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 396,
											"end": 398,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "465"
										},
										{
											"begin": 396,
											"end": 398,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 429,
											"end": 434,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "217"
										},
										{
											"begin": 429,
											"end": 434,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 396,
											"end": 398,
											"name": "tag",
											"source": -1,
											"value": "465"
										},
										{
											"begin": 396,
											"end": 398,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 460,
											"end": 462,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 463,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 496,
											"end": 512,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 492,
											"end": 516,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 339,
											"end": 340,
											"name": "PUSH",
											"source": -1,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 463,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 468,
											"end": 517,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 543,
											"end": 547,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 537,
											"end": 548,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 624,
											"end": 640,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 624,
											"end": 640,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 617,
											"end": 621,
											"name": "PUSH",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 605,
											"end": 622,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 602,
											"end": 641,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 576,
											"end": 594,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 568,
											"end": 574,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 565,
											"end": 595,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 556,
											"end": 647,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "466"
										},
										{
											"begin": 553,
											"end": 555,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 655,
											"end": 660,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "217"
										},
										{
											"begin": 655,
											"end": 660,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "tag",
											"source": -1,
											"value": "466"
										},
										{
											"begin": 553,
											"end": 555,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 693,
											"end": 699,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 687,
											"end": 691,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 683,
											"end": 700,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 672,
											"end": 700,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 672,
											"end": 700,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 725,
											"end": 728,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 705,
											"end": 729,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 705,
											"end": 729,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 576,
											"end": 594,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 740,
											"end": 746,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 737,
											"end": 767,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 734,
											"end": 736,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 734,
											"end": 736,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "467"
										},
										{
											"begin": 734,
											"end": 736,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 770,
											"end": 775,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 770,
											"end": 775,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 770,
											"end": 775,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 770,
											"end": 775,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 770,
											"end": 775,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "217"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 734,
											"end": 736,
											"name": "tag",
											"source": -1,
											"value": "467"
										},
										{
											"begin": 734,
											"end": 736,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 734,
											"end": 736,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 847,
											"end": 863,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 841,
											"end": 845,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 837,
											"end": 864,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 807,
											"end": 811,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 814,
											"end": 820,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 802,
											"end": 805,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 794,
											"end": 821,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 794,
											"end": 821,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 829,
											"end": 865,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 826,
											"end": 828,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 826,
											"end": 828,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "468"
										},
										{
											"begin": 826,
											"end": 828,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 868,
											"end": 873,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 868,
											"end": 873,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 868,
											"end": 873,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 868,
											"end": 873,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "217"
										},
										{
											"begin": 868,
											"end": 873,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 826,
											"end": 828,
											"name": "tag",
											"source": -1,
											"value": "468"
										},
										{
											"begin": 826,
											"end": 828,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 89,
											"end": 96,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": 73,
											"end": 87,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 69,
											"end": 97,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 892,
											"end": 942,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 892,
											"end": 942,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 807,
											"end": 811,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 892,
											"end": 942,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 460,
											"end": 462,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 943,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 900,
											"end": 903,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 267,
											"end": 963,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 267,
											"end": 963,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									],
									".data": {
										"1F4DE6A436172E7F7B1540476031CB037FC18EDE9CC346A56DA1697CBD352AA9": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
										"1FBBB69D10332726591DC7EE4A23A94661EDA2BEC5CE6BF93A68249147DC8D9C": "455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
										"294A5DE01910E2350FF231C633AE2D453ED6B1B72C75506234B7AACE63EAE685": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"382791644F51336ED3667770955AA8EB4EFB839029C48708CADB22E92D271435": "455243313135355061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564",
										"394AC917F53B95EE25DB2A5DA5874C5B1F0AF95A4FDF34992FF8B19C458F239A": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
										"45D6834E6193A687012A3AD777F612279E549B6945364D9D2324F48610D3CBB": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
										"587CCCAD73A80A7F013DB13C596F4FEBC1968DC77E1D3589D5E7A509A3D6503": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
										"64344570EAB7406CA49D34D38BF2B2496DFDA914405390C5057C8B0AABF798A3": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65",
										"6FAF1C67F278B07C6771DCF4C315A89C21C0EAED11D9AB3D51774DA1CFEF545D": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
										"70A41C66829F5508884CDA9EF3D2F72551B34F23E4035BE97941681123D2D686": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
										"87FD4AEE52F5758D127CD9704D5FFEF70F36ED1E87EB99B6F40E37A25C79A76A": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
										"8955910BE8371DDA281E80FA38D092164791CCBD984AAA07B76276BEF2682E9C": "455243313135355072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
										"8AC7E9556B567C1C94BB4DAAA3C3A65BE5AC686579615210CB910FB8CB8D65BF": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
										"AA752FB1526000E5241602AFFC3D70EF506DA48A27EA57140102B439E655ED": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
										"BA7116025F1EF6B158A2BD2238E617F30E17C9E456917D901086CA4F8AD2811": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74",
										"BE510562063387B7714478BE5EFF01A8C39EFBB1B76D9BE224D34AAC440C9E31": "455243313135355072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
										"D5053A301ADEC69BF5C7C3782556A354B14090E41FA7CA93C4DE3863FD6A98B9": "455243313135355072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f207061757365",
										"DF9806C6DC743DE602E49918A67B580590D69AB768BDB59F977C0A884A91A7C2": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
										"E155F5D69798C6205436A388A4F3A5FD42F54147B40F4D63A2C8071FF8A9FEE5": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
										"E909E0C9A8F96B4F9AF03B716811ECE20BEB070BE416893ED1D50619B5930807": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
										"EBF031A1B7EE1D0B3A7752B450A3268E8B6C334561B48C1C0BA0F5BAC05749F2": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
										"FB06FA8FF2141E8ED74502F6792273793F25F0E9D3CF15344F3F5A0D4948FD4B": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66"
									}
								}
							}
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"PAUSER_ROLE()": "e63ab1e9",
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256,bytes)": "731133e9",
							"mintBatch(address,uint256[],uint256[],bytes)": "1f7fdffa",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"unpause()": "3f4ba83a",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{ERC1155} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE`, and `PAUSER_ROLE` to the account that deploys the contract.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"mint(address,uint256,uint256,bytes)\":{\"details\":\"Creates `amount` new tokens for `to`, of token type `id`. See {ERC1155-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"mintBatch(address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] variant of {mint}.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC1155Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC1155Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC11551.sol\":\"ERC1155PresetMinterPauser\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC11551.sol\":{\"keccak256\":\"0xc92790b714bf01a7235b64c6055889a46a48b670a9bc6437d6ebbdc1d8f828f3\",\"urls\":[\"bzz-raw://45971d53dc91f51b229e3432b060d79b4a1f9b5dd1a04ce24b432b54453e5c3d\",\"dweb:/ipfs/QmPgG5L6JumoAcDV8D5CcVjtzUZvDFZoaER7J7V9aTbrvc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 629,
								"contract": "contracts/ERC11551.sol:ERC1155PresetMinterPauser",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)625_storage)"
							},
							{
								"astId": 1084,
								"contract": "contracts/ERC11551.sol:ERC1155PresetMinterPauser",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes4,t_bool)"
							},
							{
								"astId": 1344,
								"contract": "contracts/ERC11551.sol:ERC1155PresetMinterPauser",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1350,
								"contract": "contracts/ERC11551.sol:ERC1155PresetMinterPauser",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1352,
								"contract": "contracts/ERC11551.sol:ERC1155PresetMinterPauser",
								"label": "_uri",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2418,
								"contract": "contracts/ERC11551.sol:ERC1155PresetMinterPauser",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)625_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)625_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AddressSet)190_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 189,
										"contract": "contracts/ERC11551.sol:ERC1155PresetMinterPauser",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)10_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)625_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 622,
										"contract": "contracts/ERC11551.sol:ERC1155PresetMinterPauser",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)190_storage"
									},
									{
										"astId": 624,
										"contract": "contracts/ERC11551.sol:ERC1155PresetMinterPauser",
										"label": "adminRole",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Set)10_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 5,
										"contract": "contracts/ERC11551.sol:ERC1155PresetMinterPauser",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 9,
										"contract": "contracts/ERC11551.sol:ERC1155PresetMinterPauser",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts may inherit from this and call {_registerInterface} to declare their support of an interface.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
							}
						},
						"stateVariables": {
							"_supportedInterfaces": {
								"details": "Mapping of interface ids to whether or not it's supported."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts may inherit from this and call {_registerInterface} to declare their support of an interface.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"}},\"stateVariables\":{\"_supportedInterfaces\":{\"details\":\"Mapping of interface ids to whether or not it's supported.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC11551.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC11551.sol\":{\"keccak256\":\"0xc92790b714bf01a7235b64c6055889a46a48b670a9bc6437d6ebbdc1d8f828f3\",\"urls\":[\"bzz-raw://45971d53dc91f51b229e3432b060d79b4a1f9b5dd1a04ce24b432b54453e5c3d\",\"dweb:/ipfs/QmPgG5L6JumoAcDV8D5CcVjtzUZvDFZoaER7J7V9aTbrvc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1084,
								"contract": "contracts/ERC11551.sol:ERC165",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC11551.sol\":748:7810  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC11551.sol\":748:7810  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204ebd91cc044acd7e9b8122ccce7e4366775ff04b63f451b8ca969b2e0843a75564736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ebd91cc044acd7e9b8122ccce7e4366775ff04b63f451b8ca969b2e0843a75564736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xBD SWAP2 0xCC DIV 0x4A 0xCD PUSH31 0x9B8122CCCE7E4366775FF04B63F451B8CA969B2E0843A75564736F6C634300 MOD 0xC STOP CALLER ",
							"sourceMap": "748:7062:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ebd91cc044acd7e9b8122ccce7e4366775ff04b63f451b8ca969b2e0843a75564736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xBD SWAP2 0xCC DIV 0x4A 0xCD PUSH31 0x9B8122CCCE7E4366775FF04B63F451B8CA969B2E0843A75564736F6C634300 MOD 0xC STOP CALLER ",
							"sourceMap": "748:7062:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 748,
									"end": 7810,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 748,
									"end": 7810,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204ebd91cc044acd7e9b8122ccce7e4366775ff04b63f451b8ca969b2e0843a75564736f6c634300060c0033",
									".code": [
										{
											"begin": 748,
											"end": 7810,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 748,
											"end": 7810,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 748,
											"end": 7810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 748,
											"end": 7810,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 748,
											"end": 7810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 7810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 748,
											"end": 7810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 7810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 7810,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC11551.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC11551.sol\":{\"keccak256\":\"0xc92790b714bf01a7235b64c6055889a46a48b670a9bc6437d6ebbdc1d8f828f3\",\"urls\":[\"bzz-raw://45971d53dc91f51b229e3432b060d79b4a1f9b5dd1a04ce24b432b54453e5c3d\",\"dweb:/ipfs/QmPgG5L6JumoAcDV8D5CcVjtzUZvDFZoaER7J7V9aTbrvc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC11551.sol\":\"IERC1155\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC11551.sol\":{\"keccak256\":\"0xc92790b714bf01a7235b64c6055889a46a48b670a9bc6437d6ebbdc1d8f828f3\",\"urls\":[\"bzz-raw://45971d53dc91f51b229e3432b060d79b4a1f9b5dd1a04ce24b432b54453e5c3d\",\"dweb:/ipfs/QmPgG5L6JumoAcDV8D5CcVjtzUZvDFZoaER7J7V9aTbrvc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC11551.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC11551.sol\":{\"keccak256\":\"0xc92790b714bf01a7235b64c6055889a46a48b670a9bc6437d6ebbdc1d8f828f3\",\"urls\":[\"bzz-raw://45971d53dc91f51b229e3432b060d79b4a1f9b5dd1a04ce24b432b54453e5c3d\",\"dweb:/ipfs/QmPgG5L6JumoAcDV8D5CcVjtzUZvDFZoaER7J7V9aTbrvc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"_Available since v3.1._\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC11551.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC11551.sol\":{\"keccak256\":\"0xc92790b714bf01a7235b64c6055889a46a48b670a9bc6437d6ebbdc1d8f828f3\",\"urls\":[\"bzz-raw://45971d53dc91f51b229e3432b060d79b4a1f9b5dd1a04ce24b432b54453e5c3d\",\"dweb:/ipfs/QmPgG5L6JumoAcDV8D5CcVjtzUZvDFZoaER7J7V9aTbrvc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "_Available since v3.1._",
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC11551.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC11551.sol\":{\"keccak256\":\"0xc92790b714bf01a7235b64c6055889a46a48b670a9bc6437d6ebbdc1d8f828f3\",\"urls\":[\"bzz-raw://45971d53dc91f51b229e3432b060d79b4a1f9b5dd1a04ce24b432b54453e5c3d\",\"dweb:/ipfs/QmPgG5L6JumoAcDV8D5CcVjtzUZvDFZoaER7J7V9aTbrvc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC11551.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC11551.sol\":{\"keccak256\":\"0xc92790b714bf01a7235b64c6055889a46a48b670a9bc6437d6ebbdc1d8f828f3\",\"urls\":[\"bzz-raw://45971d53dc91f51b229e3432b060d79b4a1f9b5dd1a04ce24b432b54453e5c3d\",\"dweb:/ipfs/QmPgG5L6JumoAcDV8D5CcVjtzUZvDFZoaER7J7V9aTbrvc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2418,
								"contract": "contracts/ERC11551.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC11551.sol\":31944:36522  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC11551.sol\":31944:36522  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b968e53d797480d482f30aaac0402540db91b579ce6c08cc78e51e836d9950af64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b968e53d797480d482f30aaac0402540db91b579ce6c08cc78e51e836d9950af64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 PUSH9 0xE53D797480D482F30A 0xAA 0xC0 BLOCKHASH 0x25 BLOCKHASH 0xDB SWAP2 0xB5 PUSH26 0xCE6C08CC78E51E836D9950AF64736F6C634300060C0033000000 ",
							"sourceMap": "31944:4578:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b968e53d797480d482f30aaac0402540db91b579ce6c08cc78e51e836d9950af64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 PUSH9 0xE53D797480D482F30A 0xAA 0xC0 BLOCKHASH 0x25 BLOCKHASH 0xDB SWAP2 0xB5 PUSH26 0xCE6C08CC78E51E836D9950AF64736F6C634300060C0033000000 ",
							"sourceMap": "31944:4578:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 31944,
									"end": 36522,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 31944,
									"end": 36522,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b968e53d797480d482f30aaac0402540db91b579ce6c08cc78e51e836d9950af64736f6c634300060c0033",
									".code": [
										{
											"begin": 31944,
											"end": 36522,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 31944,
											"end": 36522,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 31944,
											"end": 36522,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31944,
											"end": 36522,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 31944,
											"end": 36522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31944,
											"end": 36522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31944,
											"end": 36522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31944,
											"end": 36522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31944,
											"end": 36522,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC11551.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC11551.sol\":{\"keccak256\":\"0xc92790b714bf01a7235b64c6055889a46a48b670a9bc6437d6ebbdc1d8f828f3\",\"urls\":[\"bzz-raw://45971d53dc91f51b229e3432b060d79b4a1f9b5dd1a04ce24b432b54453e5c3d\",\"dweb:/ipfs/QmPgG5L6JumoAcDV8D5CcVjtzUZvDFZoaER7J7V9aTbrvc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/ERC11551.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/ERC11551.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/ERC11551.sol": {
				"ast": {
					"absolutePath": "contracts/ERC11551.sol",
					"exportedSymbols": {
						"AccessControl": [
							889
						],
						"Address": [
							588
						],
						"Context": [
							610
						],
						"ERC1155": [
							2335
						],
						"ERC1155Burnable": [
							2402
						],
						"ERC1155Pausable": [
							2535
						],
						"ERC1155PresetMinterPauser": [
							2710
						],
						"ERC165": [
							1127
						],
						"EnumerableSet": [
							394
						],
						"IERC1155": [
							1020
						],
						"IERC1155MetadataURI": [
							1033
						],
						"IERC1155Receiver": [
							1072
						],
						"IERC165": [
							900
						],
						"Pausable": [
							2490
						],
						"SafeMath": [
							1322
						]
					},
					"id": 2711,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "57:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "82:665:0",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`\n (`UintSet`) are supported."
							},
							"fullyImplemented": true,
							"id": 394,
							"linearizedBaseContracts": [
								394
							],
							"name": "EnumerableSet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "_values",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 10,
											"src": "1270:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 3,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 4,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "1270:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "_indexes",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 10,
											"src": "1421:37:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 8,
												"keyType": {
													"id": 6,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1430:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1421:28:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nodeType": "StructDefinition",
									"scope": 394,
									"src": "1216:249:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "1704:335:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1718:22:0",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 21,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "1729:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"argumentTypes": null,
																"id": 22,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "1734:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 20,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "1719:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1719:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 48,
													"nodeType": "Block",
													"src": "1996:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 19,
															"id": 47,
															"nodeType": "Return",
															"src": "2010:12:0"
														}
													]
												},
												"id": 49,
												"nodeType": "IfStatement",
												"src": "1714:319:0",
												"trueBody": {
													"id": 45,
													"nodeType": "Block",
													"src": "1742:248:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 30,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "1773:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 25,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 13,
																			"src": "1756:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 28,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "1756:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1756:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32)"
																	}
																},
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1756:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 32,
															"nodeType": "ExpressionStatement",
															"src": "1756:23:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 33,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 13,
																			"src": "1914:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 36,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 9,
																		"src": "1914:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 37,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 35,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "1927:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1914:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 38,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 13,
																			"src": "1936:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 39,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "1936:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 40,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1936:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1914:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 42,
															"nodeType": "ExpressionStatement",
															"src": "1914:40:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1975:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 19,
															"id": 44,
															"nodeType": "Return",
															"src": "1968:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1471:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 51,
												"src": "1649:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 12,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 10,
													"src": "1649:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 51,
												"src": "1666:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 14,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1648:32:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 51,
												"src": "1698:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1698:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1697:6:0"
									},
									"scope": 394,
									"src": "1635:404:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "2279:1440:0",
										"statements": [
											{
												"assignments": [
													62
												],
												"declarations": [
													{
														"constant": false,
														"id": 62,
														"mutability": "mutable",
														"name": "valueIndex",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 130,
														"src": "2389:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 61,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2389:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 67,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 63,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "2410:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "2410:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 66,
													"indexExpression": {
														"argumentTypes": null,
														"id": 65,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2423:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2410:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2389:40:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 68,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "2444:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2458:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2444:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "3676:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3697:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 60,
															"id": 127,
															"nodeType": "Return",
															"src": "3690:12:0"
														}
													]
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "2440:1273:0",
												"trueBody": {
													"id": 125,
													"nodeType": "Block",
													"src": "2461:1209:0",
													"statements": [
														{
															"assignments": [
																72
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 72,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 125,
																	"src": "2801:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 71,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2801:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 76,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 73,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "2825:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 74,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2838:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2825:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2801:38:0"
														},
														{
															"assignments": [
																78
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 78,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 125,
																	"src": "2853:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 77,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2853:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 84,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 79,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 54,
																			"src": "2873:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 80,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "2873:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 81,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2873:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 82,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2894:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2873:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2853:42:0"
														},
														{
															"assignments": [
																86
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 86,
																	"mutability": "mutable",
																	"name": "lastvalue",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 125,
																	"src": "3135:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 85,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "3135:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 91,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 87,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 54,
																		"src": "3155:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 88,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "3155:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 90,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 89,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "3167:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3155:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3135:42:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 92,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 54,
																			"src": "3269:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 95,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "3269:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 96,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 94,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 72,
																		"src": "3281:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3269:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 97,
																	"name": "lastvalue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "3298:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "3269:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "3269:38:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 100,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 54,
																			"src": "3373:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 103,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 9,
																		"src": "3373:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 104,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 102,
																		"name": "lastvalue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 86,
																		"src": "3386:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3373:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 105,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 72,
																		"src": "3399:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3415:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3399:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3373:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 109,
															"nodeType": "ExpressionStatement",
															"src": "3373:43:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 110,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 54,
																			"src": "3522:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 113,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "3522:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3522:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3522:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 116,
															"nodeType": "ExpressionStatement",
															"src": "3522:17:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3607:26:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 117,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 54,
																			"src": "3614:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 118,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 9,
																		"src": "3614:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 120,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 119,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 56,
																		"src": "3627:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3614:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 122,
															"nodeType": "ExpressionStatement",
															"src": "3607:26:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3655:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 60,
															"id": 124,
															"nodeType": "Return",
															"src": "3648:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2045:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "2224:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 53,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 10,
													"src": "2224:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "2241:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 55,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2223:32:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 131,
												"src": "2273:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 58,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2273:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2272:6:0"
									},
									"scope": 394,
									"src": "2207:1512:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "3879:48:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 141,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "3896:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 9,
															"src": "3896:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 144,
														"indexExpression": {
															"argumentTypes": null,
															"id": 143,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "3909:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3896:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3919:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3896:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 140,
												"id": 147,
												"nodeType": "Return",
												"src": "3889:31:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "3725:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "3819:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 133,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 10,
													"src": "3819:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "3836:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 135,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3836:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3818:32:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 149,
												"src": "3873:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3873:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3872:6:0"
									},
									"scope": 394,
									"src": "3800:127:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "4073:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 157,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4090:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 158,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "4090:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4090:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 156,
												"id": 160,
												"nodeType": "Return",
												"src": "4083:25:0"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "3933:70:0",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 162,
												"src": "4025:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 151,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 10,
													"src": "4025:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4024:17:0"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 162,
												"src": "4064:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4063:9:0"
									},
									"scope": 394,
									"src": "4008:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "4523:125:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 173,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 165,
																		"src": "4541:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 174,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "4541:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4541:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 176,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 167,
																"src": "4562:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4541:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4569:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															},
															"value": "EnumerableSet: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															}
														],
														"id": 172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4533:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4533:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "4533:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 181,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "4623:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 182,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "4623:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 184,
													"indexExpression": {
														"argumentTypes": null,
														"id": 183,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "4635:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4623:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 171,
												"id": 185,
												"nodeType": "Return",
												"src": "4616:25:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "4120:322:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 187,
												"src": "4460:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 164,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 10,
													"src": "4460:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 187,
												"src": "4477:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4477:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4459:32:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 187,
												"src": "4514:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4513:9:0"
									},
									"scope": 394,
									"src": "4447:201:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 190,
									"members": [
										{
											"constant": false,
											"id": 189,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 190,
											"src": "4701:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 188,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 10,
												"src": "4701:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nodeType": "StructDefinition",
									"scope": 394,
									"src": "4673:45:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "4964:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 201,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "4986:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 202,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 189,
															"src": "4986:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 207,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 195,
																			"src": "5014:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5006:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 205,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5006:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5006:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4998:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 203,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4998:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4998:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 200,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "4981:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4981:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 199,
												"id": 211,
												"nodeType": "Return",
												"src": "4974:48:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "4724:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 213,
												"src": "4901:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 192,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 190,
													"src": "4901:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 213,
												"src": "4925:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4900:39:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 213,
												"src": "4958:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 197,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4958:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4957:6:0"
									},
									"scope": 394,
									"src": "4888:141:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "5276:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 224,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "5301:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 225,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 189,
															"src": "5301:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 230,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "5329:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5321:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 228,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5321:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5321:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5313:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 226,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5313:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5313:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 223,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "5293:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5293:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 222,
												"id": 234,
												"nodeType": "Return",
												"src": "5286:51:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "5035:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 236,
												"src": "5213:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 215,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 190,
													"src": "5213:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 236,
												"src": "5237:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5212:39:0"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 236,
												"src": "5270:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5270:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5269:6:0"
									},
									"scope": 394,
									"src": "5197:147:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "5511:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 247,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "5538:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 248,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 189,
															"src": "5538:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 253,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 241,
																			"src": "5566:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5558:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 251,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5558:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5558:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5550:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 249,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5550:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5550:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 246,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "5528:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5528:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 245,
												"id": 257,
												"nodeType": "Return",
												"src": "5521:53:0"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "5350:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "5443:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 238,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 190,
													"src": "5443:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "5467:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5467:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5442:39:0"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 259,
												"src": "5505:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 243,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5505:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5504:6:0"
									},
									"scope": 394,
									"src": "5425:156:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "5734:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 268,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "5759:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 189,
															"src": "5759:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 267,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "5751:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5751:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 271,
												"nodeType": "Return",
												"src": "5744:26:0"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5587:70:0",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "5678:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 261,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 190,
													"src": "5678:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5677:24:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "5725:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5724:9:0"
									},
									"scope": 394,
									"src": "5662:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "6192:64:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 288,
																				"name": "set",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 276,
																				"src": "6229:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
																					"typeString": "struct EnumerableSet.AddressSet storage pointer"
																				}
																			},
																			"id": 289,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "_inner",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 189,
																			"src": "6229:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$10_storage",
																				"typeString": "struct EnumerableSet.Set storage ref"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 290,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 278,
																			"src": "6241:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_Set_$10_storage",
																				"typeString": "struct EnumerableSet.Set storage ref"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 287,
																		"name": "_at",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 187,
																		"src": "6225:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																			"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6225:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6217:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 285,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6217:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6217:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6209:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 283,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6209:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6209:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 282,
												"id": 294,
												"nodeType": "Return",
												"src": "6202:47:0"
											}
										]
									},
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "5782:322:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 296,
												"src": "6121:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 275,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 190,
													"src": "6121:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 296,
												"src": "6145:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6145:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6120:39:0"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 296,
												"src": "6183:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6182:9:0"
									},
									"scope": 394,
									"src": "6109:147:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 299,
									"members": [
										{
											"constant": false,
											"id": 298,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 299,
											"src": "6304:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 297,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 10,
												"src": "6304:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$10_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nodeType": "StructDefinition",
									"scope": 394,
									"src": "6279:42:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "6564:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 310,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "6586:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 298,
															"src": "6586:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 314,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "6606:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6598:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 312,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6598:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6598:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 309,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "6581:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6581:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 308,
												"id": 317,
												"nodeType": "Return",
												"src": "6574:39:0"
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "6327:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 319,
												"src": "6504:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 301,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 299,
													"src": "6504:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 319,
												"src": "6525:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6525:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6503:36:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 319,
												"src": "6558:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6558:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6557:6:0"
									},
									"scope": 394,
									"src": "6491:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "6864:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 330,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "6889:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 298,
															"src": "6889:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 334,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "6909:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6901:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 332,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6901:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6901:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 329,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "6881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6881:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 328,
												"id": 337,
												"nodeType": "Return",
												"src": "6874:42:0"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "6626:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 339,
												"src": "6804:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 321,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 299,
													"src": "6804:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 339,
												"src": "6825:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6825:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6803:36:0"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 339,
												"src": "6858:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 326,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6858:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6857:6:0"
									},
									"scope": 394,
									"src": "6788:135:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "7087:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 350,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "7114:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 298,
															"src": "7114:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 354,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "7134:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7126:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 352,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7126:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7126:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 349,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "7104:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7104:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 348,
												"id": 357,
												"nodeType": "Return",
												"src": "7097:44:0"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "6929:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 359,
												"src": "7022:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 341,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 299,
													"src": "7022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 359,
												"src": "7043:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7021:36:0"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 359,
												"src": "7081:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 346,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7081:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7080:6:0"
									},
									"scope": 394,
									"src": "7004:144:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "7298:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 368,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "7323:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 298,
															"src": "7323:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$10_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 367,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "7315:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7315:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 366,
												"id": 371,
												"nodeType": "Return",
												"src": "7308:26:0"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "7154:70:0",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 373,
												"src": "7245:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 361,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 299,
													"src": "7245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7244:21:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 373,
												"src": "7289:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7288:9:0"
									},
									"scope": 394,
									"src": "7229:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "7753:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 386,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "7782:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 387,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 298,
																	"src": "7782:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$10_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 388,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "7794:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$10_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 385,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "7778:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$10_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7778:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 384,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7770:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 383,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7770:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7770:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 382,
												"id": 391,
												"nodeType": "Return",
												"src": "7763:38:0"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "7346:322:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 393,
												"src": "7685:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 375,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 299,
													"src": "7685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$299_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 393,
												"src": "7706:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7706:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7684:36:0"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 393,
												"src": "7744:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7743:9:0"
									},
									"scope": 394,
									"src": "7673:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2711,
							"src": "748:7062:0"
						},
						{
							"id": 395,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "7862:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 396,
								"nodeType": "StructuredDocumentation",
								"src": "7887:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 588,
							"linearizedBaseContracts": [
								588
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "8613:347:0",
										"statements": [
											{
												"assignments": [
													405
												],
												"declarations": [
													{
														"constant": false,
														"id": 405,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 412,
														"src": "8810:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 404,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8810:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8810:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8897:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8899:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "8919:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "8907:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8907:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8899:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 399,
														"isOffset": false,
														"isSlot": false,
														"src": "8919:7:0",
														"valueSize": 1
													},
													{
														"declaration": 405,
														"isOffset": false,
														"isSlot": false,
														"src": "8899:4:0",
														"valueSize": 1
													}
												],
												"id": 407,
												"nodeType": "InlineAssembly",
												"src": "8888:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 408,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "8945:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8952:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8945:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 403,
												"id": 411,
												"nodeType": "Return",
												"src": "8938:15:0"
											}
										]
									},
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "7977:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 413,
												"src": "8567:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8566:17:0"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 413,
												"src": "8607:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 401,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8607:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8606:6:0"
									},
									"scope": 588,
									"src": "8547:413:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "9948:320:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 424,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "9974:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$588",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$588",
																				"typeString": "library Address"
																			}
																		],
																		"id": 423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9966:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 422,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9966:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9966:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "9966:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 427,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "9991:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9966:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9999:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 421,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9958:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9958:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "9958:73:0"
											},
											{
												"assignments": [
													433,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 446,
														"src": "10120:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 432,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10120:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 440,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10170:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 434,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "10138:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10138:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 436,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "10161:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10138:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10119:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 442,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "10191:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10200:60:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 441,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10183:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10183:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "10183:78:0"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "8966:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "9896:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9896:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 447,
												"src": "9923:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9923:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9895:43:0"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9948:0:0"
									},
									"scope": 588,
									"src": "9877:391:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "11098:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 458,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "11126:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 459,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "11134:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11140:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 457,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															464,
															484
														],
														"referencedDeclaration": 484,
														"src": "11113:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11113:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 456,
												"id": 462,
												"nodeType": "Return",
												"src": "11106:67:0"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "10274:730:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 464,
												"src": "11031:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 464,
												"src": "11047:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 451,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11047:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11030:35:0"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 464,
												"src": "11084:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 454,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11084:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11083:14:0"
									},
									"scope": 588,
									"src": "11009:171:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "11519:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 477,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "11559:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 478,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "11567:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11573:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 480,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "11576:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 476,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "11536:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11536:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 475,
												"id": 482,
												"nodeType": "Return",
												"src": "11529:60:0"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "11186:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 484,
												"src": "11424:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 484,
												"src": "11440:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11440:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 484,
												"src": "11459:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 470,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11459:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11423:63:0"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 484,
												"src": "11505:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11505:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11504:14:0"
									},
									"scope": 588,
									"src": "11402:194:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "12071:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 497,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "12110:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 498,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "12118:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 499,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "12124:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12131:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 496,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															504,
															537
														],
														"referencedDeclaration": 537,
														"src": "12088:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12088:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 495,
												"id": 502,
												"nodeType": "Return",
												"src": "12081:94:0"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "11602:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 504,
												"src": "11989:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 504,
												"src": "12005:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 488,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12005:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 504,
												"src": "12024:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11988:50:0"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 504,
												"src": "12057:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12057:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12056:14:0"
									},
									"scope": 588,
									"src": "11958:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 536,
										"nodeType": "Block",
										"src": "12571:172:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 521,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "12597:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$588",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$588",
																				"typeString": "library Address"
																			}
																		],
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12589:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 519,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12589:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12589:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12589:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 524,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "12614:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12589:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12621:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12581:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12581:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "12581:81:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 530,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "12702:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 531,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "12710:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 532,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "12716:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 533,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "12723:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 529,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "12679:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12679:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 517,
												"id": 535,
												"nodeType": "Return",
												"src": "12672:64:0"
											}
										]
									},
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "12188:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 537,
												"src": "12461:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 537,
												"src": "12477:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 508,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12477:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 537,
												"src": "12496:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 537,
												"src": "12511:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12511:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12460:78:0"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 537,
												"src": "12557:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12557:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12556:14:0"
									},
									"scope": 588,
									"src": "12430:313:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "12893:814:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 552,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "12922:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 551,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "12911:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12911:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12931:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12903:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12903:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "12903:60:0"
											},
											{
												"assignments": [
													558,
													560
												],
												"declarations": [
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 586,
														"src": "13034:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 557,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13034:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 560,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 586,
														"src": "13048:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 559,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13048:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 565,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "13106:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 561,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "13075:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13075:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 563,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "13095:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "13075:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13075:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13033:78:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 568,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 558,
													"src": "13125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 584,
													"nodeType": "Block",
													"src": "13182:519:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 572,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 560,
																		"src": "13266:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13266:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13286:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13266:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 582,
																"nodeType": "Block",
																"src": "13638:53:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 579,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 545,
																					"src": "13663:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 578,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "13656:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13656:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 581,
																		"nodeType": "ExpressionStatement",
																		"src": "13656:20:0"
																	}
																]
															},
															"id": 583,
															"nodeType": "IfStatement",
															"src": "13262:429:0",
															"trueBody": {
																"id": 577,
																"nodeType": "Block",
																"src": "13289:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "13473:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "13495:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "13524:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "13518:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13518:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "13499:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "13567:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "13571:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "13563:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13563:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "13584:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "13556:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13556:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "13556:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 560,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "13524:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 560,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "13571:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 576,
																		"nodeType": "InlineAssembly",
																		"src": "13464:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 585,
												"nodeType": "IfStatement",
												"src": "13121:580:0",
												"trueBody": {
													"id": 571,
													"nodeType": "Block",
													"src": "13134:42:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 569,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "13155:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 549,
															"id": 570,
															"nodeType": "Return",
															"src": "13148:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 587,
												"src": "12781:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 587,
												"src": "12797:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 540,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12797:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 587,
												"src": "12816:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 587,
												"src": "12834:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 544,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12834:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12780:81:0"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 587,
												"src": "12879:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12879:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12878:14:0"
									},
									"scope": 588,
									"src": "12749:958:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2711,
							"src": "7955:5754:0"
						},
						{
							"id": 589,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "13759:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 610,
							"linearizedBaseContracts": [
								610
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "14386:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 594,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "14403:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "14403:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 593,
												"id": 596,
												"nodeType": "Return",
												"src": "14396:17:0"
											}
										]
									},
									"documentation": null,
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14335:2:0"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 598,
												"src": "14369:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14369:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14368:17:0"
									},
									"scope": 610,
									"src": "14316:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "14491:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 603,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "14501:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$610",
														"typeString": "contract Context"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "14501:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 605,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "14641:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "14641:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 602,
												"id": 607,
												"nodeType": "Return",
												"src": "14634:15:0"
											}
										]
									},
									"documentation": null,
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14443:2:0"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 609,
												"src": "14477:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 600,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14477:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14476:14:0"
									},
									"scope": 610,
									"src": "14426:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2711,
							"src": "14284:374:0"
						},
						{
							"id": 611,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "14717:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 613,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 610,
										"src": "16057:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$610",
											"typeString": "contract Context"
										}
									},
									"id": 614,
									"nodeType": "InheritanceSpecifier",
									"src": "16057:7:0"
								}
							],
							"contractDependencies": [
								610
							],
							"contractKind": "contract",
							"documentation": {
								"id": 612,
								"nodeType": "StructuredDocumentation",
								"src": "14745:1276:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 889,
							"linearizedBaseContracts": [
								889,
								610
							],
							"name": "AccessControl",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 617,
									"libraryName": {
										"contractScope": null,
										"id": 615,
										"name": "EnumerableSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 394,
										"src": "16077:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_EnumerableSet_$394",
											"typeString": "library EnumerableSet"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "16071:49:0",
									"typeName": {
										"contractScope": null,
										"id": 616,
										"name": "EnumerableSet.AddressSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 190,
										"src": "16095:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"id": 620,
									"libraryName": {
										"contractScope": null,
										"id": 618,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 588,
										"src": "16131:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$588",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "16125:26:0",
									"typeName": {
										"id": 619,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "16143:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 625,
									"members": [
										{
											"constant": false,
											"id": 622,
											"mutability": "mutable",
											"name": "members",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 625,
											"src": "16183:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
												"typeString": "struct EnumerableSet.AddressSet"
											},
											"typeName": {
												"contractScope": null,
												"id": 621,
												"name": "EnumerableSet.AddressSet",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 190,
												"src": "16183:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$190_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 624,
											"mutability": "mutable",
											"name": "adminRole",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 625,
											"src": "16225:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 623,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "16225:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nodeType": "StructDefinition",
									"scope": 889,
									"src": "16157:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 629,
									"mutability": "mutable",
									"name": "_roles",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 889,
									"src": "16255:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$625_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 628,
										"keyType": {
											"id": 626,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "16264:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "16255:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$625_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"contractScope": null,
											"id": 627,
											"name": "RoleData",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 625,
											"src": "16275:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$625_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 632,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 889,
									"src": "16306:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 630,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "16306:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783030",
										"id": 631,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "16351:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "16362:292:0",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"id": 641,
									"name": "RoleAdminChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 641,
												"src": "16682:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 634,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 641,
												"src": "16704:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 636,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 641,
												"src": "16739:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 638,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16739:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16681:87:0"
									},
									"src": "16659:110:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "16775:198:0",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {_setupRole}."
									},
									"id": 650,
									"name": "RoleGranted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 650,
												"src": "16996:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 643,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16996:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 650,
												"src": "17018:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 650,
												"src": "17043:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17043:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16995:71:0"
									},
									"src": "16978:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "17073:275:0",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 659,
									"name": "RoleRevoked",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 659,
												"src": "17371:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 652,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 659,
												"src": "17393:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 659,
												"src": "17418:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17370:71:0"
									},
									"src": "17353:89:0"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "17604:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 674,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "17651:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 669,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "17621:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$625_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 671,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 670,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "17628:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17621:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$625_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 672,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 622,
															"src": "17621:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$190_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 673,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 259,
														"src": "17621:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$190_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$190_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17621:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 668,
												"id": 676,
												"nodeType": "Return",
												"src": "17614:45:0"
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "17448:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 678,
												"src": "17546:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 661,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 678,
												"src": "17560:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17560:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17545:31:0"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 678,
												"src": "17598:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 666,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17598:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17597:6:0"
									},
									"scope": 889,
									"src": "17529:137:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "17906:53:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 686,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "17923:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$625_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 688,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 687,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "17930:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17923:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$625_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 622,
															"src": "17923:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$190_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 690,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 273,
														"src": "17923:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$190_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$190_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17923:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 685,
												"id": 692,
												"nodeType": "Return",
												"src": "17916:36:0"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "17672:157:0",
										"text": " @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."
									},
									"functionSelector": "ca15c873",
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 694,
												"src": "17862:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 680,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17861:14:0"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 694,
												"src": "17897:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17897:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17896:9:0"
									},
									"scope": 889,
									"src": "17834:125:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "18626:54:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 709,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "18667:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 704,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "18643:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$625_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 706,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 705,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "18650:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18643:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$625_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 707,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 622,
															"src": "18643:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$190_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 708,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 296,
														"src": "18643:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$190_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$190_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18643:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 703,
												"id": 711,
												"nodeType": "Return",
												"src": "18636:37:0"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "17965:574:0",
										"text": " @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."
									},
									"functionSelector": "9010d07c",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 713,
												"src": "18567:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 696,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 713,
												"src": "18581:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18581:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18566:29:0"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 713,
												"src": "18617:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18617:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18616:9:0"
									},
									"scope": 889,
									"src": "18544:136:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "18927:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 721,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "18944:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$625_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 723,
														"indexExpression": {
															"argumentTypes": null,
															"id": 722,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "18951:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18944:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$625_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 624,
													"src": "18944:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 720,
												"id": 725,
												"nodeType": "Return",
												"src": "18937:29:0"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "18686:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 727,
												"src": "18883:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 715,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18883:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18882:14:0"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 727,
												"src": "18918:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 718,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18917:9:0"
									},
									"scope": 889,
									"src": "18861:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "19288:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 737,
																			"name": "_roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 629,
																			"src": "19314:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$625_storage_$",
																				"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																			}
																		},
																		"id": 739,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 738,
																			"name": "role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 730,
																			"src": "19321:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "19314:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoleData_$625_storage",
																			"typeString": "struct AccessControl.RoleData storage ref"
																		}
																	},
																	"id": 740,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "adminRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 624,
																	"src": "19314:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 741,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 598,
																		"src": "19338:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19338:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 736,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "19306:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19306:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74",
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19353:49:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811",
																"typeString": "literal_string \"AccessControl: sender must be an admin to grant\""
															},
															"value": "AccessControl: sender must be an admin to grant"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811",
																"typeString": "literal_string \"AccessControl: sender must be an admin to grant\""
															}
														],
														"id": 735,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "19298:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19298:105:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "19298:105:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 748,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "19425:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 749,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "19431:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 747,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "19414:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19414:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "19414:25:0"
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "18979:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 753,
												"src": "19242:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 729,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19242:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 753,
												"src": "19256:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19256:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19241:31:0"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19288:0:0"
									},
									"scope": 889,
									"src": "19223:223:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "19746:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 763,
																			"name": "_roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 629,
																			"src": "19772:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$625_storage_$",
																				"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																			}
																		},
																		"id": 765,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 764,
																			"name": "role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 756,
																			"src": "19779:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "19772:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoleData_$625_storage",
																			"typeString": "struct AccessControl.RoleData storage ref"
																		}
																	},
																	"id": 766,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "adminRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 624,
																	"src": "19772:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 767,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 598,
																		"src": "19796:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19796:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 762,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "19764:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19764:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65",
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19811:50:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3",
																"typeString": "literal_string \"AccessControl: sender must be an admin to revoke\""
															},
															"value": "AccessControl: sender must be an admin to revoke"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3",
																"typeString": "literal_string \"AccessControl: sender must be an admin to revoke\""
															}
														],
														"id": 761,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "19756:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19756:106:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "19756:106:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 774,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "19885:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 775,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "19891:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 773,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "19873:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19873:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "19873:26:0"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "19452:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 779,
												"src": "19700:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 755,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19700:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 779,
												"src": "19714:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19714:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19699:31:0"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19746:0:0"
									},
									"scope": 889,
									"src": "19680:226:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "20465:137:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 788,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "20483:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 789,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "20494:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20494:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "20483:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20508:49:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 787,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "20475:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20475:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "20475:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 796,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "20581:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 797,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "20587:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 795,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "20569:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20569:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "20569:26:0"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "19912:480:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 801,
												"src": "20419:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 781,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 801,
												"src": "20433:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20433:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20418:31:0"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20465:0:0"
									},
									"scope": 889,
									"src": "20397:205:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "21235:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 810,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "21256:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 811,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "21262:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 809,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "21245:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21245:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "21245:25:0"
											}
										]
									},
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "20608:554:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ===="
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 815,
												"src": "21187:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 803,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 815,
												"src": "21201:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21186:31:0"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21235:0:0"
									},
									"scope": 889,
									"src": "21167:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "21475:123:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 824,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "21507:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 825,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "21513:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$625_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 827,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 826,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "21520:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21513:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$625_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 828,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "adminRole",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 624,
															"src": "21513:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 829,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "21537:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 823,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "21490:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21490:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 831,
												"nodeType": "EmitStatement",
												"src": "21485:62:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 832,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "21557:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$625_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 834,
															"indexExpression": {
																"argumentTypes": null,
																"id": 833,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "21564:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21557:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$625_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 624,
														"src": "21557:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 836,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "21582:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "21557:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "21557:34:0"
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "21283:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 840,
												"src": "21425:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 817,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "adminRole",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 840,
												"src": "21439:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 819,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21424:33:0"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21475:0:0"
									},
									"scope": 889,
									"src": "21402:196:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "21663:125:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 852,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "21702:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 847,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "21677:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$625_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 849,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 848,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "21684:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21677:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$625_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 622,
															"src": "21677:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$190_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 851,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 213,
														"src": "21677:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$190_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$190_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21677:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 862,
												"nodeType": "IfStatement",
												"src": "21673:109:0",
												"trueBody": {
													"id": 861,
													"nodeType": "Block",
													"src": "21712:70:0",
													"statements": [
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 855,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 842,
																		"src": "21743:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 856,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "21749:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 857,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "21758:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21758:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 854,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 650,
																	"src": "21731:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21731:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 860,
															"nodeType": "EmitStatement",
															"src": "21726:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 864,
												"src": "21624:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 841,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 864,
												"src": "21638:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21623:31:0"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21663:0:0"
									},
									"scope": 889,
									"src": "21604:184:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "21854:128:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 876,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "21896:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 871,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "21868:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$625_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 873,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 872,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "21875:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21868:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$625_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 874,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 622,
															"src": "21868:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$190_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 875,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 236,
														"src": "21868:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$190_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$190_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21868:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 886,
												"nodeType": "IfStatement",
												"src": "21864:112:0",
												"trueBody": {
													"id": 885,
													"nodeType": "Block",
													"src": "21906:70:0",
													"statements": [
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 879,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "21937:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 880,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "21943:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 881,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "21952:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21952:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 878,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "21925:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21925:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 884,
															"nodeType": "EmitStatement",
															"src": "21920:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 888,
												"src": "21815:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 865,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21815:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 888,
												"src": "21829:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21814:31:0"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21854:0:0"
									},
									"scope": 889,
									"src": "21794:188:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2711,
							"src": "16022:5962:0"
						},
						{
							"id": 890,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "22044:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 891,
								"nodeType": "StructuredDocumentation",
								"src": "22069:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 900,
							"linearizedBaseContracts": [
								900
							],
							"name": "IERC165",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "22373:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 899,
												"src": "22745:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 893,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "22745:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22744:20:0"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 899,
												"src": "22788:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 896,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22788:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "22787:6:0"
									},
									"scope": 900,
									"src": "22718:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2711,
							"src": "22349:447:0"
						},
						{
							"id": 901,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "22857:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 903,
										"name": "IERC165",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 900,
										"src": "23071:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC165_$900",
											"typeString": "contract IERC165"
										}
									},
									"id": 904,
									"nodeType": "InheritanceSpecifier",
									"src": "23071:7:0"
								}
							],
							"contractDependencies": [
								900
							],
							"contractKind": "interface",
							"documentation": {
								"id": 902,
								"nodeType": "StructuredDocumentation",
								"src": "22883:165:0",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1020,
							"linearizedBaseContracts": [
								1020,
								900
							],
							"name": "IERC1155",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "23085:121:0",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 917,
									"name": "TransferSingle",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 917,
												"src": "23232:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23232:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 917,
												"src": "23258:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 917,
												"src": "23280:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23280:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 917,
												"src": "23300:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 917,
												"src": "23312:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23231:95:0"
									},
									"src": "23211:116:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "23333:144:0",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 932,
									"name": "TransferBatch",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 932,
												"src": "23502:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23502:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 932,
												"src": "23528:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23528:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 932,
												"src": "23550:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 932,
												"src": "23570:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 925,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "23570:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 926,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "23570:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 932,
												"src": "23585:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 928,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "23585:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 929,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "23585:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23501:101:0"
									},
									"src": "23482:121:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "23609:147:0",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 941,
									"name": "ApprovalForAll",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 941,
												"src": "23782:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 941,
												"src": "23807:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 941,
												"src": "23833:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23833:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23781:66:0"
									},
									"src": "23761:87:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "23854:343:0",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 948,
									"name": "URI",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 948,
												"src": "24212:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 943,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24212:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 948,
												"src": "24226:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24211:34:0"
									},
									"src": "24202:44:0"
								},
								{
									"body": null,
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "24252:173:0",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 958,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 958,
												"src": "24449:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24449:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 958,
												"src": "24466:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24466:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24448:29:0"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 958,
												"src": "24501:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24500:9:0"
									},
									"scope": 1020,
									"src": "24430:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "24516:188:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 971,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "accounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 971,
												"src": "24733:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 960,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "24733:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 961,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "24733:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 971,
												"src": "24762:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 963,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "24762:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 964,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "24762:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24732:53:0"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 971,
												"src": "24809:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 967,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "24809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 968,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "24809:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24808:18:0"
									},
									"scope": 1020,
									"src": "24709:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "24833:248:0",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 979,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 979,
												"src": "25113:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25113:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 979,
												"src": "25131:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 975,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25131:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25112:33:0"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25154:0:0"
									},
									"scope": 1020,
									"src": "25086:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "25161:135:0",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 989,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 989,
												"src": "25327:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25327:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 989,
												"src": "25344:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25344:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25326:35:0"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 989,
												"src": "25385:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 986,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25385:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25384:6:0"
									},
									"scope": 1020,
									"src": "25301:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "25397:559:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1003,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1003,
												"src": "25987:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1003,
												"src": "26001:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26001:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1003,
												"src": "26013:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1003,
												"src": "26025:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1003,
												"src": "26041:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 999,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26041:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25986:75:0"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26070:0:0"
									},
									"scope": 1020,
									"src": "25961:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1004,
										"nodeType": "StructuredDocumentation",
										"src": "26077:390:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1019,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1019,
												"src": "26503:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1019,
												"src": "26517:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1019,
												"src": "26529:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1009,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "26529:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1010,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "26529:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1019,
												"src": "26553:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1012,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "26553:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1013,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "26553:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1019,
												"src": "26581:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1015,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26581:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "26502:99:0"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26610:0:0"
									},
									"scope": 1020,
									"src": "26472:139:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2711,
							"src": "23049:3564:0"
						},
						{
							"id": 1021,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "26685:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1023,
										"name": "IERC1155",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1020,
										"src": "26939:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1155_$1020",
											"typeString": "contract IERC1155"
										}
									},
									"id": 1024,
									"nodeType": "InheritanceSpecifier",
									"src": "26939:8:0"
								}
							],
							"contractDependencies": [
								900,
								1020
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1022,
								"nodeType": "StructuredDocumentation",
								"src": "26711:194:0",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1033,
							"linearizedBaseContracts": [
								1033,
								1020,
								900
							],
							"name": "IERC1155MetadataURI",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "26954:192:0",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1032,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1032,
												"src": "27164:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27163:12:0"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1032,
												"src": "27199:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1029,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27199:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "27198:15:0"
									},
									"scope": 1033,
									"src": "27151:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2711,
							"src": "26906:310:0"
						},
						{
							"id": 1034,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "27285:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1036,
										"name": "IERC165",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 900,
										"src": "27376:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC165_$900",
											"typeString": "contract IERC165"
										}
									},
									"id": 1037,
									"nodeType": "InheritanceSpecifier",
									"src": "27376:7:0"
								}
							],
							"contractDependencies": [
								900
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1035,
								"nodeType": "StructuredDocumentation",
								"src": "27311:34:0",
								"text": " _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1072,
							"linearizedBaseContracts": [
								1072,
								900
							],
							"name": "IERC1155Receiver",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "27391:816:0",
										"text": "@dev Handles the receipt of a single ERC1155 token type. This function is\ncalled at the end of a `safeTransferFrom` after the balance has been updated.\nTo accept the transfer, this must return\n`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n(i.e. 0xf23a6e61, or its own function selector).\n@param operator The address which initiated the transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param id The ID of the token being transferred\n@param value The amount of tokens being transferred\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1053,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1053,
												"src": "28248:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1053,
												"src": "28274:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1053,
												"src": "28296:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1053,
												"src": "28316:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28316:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1053,
												"src": "28339:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1047,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28339:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28238:126:0"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1053,
												"src": "28398:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1050,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "28398:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "28397:8:0"
									},
									"scope": 1072,
									"src": "28212:194:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "28412:977:0",
										"text": "@dev Handles the receipt of a multiple ERC1155 token types. This function\nis called at the end of a `safeBatchTransferFrom` after the balances have\nbeen updated. To accept the transfer(s), this must return\n`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n(i.e. 0xbc197c81, or its own function selector).\n@param operator The address which initiated the batch transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param ids An array containing ids of each token being transferred (order and length must match values array)\n@param values An array containing amounts of each token being transferred (order and length must match ids array)\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1071,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1071,
												"src": "29435:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29435:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1071,
												"src": "29461:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1071,
												"src": "29483:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1059,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "29483:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1060,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "29483:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "values",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1071,
												"src": "29515:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1062,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "29515:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1063,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "29515:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1071,
												"src": "29550:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1065,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29550:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29425:150:0"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1071,
												"src": "29609:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1068,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "29609:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "29608:8:0"
									},
									"scope": 1072,
									"src": "29394:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2711,
							"src": "27346:2273:0"
						},
						{
							"id": 1073,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "29678:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1075,
										"name": "IERC165",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 900,
										"src": "29895:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC165_$900",
											"typeString": "contract IERC165"
										}
									},
									"id": 1076,
									"nodeType": "InheritanceSpecifier",
									"src": "29895:7:0"
								}
							],
							"contractDependencies": [
								900
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1074,
								"nodeType": "StructuredDocumentation",
								"src": "29704:171:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts may inherit from this and call {_registerInterface} to declare\n their support of an interface."
							},
							"fullyImplemented": true,
							"id": 1127,
							"linearizedBaseContracts": [
								1127,
								900
							],
							"name": "ERC165",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1079,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ERC165",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1127,
									"src": "29992:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1077,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "29992:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783031666663396137",
										"id": 1078,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "30039:10:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33540519_by_1",
											"typeString": "int_const 33540519"
										},
										"value": "0x01ffc9a7"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "30056:82:0",
										"text": " @dev Mapping of interface ids to whether or not it's supported."
									},
									"id": 1084,
									"mutability": "mutable",
									"name": "_supportedInterfaces",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1127,
									"src": "30143:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
										"typeString": "mapping(bytes4 => bool)"
									},
									"typeName": {
										"id": 1083,
										"keyType": {
											"id": 1081,
											"name": "bytes4",
											"nodeType": "ElementaryTypeName",
											"src": "30151:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes4",
												"typeString": "bytes4"
											}
										},
										"nodeType": "Mapping",
										"src": "30143:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
											"typeString": "mapping(bytes4 => bool)"
										},
										"valueType": {
											"id": 1082,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "30161:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "30226:193:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1088,
															"name": "_INTERFACE_ID_ERC165",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "30391:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 1087,
														"name": "_registerInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "30372:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30372:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "30372:40:0"
											}
										]
									},
									"documentation": null,
									"id": 1092,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30214:2:0"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30226:0:0"
									},
									"scope": 1127,
									"src": "30202:217:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "30652:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1101,
														"name": "_supportedInterfaces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "30669:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
															"typeString": "mapping(bytes4 => bool)"
														}
													},
													"id": 1103,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1102,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "30690:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "30669:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1100,
												"id": 1104,
												"nodeType": "Return",
												"src": "30662:40:0"
											}
										]
									},
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "30425:139:0",
										"text": " @dev See {IERC165-supportsInterface}.\n Time complexity O(1), guaranteed to always use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1097,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "30628:8:0"
									},
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1106,
												"src": "30596:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1094,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "30596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30595:20:0"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1106,
												"src": "30646:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1098,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30646:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "30645:6:0"
									},
									"scope": 1127,
									"src": "30569:140:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "31168:133:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1113,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "31186:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30786666666666666666",
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31201:10:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967295_by_1",
																	"typeString": "int_const 4294967295"
																},
																"value": "0xffffffff"
															},
															"src": "31186:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4552433136353a20696e76616c696420696e74657266616365206964",
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31213:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
																"typeString": "literal_string \"ERC165: invalid interface id\""
															},
															"value": "ERC165: invalid interface id"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee",
																"typeString": "literal_string \"ERC165: invalid interface id\""
															}
														],
														"id": 1112,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "31178:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31178:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "31178:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1119,
															"name": "_supportedInterfaces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "31254:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
																"typeString": "mapping(bytes4 => bool)"
															}
														},
														"id": 1121,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1120,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "31275:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "31254:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31290:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "31254:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "31254:40:0"
											}
										]
									},
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "30715:383:0",
										"text": " @dev Registers the contract as an implementer of the interface defined by\n `interfaceId`. Support of the actual ERC165 interface is automatic and\n registering its interface id is not required.\n See {IERC165-supportsInterface}.\n Requirements:\n - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`)."
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_registerInterface",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1126,
												"src": "31131:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1108,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "31131:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "31130:20:0"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31168:0:0"
									},
									"scope": 1127,
									"src": "31103:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2711,
							"src": "29876:1427:0"
						},
						{
							"id": 1128,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "31355:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1129,
								"nodeType": "StructuredDocumentation",
								"src": "31380:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 1322,
							"linearizedBaseContracts": [
								1322
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "32263:109:0",
										"statements": [
											{
												"assignments": [
													1140
												],
												"declarations": [
													{
														"constant": false,
														"id": 1140,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1154,
														"src": "32273:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1139,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32273:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1144,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1141,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "32285:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1142,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "32289:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32285:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32273:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1146,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "32308:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1147,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "32313:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32308:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32316:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "32300:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32300:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "32300:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1152,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1140,
													"src": "32364:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1138,
												"id": 1153,
												"nodeType": "Return",
												"src": "32357:8:0"
											}
										]
									},
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "31967:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1155,
												"src": "32209:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1155,
												"src": "32220:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32208:22:0"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1155,
												"src": "32254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32253:9:0"
									},
									"scope": 1322,
									"src": "32196:176:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "32710:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1166,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "32731:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1167,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "32734:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32737:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1165,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1172,
															1200
														],
														"referencedDeclaration": 1200,
														"src": "32727:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32727:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1164,
												"id": 1170,
												"nodeType": "Return",
												"src": "32720:50:0"
											}
										]
									},
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "32378:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1172,
												"src": "32656:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1172,
												"src": "32667:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32655:22:0"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1172,
												"src": "32701:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "32700:9:0"
									},
									"scope": 1322,
									"src": "32643:134:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "33163:92:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1185,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "33181:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1186,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "33186:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33181:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1188,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "33189:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "33173:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33173:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "33173:29:0"
											},
											{
												"assignments": [
													1192
												],
												"declarations": [
													{
														"constant": false,
														"id": 1192,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1199,
														"src": "33212:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1191,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33212:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1196,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1193,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "33224:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1194,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "33228:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33224:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33212:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1197,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1192,
													"src": "33247:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1183,
												"id": 1198,
												"nodeType": "Return",
												"src": "33240:8:0"
											}
										]
									},
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "32783:280:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1200,
												"src": "33081:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1200,
												"src": "33092:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33092:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1200,
												"src": "33103:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1178,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "33103:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33080:50:0"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1200,
												"src": "33154:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33153:9:0"
									},
									"scope": 1322,
									"src": "33068:187:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "33569:392:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1210,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "33801:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33806:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "33801:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1216,
												"nodeType": "IfStatement",
												"src": "33797:45:0",
												"trueBody": {
													"id": 1215,
													"nodeType": "Block",
													"src": "33809:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33830:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1209,
															"id": 1214,
															"nodeType": "Return",
															"src": "33823:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													1218
												],
												"declarations": [
													{
														"constant": false,
														"id": 1218,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1234,
														"src": "33852:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1217,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33852:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1222,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1219,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "33864:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1220,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "33868:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33864:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33852:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1224,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "33887:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1225,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1203,
																	"src": "33891:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33887:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1227,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1205,
																"src": "33896:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33887:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33899:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "33879:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33879:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "33879:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1232,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1218,
													"src": "33953:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1209,
												"id": 1233,
												"nodeType": "Return",
												"src": "33946:8:0"
											}
										]
									},
									"documentation": {
										"id": 1201,
										"nodeType": "StructuredDocumentation",
										"src": "33261:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1235,
												"src": "33515:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33515:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1235,
												"src": "33526:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33514:22:0"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1235,
												"src": "33560:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "33559:9:0"
									},
									"scope": 1322,
									"src": "33502:459:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "34490:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1246,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "34511:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1247,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "34514:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34517:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1245,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1252,
															1280
														],
														"referencedDeclaration": 1280,
														"src": "34507:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34507:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1244,
												"id": 1250,
												"nodeType": "Return",
												"src": "34500:46:0"
											}
										]
									},
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "33967:451:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1252,
												"src": "34436:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1252,
												"src": "34447:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34435:22:0"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1252,
												"src": "34481:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "34480:9:0"
									},
									"scope": 1322,
									"src": "34423:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "35130:177:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1265,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1257,
																"src": "35148:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35152:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "35148:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1268,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "35155:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "35140:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35140:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "35140:28:0"
											},
											{
												"assignments": [
													1272
												],
												"declarations": [
													{
														"constant": false,
														"id": 1272,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1279,
														"src": "35178:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35178:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1276,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1273,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "35190:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1274,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "35194:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "35190:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35178:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1277,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1272,
													"src": "35299:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1263,
												"id": 1278,
												"nodeType": "Return",
												"src": "35292:8:0"
											}
										]
									},
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "34559:471:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1280,
												"src": "35048:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1280,
												"src": "35059:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1280,
												"src": "35070:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1258,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "35070:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35047:50:0"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1280,
												"src": "35121:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35120:9:0"
									},
									"scope": 1322,
									"src": "35035:272:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "35825:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1291,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "35846:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1292,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "35849:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35852:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1290,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1297,
															1321
														],
														"referencedDeclaration": 1321,
														"src": "35842:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35842:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1289,
												"id": 1295,
												"nodeType": "Return",
												"src": "35835:44:0"
											}
										]
									},
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "35313:440:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1297,
												"src": "35771:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1297,
												"src": "35782:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35770:22:0"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1297,
												"src": "35816:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "35815:9:0"
									},
									"scope": 1322,
									"src": "35758:128:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "36452:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1310,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1302,
																"src": "36470:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36475:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "36470:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1313,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1304,
															"src": "36478:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1309,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "36462:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36462:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "36462:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1316,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1300,
														"src": "36508:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1317,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "36512:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36508:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1308,
												"id": 1319,
												"nodeType": "Return",
												"src": "36501:12:0"
											}
										]
									},
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "35892:460:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1321,
												"src": "36370:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1321,
												"src": "36381:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1321,
												"src": "36392:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1303,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36392:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "36369:50:0"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1321,
												"src": "36443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "36442:9:0"
									},
									"scope": 1322,
									"src": "36357:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2711,
							"src": "31944:4578:0"
						},
						{
							"id": 1323,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36582:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1325,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 610,
										"src": "36852:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$610",
											"typeString": "contract Context"
										}
									},
									"id": 1326,
									"nodeType": "InheritanceSpecifier",
									"src": "36852:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1327,
										"name": "ERC165",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1127,
										"src": "36861:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC165_$1127",
											"typeString": "contract ERC165"
										}
									},
									"id": 1328,
									"nodeType": "InheritanceSpecifier",
									"src": "36861:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1329,
										"name": "IERC1155",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1020,
										"src": "36869:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1155_$1020",
											"typeString": "contract IERC1155"
										}
									},
									"id": 1330,
									"nodeType": "InheritanceSpecifier",
									"src": "36869:8:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1331,
										"name": "IERC1155MetadataURI",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1033,
										"src": "36879:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1155MetadataURI_$1033",
											"typeString": "contract IERC1155MetadataURI"
										}
									},
									"id": 1332,
									"nodeType": "InheritanceSpecifier",
									"src": "36879:19:0"
								}
							],
							"contractDependencies": [
								610,
								900,
								1020,
								1033,
								1127
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1324,
								"nodeType": "StructuredDocumentation",
								"src": "36614:217:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 2335,
							"linearizedBaseContracts": [
								2335,
								1033,
								1020,
								1127,
								900,
								610
							],
							"name": "ERC1155",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1335,
									"libraryName": {
										"contractScope": null,
										"id": 1333,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1322,
										"src": "36911:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1322",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "36905:27:0",
									"typeName": {
										"id": 1334,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "36924:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1338,
									"libraryName": {
										"contractScope": null,
										"id": 1336,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 588,
										"src": "36943:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$588",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "36937:26:0",
									"typeName": {
										"id": 1337,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "36955:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 1344,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2335,
									"src": "37018:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1343,
										"keyType": {
											"id": 1339,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "37027:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "37018:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1342,
											"keyType": {
												"id": 1340,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "37046:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "37038:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1341,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "37057:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1350,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2335,
									"src": "37141:72:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1349,
										"keyType": {
											"id": 1345,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "37150:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "37141:45:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 1348,
											"keyType": {
												"id": 1346,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "37169:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "37161:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 1347,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "37180:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1352,
									"mutability": "mutable",
									"name": "_uri",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2335,
									"src": "37334:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1351,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "37334:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1355,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ERC1155",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2335,
									"src": "38026:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1353,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "38026:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30786439623637613236",
										"id": 1354,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "38074:10:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3652614694_by_1",
											"typeString": "int_const 3652614694"
										},
										"value": "0xd9b67a26"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1358,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ERC1155_METADATA_URI",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2335,
									"src": "38165:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1356,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "38165:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783065383933343163",
										"id": 1357,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "38226:10:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_243872796_by_1",
											"typeString": "int_const 243872796"
										},
										"value": "0x0e89341c"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "38325:313:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1365,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "38343:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1364,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1801,
														"src": "38335:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38335:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "38335:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1369,
															"name": "_INTERFACE_ID_ERC1155",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "38455:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 1368,
														"name": "_registerInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "38436:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4)"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38436:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1371,
												"nodeType": "ExpressionStatement",
												"src": "38436:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1373,
															"name": "_INTERFACE_ID_ERC1155_METADATA_URI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "38596:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 1372,
														"name": "_registerInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "38577:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4)"
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38577:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1375,
												"nodeType": "ExpressionStatement",
												"src": "38577:54:0"
											}
										]
									},
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "38243:38:0",
										"text": " @dev See {_setURI}."
									},
									"id": 1377,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "uri",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1377,
												"src": "38299:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1360,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38299:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "38298:19:0"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38325:0:0"
									},
									"scope": 2335,
									"src": "38286:352:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1032
									],
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "39106:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1386,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1352,
													"src": "39123:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1385,
												"id": 1387,
												"nodeType": "Return",
												"src": "39116:11:0"
											}
										]
									},
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "38644:388:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1382,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "39073:8:0"
									},
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1389,
												"src": "39050:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39049:9:0"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1389,
												"src": "39091:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1383,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39091:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39090:15:0"
									},
									"scope": 2335,
									"src": "39037:97:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										958
									],
									"body": {
										"id": 1416,
										"nodeType": "Block",
										"src": "39363:133:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1401,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "39381:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "39400:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "39392:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1402,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "39392:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39392:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "39381:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39404:45:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															},
															"value": "ERC1155: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
																"typeString": "literal_string \"ERC1155: balance query for the zero address\""
															}
														],
														"id": 1400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "39373:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39373:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "39373:77:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1410,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "39467:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1412,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1411,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "39477:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "39467:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1414,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1413,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "39481:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "39467:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1399,
												"id": 1415,
												"nodeType": "Return",
												"src": "39460:29:0"
											}
										]
									},
									"documentation": {
										"id": 1390,
										"nodeType": "StructuredDocumentation",
										"src": "39140:131:0",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1396,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "39336:8:0"
									},
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1417,
												"src": "39295:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39295:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1417,
												"src": "39312:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39294:29:0"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1417,
												"src": "39354:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39353:9:0"
									},
									"scope": 2335,
									"src": "39276:220:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										971
									],
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "39832:436:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1432,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1421,
																	"src": "39850:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "39850:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1434,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "39869:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "39869:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39850:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39881:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 1431,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "39842:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39842:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1439,
												"nodeType": "ExpressionStatement",
												"src": "39842:83:0"
											},
											{
												"assignments": [
													1444
												],
												"declarations": [
													{
														"constant": false,
														"id": 1444,
														"mutability": "mutable",
														"name": "batchBalances",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1493,
														"src": "39936:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1442,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "39936:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1443,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "39936:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1451,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1448,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1421,
																"src": "39983:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "39983:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "39969:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1445,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "39973:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1446,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "39973:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39969:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39936:63:0"
											},
											{
												"body": {
													"id": 1489,
													"nodeType": "Block",
													"src": "40056:175:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1464,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1421,
																				"src": "40078:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 1466,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1465,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1453,
																				"src": "40087:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "40078:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 1469,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "40101:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1468,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "40093:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1467,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "40093:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "40093:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"src": "40078:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "40105:51:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c",
																			"typeString": "literal_string \"ERC1155: batch balance query for the zero address\""
																		},
																		"value": "ERC1155: batch balance query for the zero address"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1fbbb69d10332726591dc7ee4a23a94661eda2bec5ce6bf93a68249147dc8d9c",
																			"typeString": "literal_string \"ERC1155: batch balance query for the zero address\""
																		}
																	],
																	"id": 1463,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "40070:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40070:87:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1474,
															"nodeType": "ExpressionStatement",
															"src": "40070:87:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1475,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1444,
																		"src": "40171:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1477,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1476,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1453,
																		"src": "40185:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "40171:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1478,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1344,
																			"src": "40190:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1482,
																		"indexExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1479,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1424,
																				"src": "40200:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1481,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1480,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1453,
																				"src": "40204:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "40200:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "40190:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1486,
																	"indexExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1483,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1421,
																			"src": "40208:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1485,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1484,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1453,
																			"src": "40217:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "40208:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "40190:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "40171:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1488,
															"nodeType": "ExpressionStatement",
															"src": "40171:49:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1456,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "40030:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1457,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "40034:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "40034:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40030:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1490,
												"initializationExpression": {
													"assignments": [
														1453
													],
													"declarations": [
														{
															"constant": false,
															"id": 1453,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1490,
															"src": "40015:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1452,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "40015:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1455,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40027:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "40015:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "40051:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 1460,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "40053:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1462,
													"nodeType": "ExpressionStatement",
													"src": "40051:3:0"
												},
												"nodeType": "ForStatement",
												"src": "40010:221:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1491,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1444,
													"src": "40248:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1430,
												"id": 1492,
												"nodeType": "Return",
												"src": "40241:20:0"
											}
										]
									},
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "39502:146:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1426,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "39784:8:0"
									},
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "accounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1494,
												"src": "39686:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1419,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "39686:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1420,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "39686:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1494,
												"src": "39721:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1422,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "39721:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1423,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "39721:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39676:71:0"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1494,
												"src": "39810:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1427,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "39810:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1428,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "39810:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "39809:18:0"
									},
									"scope": 2335,
									"src": "39653:615:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										979
									],
									"body": {
										"id": 1527,
										"nodeType": "Block",
										"src": "40420:222:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1504,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "40438:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40438:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1506,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1497,
																"src": "40454:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "40438:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40464:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1503,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "40430:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40430:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1510,
												"nodeType": "ExpressionStatement",
												"src": "40430:78:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1511,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1350,
																"src": "40519:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1515,
															"indexExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1512,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "40538:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40538:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "40519:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1516,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1514,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "40552:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "40519:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1517,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1499,
														"src": "40564:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "40519:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1519,
												"nodeType": "ExpressionStatement",
												"src": "40519:53:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1521,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "40602:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40602:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1523,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "40616:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1524,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "40626:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1520,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "40587:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40587:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1526,
												"nodeType": "EmitStatement",
												"src": "40582:53:0"
											}
										]
									},
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "40274:57:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1501,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "40411:8:0"
									},
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1528,
												"src": "40363:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40363:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1528,
												"src": "40381:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40381:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40362:33:0"
									},
									"returnParameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40420:0:0"
									},
									"scope": 2335,
									"src": "40336:306:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										989
									],
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "40806:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1539,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "40823:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1541,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1540,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "40842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "40823:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1543,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1542,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "40851:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "40823:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1538,
												"id": 1544,
												"nodeType": "Return",
												"src": "40816:44:0"
											}
										]
									},
									"documentation": {
										"id": 1529,
										"nodeType": "StructuredDocumentation",
										"src": "40648:56:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1535,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "40782:8:0"
									},
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1546,
												"src": "40735:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40735:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1546,
												"src": "40752:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40734:35:0"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1546,
												"src": "40800:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40800:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40799:6:0"
									},
									"scope": 2335,
									"src": "40709:158:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1003
									],
									"body": {
										"id": 1651,
										"nodeType": "Block",
										"src": "41131:700:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1562,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1551,
																"src": "41149:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "41163:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "41155:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1563,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "41155:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41155:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "41149:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41167:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 1561,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "41141:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41141:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "41141:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1572,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1549,
																	"src": "41238:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1573,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 598,
																		"src": "41246:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 1574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41246:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "41238:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1577,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1549,
																		"src": "41279:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1578,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "41285:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 1579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "41285:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 1576,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1546,
																	"src": "41262:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41262:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "41238:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41312:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 1571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "41217:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41217:148:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1584,
												"nodeType": "ExpressionStatement",
												"src": "41217:148:0"
											},
											{
												"assignments": [
													1586
												],
												"declarations": [
													{
														"constant": false,
														"id": 1586,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1651,
														"src": "41376:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1585,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "41376:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1589,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1587,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "41395:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41395:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41376:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1591,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "41439:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1592,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "41449:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1593,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "41455:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1595,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1553,
																	"src": "41477:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1594,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2334,
																"src": "41459:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41459:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1598,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1555,
																	"src": "41500:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1597,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2334,
																"src": "41482:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41482:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1600,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "41509:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1590,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "41418:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41418:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1602,
												"nodeType": "ExpressionStatement",
												"src": "41418:96:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1603,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1344,
																"src": "41525:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 1606,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1604,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1553,
																"src": "41535:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "41525:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1607,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1605,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "41539:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "41525:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1614,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1555,
																"src": "41571:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "41579:44:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																},
																"value": "ERC1155: insufficient balance for transfer"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																	"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1608,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1344,
																		"src": "41547:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1610,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1609,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1553,
																		"src": "41557:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "41547:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1612,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1611,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1549,
																	"src": "41561:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "41547:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1200,
															"src": "41547:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "41547:77:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41525:99:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1618,
												"nodeType": "ExpressionStatement",
												"src": "41525:99:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1619,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1344,
																"src": "41634:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 1622,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1620,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1553,
																"src": "41644:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "41634:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1623,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1621,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "41648:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "41634:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1630,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1555,
																"src": "41676:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1624,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1344,
																		"src": "41654:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1626,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1625,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1553,
																		"src": "41664:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "41654:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1628,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1627,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1551,
																	"src": "41668:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "41654:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1155,
															"src": "41654:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "41654:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41634:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1633,
												"nodeType": "ExpressionStatement",
												"src": "41634:49:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1635,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "41714:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1636,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "41724:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1637,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "41730:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1638,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "41734:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1639,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1555,
															"src": "41738:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1634,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "41699:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41699:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1641,
												"nodeType": "EmitStatement",
												"src": "41694:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1643,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "41787:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1644,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "41797:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1645,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "41803:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1646,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "41807:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1647,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1555,
															"src": "41811:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1648,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "41819:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1642,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2239,
														"src": "41756:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41756:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1650,
												"nodeType": "ExpressionStatement",
												"src": "41756:68:0"
											}
										]
									},
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "40873:56:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 1652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1559,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "41118:8:0"
									},
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1652,
												"src": "40969:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40969:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1652,
												"src": "40991:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40991:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1652,
												"src": "41011:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1652,
												"src": "41031:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1652,
												"src": "41055:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "41055:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "40959:119:0"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41131:0:0"
									},
									"scope": 2335,
									"src": "40934:897:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1019
									],
									"body": {
										"id": 1789,
										"nodeType": "Block",
										"src": "42125:962:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1670,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "42143:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "42143:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1672,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1663,
																	"src": "42157:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "42157:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "42143:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42173:42:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "42135:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42135:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1677,
												"nodeType": "ExpressionStatement",
												"src": "42135:81:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1679,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1657,
																"src": "42234:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "42248:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "42240:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1680,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "42240:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42240:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "42234:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42252:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 1678,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "42226:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42226:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1687,
												"nodeType": "ExpressionStatement",
												"src": "42226:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1689,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1655,
																	"src": "42323:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1690,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 598,
																		"src": "42331:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42331:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "42323:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1694,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1655,
																		"src": "42364:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1695,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "42370:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 1696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "42370:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 1693,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1546,
																	"src": "42347:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42347:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "42323:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42397:52:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															},
															"value": "ERC1155: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
																"typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
															}
														],
														"id": 1688,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "42302:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42302:157:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1701,
												"nodeType": "ExpressionStatement",
												"src": "42302:157:0"
											},
											{
												"assignments": [
													1703
												],
												"declarations": [
													{
														"constant": false,
														"id": 1703,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1789,
														"src": "42470:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1702,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "42470:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1706,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1704,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "42489:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42489:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42470:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1708,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "42533:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1709,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "42543:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1710,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "42549:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1711,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "42553:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1712,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "42558:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1713,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "42567:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1707,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "42512:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42512:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "42512:60:0"
											},
											{
												"body": {
													"id": 1770,
													"nodeType": "Block",
													"src": "42624:308:0",
													"statements": [
														{
															"assignments": [
																1728
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1728,
																	"mutability": "mutable",
																	"name": "id",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1770,
																	"src": "42638:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1727,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "42638:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1732,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1729,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1660,
																	"src": "42651:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1731,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1730,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1717,
																	"src": "42655:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "42651:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "42638:19:0"
														},
														{
															"assignments": [
																1734
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1734,
																	"mutability": "mutable",
																	"name": "amount",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1770,
																	"src": "42671:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1733,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "42671:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1738,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1735,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1663,
																	"src": "42688:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1737,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1736,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1717,
																	"src": "42696:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "42688:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "42671:27:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1739,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1344,
																			"src": "42713:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1742,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1740,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1728,
																			"src": "42723:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "42713:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1743,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1741,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1655,
																		"src": "42727:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "42713:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1750,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1734,
																			"src": "42776:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																			"id": 1751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "42800:44:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																				"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																			},
																			"value": "ERC1155: insufficient balance for transfer"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																				"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1744,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1344,
																					"src": "42735:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1746,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1745,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1728,
																					"src": "42745:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "42735:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1748,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1747,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1655,
																				"src": "42749:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "42735:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1200,
																		"src": "42735:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																		}
																	},
																	"id": 1752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42735:123:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "42713:145:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1754,
															"nodeType": "ExpressionStatement",
															"src": "42713:145:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1755,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1344,
																			"src": "42872:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1758,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1756,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1728,
																			"src": "42882:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "42872:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1759,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1757,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1657,
																		"src": "42886:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "42872:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1766,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1734,
																			"src": "42914:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1760,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1344,
																					"src": "42892:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1762,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1761,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1728,
																					"src": "42902:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "42892:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1764,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1763,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1657,
																				"src": "42906:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "42892:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1155,
																		"src": "42892:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42892:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "42872:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1769,
															"nodeType": "ExpressionStatement",
															"src": "42872:49:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1720,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "42603:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1721,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "42607:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "42607:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "42603:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1771,
												"initializationExpression": {
													"assignments": [
														1717
													],
													"declarations": [
														{
															"constant": false,
															"id": 1717,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1771,
															"src": "42588:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1716,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "42588:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1719,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42600:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "42588:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "42619:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 1724,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "42621:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1726,
													"nodeType": "ExpressionStatement",
													"src": "42619:3:0"
												},
												"nodeType": "ForStatement",
												"src": "42583:349:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1773,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "42961:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1774,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "42971:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1775,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "42977:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1776,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "42981:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1777,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "42986:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1772,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "42947:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42947:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1779,
												"nodeType": "EmitStatement",
												"src": "42942:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1781,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "43041:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1782,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "43051:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1783,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "43057:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1784,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "43061:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1785,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "43066:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1786,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "43075:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1780,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2306,
														"src": "43005:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43005:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1788,
												"nodeType": "ExpressionStatement",
												"src": "43005:75:0"
											}
										]
									},
									"documentation": {
										"id": 1653,
										"nodeType": "StructuredDocumentation",
										"src": "41837:61:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1667,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "42112:8:0"
									},
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1790,
												"src": "41943:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41943:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1790,
												"src": "41965:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1790,
												"src": "41985:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1658,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "41985:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1659,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "41985:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1790,
												"src": "42015:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1661,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "42015:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1662,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "42015:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1790,
												"src": "42049:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1664,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42049:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "41933:139:0"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42125:0:0"
									},
									"scope": 2335,
									"src": "41903:1184:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1800,
										"nodeType": "Block",
										"src": "43966:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1796,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "43976:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1797,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1793,
														"src": "43983:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "43976:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1799,
												"nodeType": "ExpressionStatement",
												"src": "43976:13:0"
											}
										]
									},
									"documentation": {
										"id": 1791,
										"nodeType": "StructuredDocumentation",
										"src": "43093:812:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 1801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "newuri",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1801,
												"src": "43927:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1792,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "43927:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "43926:22:0"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43966:0:0"
									},
									"scope": 2335,
									"src": "43910:86:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1882,
										"nodeType": "Block",
										"src": "44475:476:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1814,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1804,
																"src": "44493:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "44512:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "44504:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1815,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "44504:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44504:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "44493:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44516:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 1813,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "44485:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44485:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1822,
												"nodeType": "ExpressionStatement",
												"src": "44485:67:0"
											},
											{
												"assignments": [
													1824
												],
												"declarations": [
													{
														"constant": false,
														"id": 1824,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1882,
														"src": "44563:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1823,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "44563:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1827,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1825,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "44582:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44582:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44563:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1829,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1824,
															"src": "44626:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44644:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "44636:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1830,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "44636:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44636:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1834,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1804,
															"src": "44648:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1836,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1806,
																	"src": "44675:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1835,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2334,
																"src": "44657:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44657:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1839,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1808,
																	"src": "44698:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1838,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2334,
																"src": "44680:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44680:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1841,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "44707:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1828,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "44605:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44605:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1843,
												"nodeType": "ExpressionStatement",
												"src": "44605:107:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1844,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1344,
																"src": "44723:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 1847,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1845,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1806,
																"src": "44733:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "44723:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1848,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1846,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1804,
															"src": "44737:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "44723:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1855,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1808,
																"src": "44775:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1849,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1344,
																		"src": "44748:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1851,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1850,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1806,
																		"src": "44758:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "44748:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1853,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1852,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1804,
																	"src": "44762:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "44748:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1155,
															"src": "44748:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "44748:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "44723:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1858,
												"nodeType": "ExpressionStatement",
												"src": "44723:59:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1860,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1824,
															"src": "44812:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44830:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "44822:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1861,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "44822:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44822:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1865,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1804,
															"src": "44834:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1866,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "44843:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1867,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "44847:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1859,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "44797:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44797:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1869,
												"nodeType": "EmitStatement",
												"src": "44792:62:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1871,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1824,
															"src": "44896:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44914:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "44906:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1872,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "44906:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44906:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1876,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1804,
															"src": "44918:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1877,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "44927:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1878,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "44931:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1879,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "44939:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1870,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2239,
														"src": "44865:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44865:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1881,
												"nodeType": "ExpressionStatement",
												"src": "44865:79:0"
											}
										]
									},
									"documentation": {
										"id": 1802,
										"nodeType": "StructuredDocumentation",
										"src": "44002:372:0",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `account`.\n Emits a {TransferSingle} event.\n Requirements:\n - `account` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1883,
												"src": "44394:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44394:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1883,
												"src": "44411:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1883,
												"src": "44423:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1883,
												"src": "44439:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1809,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44439:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "44393:64:0"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44475:0:0"
									},
									"scope": 2335,
									"src": "44379:572:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1990,
										"nodeType": "Block",
										"src": "45412:584:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1898,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1886,
																"src": "45430:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "45444:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "45436:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1899,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "45436:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "45436:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "45430:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45448:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 1897,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "45422:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45422:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1906,
												"nodeType": "ExpressionStatement",
												"src": "45422:62:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1908,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1889,
																	"src": "45502:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "45502:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1910,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1892,
																	"src": "45516:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "45516:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "45502:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45532:42:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1907,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "45494:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45494:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1915,
												"nodeType": "ExpressionStatement",
												"src": "45494:81:0"
											},
											{
												"assignments": [
													1917
												],
												"declarations": [
													{
														"constant": false,
														"id": 1917,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1990,
														"src": "45586:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1916,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "45586:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1920,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1918,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "45605:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45605:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45586:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1922,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "45649:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "45667:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "45659:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1923,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "45659:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45659:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1927,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "45671:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1928,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "45675:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1929,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "45680:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1930,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "45689:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1921,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "45628:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45628:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1932,
												"nodeType": "ExpressionStatement",
												"src": "45628:66:0"
											},
											{
												"body": {
													"id": 1965,
													"nodeType": "Block",
													"src": "45743:86:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1944,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1344,
																			"src": "45757:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1949,
																		"indexExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1945,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1889,
																				"src": "45767:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1947,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1946,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1934,
																				"src": "45771:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "45767:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "45757:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1950,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1948,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1886,
																		"src": "45775:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "45757:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1955,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1344,
																					"src": "45796:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1959,
																				"indexExpression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 1956,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1889,
																						"src": "45806:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 1958,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 1957,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1934,
																						"src": "45810:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "45806:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "45796:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1961,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1960,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1886,
																				"src": "45814:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "45796:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1951,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1892,
																				"src": "45781:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1953,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1952,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1934,
																				"src": "45789:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "45781:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1155,
																		"src": "45781:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "45781:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "45757:61:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1964,
															"nodeType": "ExpressionStatement",
															"src": "45757:61:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1937,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1934,
														"src": "45722:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1938,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "45726:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "45726:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "45722:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1966,
												"initializationExpression": {
													"assignments": [
														1934
													],
													"declarations": [
														{
															"constant": false,
															"id": 1934,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1966,
															"src": "45710:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1933,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "45710:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1936,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "45719:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "45710:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "45738:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 1941,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1934,
															"src": "45738:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1943,
													"nodeType": "ExpressionStatement",
													"src": "45738:3:0"
												},
												"nodeType": "ForStatement",
												"src": "45705:124:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1968,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "45858:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "45876:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "45868:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1969,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "45868:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45868:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1973,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "45880:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1974,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "45884:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1975,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "45889:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1967,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "45844:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45844:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1977,
												"nodeType": "EmitStatement",
												"src": "45839:58:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1979,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "45944:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "45962:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "45954:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1980,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "45954:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45954:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1984,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "45966:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1985,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1889,
															"src": "45970:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1986,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "45975:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 1987,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "45984:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1978,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2306,
														"src": "45908:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45908:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1989,
												"nodeType": "ExpressionStatement",
												"src": "45908:81:0"
											}
										]
									},
									"documentation": {
										"id": 1884,
										"nodeType": "StructuredDocumentation",
										"src": "44957:334:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1991,
												"src": "45316:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45316:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1991,
												"src": "45328:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1887,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "45328:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1888,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "45328:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1991,
												"src": "45350:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1890,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "45350:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1891,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "45350:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1991,
												"src": "45376:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1893,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45376:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "45315:79:0"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45412:0:0"
									},
									"scope": 2335,
									"src": "45296:700:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2059,
										"nodeType": "Block",
										"src": "46322:461:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2002,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1994,
																"src": "46340:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "46359:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "46351:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2003,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "46351:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46351:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "46340:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "46363:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 2001,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "46332:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46332:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2010,
												"nodeType": "ExpressionStatement",
												"src": "46332:69:0"
											},
											{
												"assignments": [
													2012
												],
												"declarations": [
													{
														"constant": false,
														"id": 2012,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2059,
														"src": "46412:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2011,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "46412:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2015,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2013,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "46431:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46431:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46412:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2017,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "46475:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2018,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1994,
															"src": "46485:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46502:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "46494:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2019,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "46494:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46494:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2024,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1996,
																	"src": "46524:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2023,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2334,
																"src": "46506:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46506:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2027,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1998,
																	"src": "46547:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2026,
																"name": "_asSingletonArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2334,
																"src": "46529:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																}
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46529:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 2029,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "46556:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2016,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "46454:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46454:105:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2031,
												"nodeType": "ExpressionStatement",
												"src": "46454:105:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 2032,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1344,
																"src": "46570:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 2035,
															"indexExpression": {
																"argumentTypes": null,
																"id": 2033,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1996,
																"src": "46580:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "46570:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2036,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2034,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1994,
															"src": "46584:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "46570:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2043,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1998,
																"src": "46635:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 2044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "46655:38:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																	"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																},
																"value": "ERC1155: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																	"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2037,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1344,
																		"src": "46595:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 2039,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2038,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "46605:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "46595:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2041,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 2040,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1994,
																	"src": "46609:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "46595:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1200,
															"src": "46595:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46595:108:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46570:133:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2047,
												"nodeType": "ExpressionStatement",
												"src": "46570:133:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2049,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "46734:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2050,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1994,
															"src": "46744:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46761:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "46753:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2051,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "46753:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46753:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2055,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "46765:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2056,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1998,
															"src": "46769:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2048,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "46719:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46719:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2058,
												"nodeType": "EmitStatement",
												"src": "46714:62:0"
											}
										]
									},
									"documentation": {
										"id": 1992,
										"nodeType": "StructuredDocumentation",
										"src": "46002:238:0",
										"text": " @dev Destroys `amount` tokens of token type `id` from `account`\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens of token type `id`."
									},
									"id": 2060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2060,
												"src": "46260:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46260:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2060,
												"src": "46277:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2060,
												"src": "46289:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "46259:45:0"
									},
									"returnParameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46322:0:0"
									},
									"scope": 2335,
									"src": "46245:538:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2154,
										"nodeType": "Block",
										"src": "47079:603:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2073,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2063,
																"src": "47097:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "47116:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "47108:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2074,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "47108:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47108:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "47097:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "47120:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 2072,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "47089:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47089:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2081,
												"nodeType": "ExpressionStatement",
												"src": "47089:69:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2083,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2066,
																	"src": "47176:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "47176:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2085,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2069,
																	"src": "47190:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "47190:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "47176:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 2088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "47206:42:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 2082,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "47168:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47168:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2090,
												"nodeType": "ExpressionStatement",
												"src": "47168:81:0"
											},
											{
												"assignments": [
													2092
												],
												"declarations": [
													{
														"constant": false,
														"id": 2092,
														"mutability": "mutable",
														"name": "operator",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2154,
														"src": "47260:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2091,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "47260:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2095,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2093,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "47279:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 2094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47279:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47260:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2097,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2092,
															"src": "47323:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2098,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2063,
															"src": "47333:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47350:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "47342:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2099,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "47342:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47342:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2103,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2066,
															"src": "47354:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2104,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2069,
															"src": "47359:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "47368:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2096,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "47302:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47302:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2107,
												"nodeType": "ExpressionStatement",
												"src": "47302:69:0"
											},
											{
												"body": {
													"id": 2141,
													"nodeType": "Block",
													"src": "47420:182:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 2119,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1344,
																			"src": "47434:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 2124,
																		"indexExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 2120,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2066,
																				"src": "47444:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 2122,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 2121,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2109,
																				"src": "47448:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "47444:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "47434:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2125,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2123,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2063,
																		"src": "47452:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "47434:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 2134,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2069,
																				"src": "47511:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 2136,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 2135,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2109,
																				"src": "47519:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "47511:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																			"id": 2137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47539:38:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																				"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																			},
																			"value": "ERC1155: burn amount exceeds balance"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																				"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 2126,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1344,
																					"src": "47463:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 2130,
																				"indexExpression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 2127,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2066,
																						"src": "47473:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 2129,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 2128,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2109,
																						"src": "47477:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "47473:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "47463:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2132,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 2131,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2063,
																				"src": "47481:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "47463:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1200,
																		"src": "47463:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																		}
																	},
																	"id": 2138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "47463:128:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "47434:157:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2140,
															"nodeType": "ExpressionStatement",
															"src": "47434:157:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2112,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2109,
														"src": "47399:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2113,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2066,
															"src": "47403:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "47403:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "47399:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2142,
												"initializationExpression": {
													"assignments": [
														2109
													],
													"declarations": [
														{
															"constant": false,
															"id": 2109,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 2142,
															"src": "47387:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2108,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "47387:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 2111,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "47396:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "47387:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 2117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "47415:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 2116,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "47415:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2118,
													"nodeType": "ExpressionStatement",
													"src": "47415:3:0"
												},
												"nodeType": "ForStatement",
												"src": "47382:220:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2144,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2092,
															"src": "47631:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2145,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2063,
															"src": "47641:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47658:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "47650:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2146,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "47650:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47650:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2150,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2066,
															"src": "47662:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2151,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2069,
															"src": "47667:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 2143,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "47617:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 2152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47617:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2153,
												"nodeType": "EmitStatement",
												"src": "47612:63:0"
											}
										]
									},
									"documentation": {
										"id": 2061,
										"nodeType": "StructuredDocumentation",
										"src": "46789:183:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 2155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2155,
												"src": "46997:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46997:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2155,
												"src": "47014:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2064,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "47014:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2065,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "47014:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2155,
												"src": "47036:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2067,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "47036:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2068,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "47036:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "46996:65:0"
									},
									"returnParameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47079:0:0"
									},
									"scope": 2335,
									"src": "46977:705:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2173,
										"nodeType": "Block",
										"src": "48840:3:0",
										"statements": []
									},
									"documentation": {
										"id": 2156,
										"nodeType": "StructuredDocumentation",
										"src": "47688:923:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 2174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2174,
												"src": "48655:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48655:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2174,
												"src": "48681:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48681:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2174,
												"src": "48703:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48703:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2174,
												"src": "48723:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2163,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "48723:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2164,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "48723:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2174,
												"src": "48753:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2166,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "48753:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2167,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "48753:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2174,
												"src": "48787:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2169,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "48787:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "48645:165:0"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48840:0:0"
									},
									"scope": 2335,
									"src": "48616:227:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2238,
										"nodeType": "Block",
										"src": "49054:536:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 2189,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2180,
															"src": "49068:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 413,
														"src": "49068:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 2191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49068:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2237,
												"nodeType": "IfStatement",
												"src": "49064:520:0",
												"trueBody": {
													"id": 2236,
													"nodeType": "Block",
													"src": "49085:499:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2218,
																		"nodeType": "Block",
																		"src": "49202:188:0",
																		"statements": [
																			{
																				"condition": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2211,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2205,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2203,
																						"src": "49224:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 2207,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2180,
																										"src": "49253:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2206,
																									"name": "IERC1155Receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1072,
																									"src": "49236:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1072_$",
																										"typeString": "type(contract IERC1155Receiver)"
																									}
																								},
																								"id": 2208,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "49236:20:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC1155Receiver_$1072",
																									"typeString": "contract IERC1155Receiver"
																								}
																							},
																							"id": 2209,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1053,
																							"src": "49236:38:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																								"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																							}
																						},
																						"id": 2210,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": null,
																						"src": "49236:47:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "49224:59:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": null,
																				"id": 2217,
																				"nodeType": "IfStatement",
																				"src": "49220:156:0",
																				"trueBody": {
																					"id": 2216,
																					"nodeType": "Block",
																					"src": "49285:91:0",
																					"statements": [
																						{
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 2213,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "49314:42:0",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 2212,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										-19,
																										-19
																									],
																									"referencedDeclaration": -19,
																									"src": "49307:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 2214,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "49307:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2215,
																							"nodeType": "ExpressionStatement",
																							"src": "49307:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2219,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2204,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2203,
																				"mutability": "mutable",
																				"name": "response",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 2219,
																				"src": "49185:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2202,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "49185:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"src": "49184:17:0"
																	},
																	"src": "49176:214:0"
																},
																{
																	"block": {
																		"id": 2227,
																		"nodeType": "Block",
																		"src": "49425:47:0",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 2224,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2221,
																							"src": "49450:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 2223,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							-19,
																							-19
																						],
																						"referencedDeclaration": -19,
																						"src": "49443:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 2225,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "49443:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2226,
																				"nodeType": "ExpressionStatement",
																				"src": "49443:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 2228,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2222,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2221,
																				"mutability": "mutable",
																				"name": "reason",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 2228,
																				"src": "49403:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 2220,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "49403:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"src": "49402:22:0"
																	},
																	"src": "49391:81:0"
																},
																{
																	"block": {
																		"id": 2233,
																		"nodeType": "Block",
																		"src": "49479:95:0",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 2230,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "49504:54:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 2229,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							-19,
																							-19
																						],
																						"referencedDeclaration": -19,
																						"src": "49497:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 2231,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "49497:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2232,
																				"nodeType": "ExpressionStatement",
																				"src": "49497:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2234,
																	"nodeType": "TryCatchClause",
																	"parameters": null,
																	"src": "49473:101:0"
																}
															],
															"externalCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2196,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2176,
																		"src": "49142:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2197,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2178,
																		"src": "49152:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2198,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2182,
																		"src": "49158:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2199,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2184,
																		"src": "49162:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2200,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2186,
																		"src": "49170:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2193,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2180,
																				"src": "49120:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2192,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1072,
																			"src": "49103:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1072_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 2194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "49103:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1072",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 2195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1053,
																	"src": "49103:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49103:72:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2235,
															"nodeType": "TryStatement",
															"src": "49099:475:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 2239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2239,
												"src": "48898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2239,
												"src": "48924:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48924:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2239,
												"src": "48946:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48946:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2239,
												"src": "48966:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2239,
												"src": "48986:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2239,
												"src": "49010:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2185,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "49010:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "48888:145:0"
									},
									"returnParameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49054:0:0"
									},
									"scope": 2335,
									"src": "48849:741:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2305,
										"nodeType": "Block",
										"src": "49826:548:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 2256,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2245,
															"src": "49840:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 413,
														"src": "49840:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49840:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2304,
												"nodeType": "IfStatement",
												"src": "49836:532:0",
												"trueBody": {
													"id": 2303,
													"nodeType": "Block",
													"src": "49857:511:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2285,
																		"nodeType": "Block",
																		"src": "49981:193:0",
																		"statements": [
																			{
																				"condition": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2278,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2272,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2270,
																						"src": "50003:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 2274,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2245,
																										"src": "50032:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2273,
																									"name": "IERC1155Receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1072,
																									"src": "50015:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1072_$",
																										"typeString": "type(contract IERC1155Receiver)"
																									}
																								},
																								"id": 2275,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "50015:20:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_IERC1155Receiver_$1072",
																									"typeString": "contract IERC1155Receiver"
																								}
																							},
																							"id": 2276,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1071,
																							"src": "50015:43:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																								"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																							}
																						},
																						"id": 2277,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": null,
																						"src": "50015:52:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "50003:64:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": null,
																				"id": 2284,
																				"nodeType": "IfStatement",
																				"src": "49999:161:0",
																				"trueBody": {
																					"id": 2283,
																					"nodeType": "Block",
																					"src": "50069:91:0",
																					"statements": [
																						{
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 2280,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "50098:42:0",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 2279,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										-19,
																										-19
																									],
																									"referencedDeclaration": -19,
																									"src": "50091:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 2281,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "50091:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2282,
																							"nodeType": "ExpressionStatement",
																							"src": "50091:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2286,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2271,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2270,
																				"mutability": "mutable",
																				"name": "response",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 2286,
																				"src": "49964:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2269,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "49964:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"src": "49963:17:0"
																	},
																	"src": "49955:219:0"
																},
																{
																	"block": {
																		"id": 2294,
																		"nodeType": "Block",
																		"src": "50209:47:0",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 2291,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2288,
																							"src": "50234:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 2290,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							-19,
																							-19
																						],
																						"referencedDeclaration": -19,
																						"src": "50227:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 2292,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "50227:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2293,
																				"nodeType": "ExpressionStatement",
																				"src": "50227:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 2295,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2289,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2288,
																				"mutability": "mutable",
																				"name": "reason",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 2295,
																				"src": "50187:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 2287,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "50187:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"src": "50186:22:0"
																	},
																	"src": "50175:81:0"
																},
																{
																	"block": {
																		"id": 2300,
																		"nodeType": "Block",
																		"src": "50263:95:0",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
																							"id": 2297,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "50288:54:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
																								"typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
																							}
																						],
																						"id": 2296,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							-19,
																							-19
																						],
																						"referencedDeclaration": -19,
																						"src": "50281:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 2298,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "50281:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2299,
																				"nodeType": "ExpressionStatement",
																				"src": "50281:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2301,
																	"nodeType": "TryCatchClause",
																	"parameters": null,
																	"src": "50257:101:0"
																}
															],
															"externalCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2263,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2241,
																		"src": "49919:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2264,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2243,
																		"src": "49929:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2265,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2248,
																		"src": "49935:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2266,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2251,
																		"src": "49940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 2267,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2253,
																		"src": "49949:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 2260,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2245,
																				"src": "49892:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2259,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1072,
																			"src": "49875:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1072_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 2261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "49875:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1072",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 2262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1071,
																	"src": "49875:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49875:79:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2302,
															"nodeType": "TryStatement",
															"src": "49871:487:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 2306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2306,
												"src": "49650:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49650:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2306,
												"src": "49676:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2306,
												"src": "49698:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2306,
												"src": "49718:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2246,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "49718:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2247,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "49718:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2306,
												"src": "49748:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2249,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "49748:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2250,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "49748:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2306,
												"src": "49782:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2252,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "49782:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "49640:165:0"
									},
									"returnParameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49826:0:0"
									},
									"scope": 2335,
									"src": "49596:778:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2333,
										"nodeType": "Block",
										"src": "50464:109:0",
										"statements": [
											{
												"assignments": [
													2318
												],
												"declarations": [
													{
														"constant": false,
														"id": 2318,
														"mutability": "mutable",
														"name": "array",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2333,
														"src": "50474:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2316,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "50474:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2317,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "50474:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2324,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 2322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50513:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "50499:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2319,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "50503:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2320,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "50503:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 2323,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50499:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50474:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2325,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2318,
															"src": "50525:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2327,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50531:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "50525:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2328,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2308,
														"src": "50536:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "50525:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2330,
												"nodeType": "ExpressionStatement",
												"src": "50525:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2331,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2318,
													"src": "50561:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 2313,
												"id": 2332,
												"nodeType": "Return",
												"src": "50554:12:0"
											}
										]
									},
									"documentation": null,
									"id": 2334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "element",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2334,
												"src": "50407:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50407:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "50406:17:0"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2334,
												"src": "50446:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2310,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "50446:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2311,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "50446:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "50445:18:0"
									},
									"scope": 2335,
									"src": "50380:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2711,
							"src": "36832:13743:0"
						},
						{
							"id": 2336,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "50643:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2338,
										"name": "ERC1155",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2335,
										"src": "50884:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC1155_$2335",
											"typeString": "contract ERC1155"
										}
									},
									"id": 2339,
									"nodeType": "InheritanceSpecifier",
									"src": "50884:7:0"
								}
							],
							"contractDependencies": [
								610,
								900,
								1020,
								1033,
								1127,
								2335
							],
							"contractKind": "contract",
							"documentation": {
								"id": 2337,
								"nodeType": "StructuredDocumentation",
								"src": "50669:177:0",
								"text": " @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use.\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 2402,
							"linearizedBaseContracts": [
								2402,
								2335,
								1033,
								1020,
								1127,
								900,
								610
							],
							"name": "ERC1155Burnable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2368,
										"nodeType": "Block",
										"src": "50971:207:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2349,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2341,
																	"src": "51002:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2350,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 598,
																		"src": "51013:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 2351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "51013:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "51002:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2354,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2341,
																		"src": "51046:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2355,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "51055:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 2356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "51055:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 2353,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1546,
																	"src": "51029:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 2357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51029:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "51002:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51082:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 2348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "50981:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50981:154:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2361,
												"nodeType": "ExpressionStatement",
												"src": "50981:154:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2363,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "51152:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2364,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2343,
															"src": "51161:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2365,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2345,
															"src": "51165:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2362,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2060,
														"src": "51146:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51146:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2367,
												"nodeType": "ExpressionStatement",
												"src": "51146:25:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "f5298aca",
									"id": 2369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2369,
												"src": "50912:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50912:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2369,
												"src": "50929:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2369,
												"src": "50941:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "50911:44:0"
									},
									"returnParameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50971:0:0"
									},
									"scope": 2402,
									"src": "50898:280:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2400,
										"nodeType": "Block",
										"src": "51282:214:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2381,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2371,
																	"src": "51313:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2382,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 598,
																		"src": "51324:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "51324:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "51313:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2386,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2371,
																		"src": "51357:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2387,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "51366:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 2388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "51366:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 2385,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1546,
																	"src": "51340:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51340:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "51313:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 2391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51393:43:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															},
															"value": "ERC1155: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
																"typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
															}
														],
														"id": 2380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "51292:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51292:154:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2393,
												"nodeType": "ExpressionStatement",
												"src": "51292:154:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2395,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2371,
															"src": "51468:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2396,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2374,
															"src": "51477:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2397,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2377,
															"src": "51482:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 2394,
														"name": "_burnBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2155,
														"src": "51457:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 2398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51457:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2399,
												"nodeType": "ExpressionStatement",
												"src": "51457:32:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "6b20c454",
									"id": 2401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnBatch",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2401,
												"src": "51203:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2401,
												"src": "51220:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2372,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "51220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2373,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "51220:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "values",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2401,
												"src": "51242:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2375,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "51242:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2376,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "51242:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "51202:64:0"
									},
									"returnParameters": {
										"id": 2379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51282:0:0"
									},
									"scope": 2402,
									"src": "51184:312:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2711,
							"src": "50847:651:0"
						},
						{
							"id": 2403,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "51551:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2405,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 610,
										"src": "52038:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$610",
											"typeString": "contract Context"
										}
									},
									"id": 2406,
									"nodeType": "InheritanceSpecifier",
									"src": "52038:7:0"
								}
							],
							"contractDependencies": [
								610
							],
							"contractKind": "contract",
							"documentation": {
								"id": 2404,
								"nodeType": "StructuredDocumentation",
								"src": "51577:439:0",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 2490,
							"linearizedBaseContracts": [
								2490,
								610
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2407,
										"nodeType": "StructuredDocumentation",
										"src": "52052:73:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 2411,
									"name": "Paused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2409,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2411,
												"src": "52143:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52143:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "52142:17:0"
									},
									"src": "52130:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2412,
										"nodeType": "StructuredDocumentation",
										"src": "52166:70:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 2416,
									"name": "Unpaused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2414,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2416,
												"src": "52256:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52256:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "52255:17:0"
									},
									"src": "52241:32:0"
								},
								{
									"constant": false,
									"id": 2418,
									"mutability": "mutable",
									"name": "_paused",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2490,
									"src": "52279:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2417,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "52279:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2426,
										"nodeType": "Block",
										"src": "52402:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2422,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2418,
														"src": "52412:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 2423,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "52422:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "52412:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2425,
												"nodeType": "ExpressionStatement",
												"src": "52412:15:0"
											}
										]
									},
									"documentation": {
										"id": 2419,
										"nodeType": "StructuredDocumentation",
										"src": "52306:67:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 2427,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52390:2:0"
									},
									"returnParameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52402:0:0"
									},
									"scope": 2490,
									"src": "52378:56:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2435,
										"nodeType": "Block",
										"src": "52574:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2433,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2418,
													"src": "52591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2432,
												"id": 2434,
												"nodeType": "Return",
												"src": "52584:14:0"
											}
										]
									},
									"documentation": {
										"id": 2428,
										"nodeType": "StructuredDocumentation",
										"src": "52440:84:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 2436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52544:2:0"
									},
									"returnParameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2436,
												"src": "52568:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "52568:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "52567:6:0"
									},
									"scope": 2490,
									"src": "52529:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2446,
										"nodeType": "Block",
										"src": "52816:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "52834:8:0",
															"subExpression": {
																"argumentTypes": null,
																"id": 2440,
																"name": "_paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2418,
																"src": "52835:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5061757361626c653a20706175736564",
															"id": 2442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52844:18:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 2439,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "52826:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52826:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2444,
												"nodeType": "ExpressionStatement",
												"src": "52826:37:0"
											},
											{
												"id": 2445,
												"nodeType": "PlaceholderStatement",
												"src": "52873:1:0"
											}
										]
									},
									"documentation": {
										"id": 2437,
										"nodeType": "StructuredDocumentation",
										"src": "52611:175:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2447,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52813:2:0"
									},
									"src": "52791:90:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2456,
										"nodeType": "Block",
										"src": "53081:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2451,
															"name": "_paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2418,
															"src": "53099:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53108:22:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 2450,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "53091:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53091:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2454,
												"nodeType": "ExpressionStatement",
												"src": "53091:40:0"
											},
											{
												"id": 2455,
												"nodeType": "PlaceholderStatement",
												"src": "53141:1:0"
											}
										]
									},
									"documentation": {
										"id": 2448,
										"nodeType": "StructuredDocumentation",
										"src": "52887:167:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 2457,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53078:2:0"
									},
									"src": "53059:90:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2472,
										"nodeType": "Block",
										"src": "53333:66:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2463,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2418,
														"src": "53343:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 2464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "53353:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "53343:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2466,
												"nodeType": "ExpressionStatement",
												"src": "53343:14:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2468,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "53379:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53379:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2467,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2411,
														"src": "53372:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53372:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2471,
												"nodeType": "EmitStatement",
												"src": "53367:25:0"
											}
										]
									},
									"documentation": {
										"id": 2458,
										"nodeType": "StructuredDocumentation",
										"src": "53155:124:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2473,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2461,
											"modifierName": {
												"argumentTypes": null,
												"id": 2460,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2447,
												"src": "53319:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "53319:13:0"
										}
									],
									"name": "_pause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53299:2:0"
									},
									"returnParameters": {
										"id": 2462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53333:0:0"
									},
									"scope": 2490,
									"src": "53284:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2488,
										"nodeType": "Block",
										"src": "53579:69:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2479,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2418,
														"src": "53589:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 2480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "53599:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "53589:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2482,
												"nodeType": "ExpressionStatement",
												"src": "53589:15:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2484,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "53628:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53628:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2483,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2416,
														"src": "53619:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53619:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2487,
												"nodeType": "EmitStatement",
												"src": "53614:27:0"
											}
										]
									},
									"documentation": {
										"id": 2474,
										"nodeType": "StructuredDocumentation",
										"src": "53405:121:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 2489,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2477,
											"modifierName": {
												"argumentTypes": null,
												"id": 2476,
												"name": "whenPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2457,
												"src": "53568:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "53568:10:0"
										}
									],
									"name": "_unpause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53548:2:0"
									},
									"returnParameters": {
										"id": 2478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53579:0:0"
									},
									"scope": 2490,
									"src": "53531:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2711,
							"src": "52017:1633:0"
						},
						{
							"id": 2491,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "53718:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2493,
										"name": "ERC1155",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2335,
										"src": "54084:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC1155_$2335",
											"typeString": "contract ERC1155"
										}
									},
									"id": 2494,
									"nodeType": "InheritanceSpecifier",
									"src": "54084:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2495,
										"name": "Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2490,
										"src": "54093:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Pausable_$2490",
											"typeString": "contract Pausable"
										}
									},
									"id": 2496,
									"nodeType": "InheritanceSpecifier",
									"src": "54093:8:0"
								}
							],
							"contractDependencies": [
								610,
								900,
								1020,
								1033,
								1127,
								2335,
								2490
							],
							"contractKind": "contract",
							"documentation": {
								"id": 2492,
								"nodeType": "StructuredDocumentation",
								"src": "53745:301:0",
								"text": " @dev ERC1155 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 2535,
							"linearizedBaseContracts": [
								2535,
								2490,
								2335,
								1033,
								1020,
								1127,
								900,
								610
							],
							"name": "ERC1155Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2174
									],
									"body": {
										"id": 2533,
										"nodeType": "Block",
										"src": "54482:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2518,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2499,
															"src": "54519:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2519,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2501,
															"src": "54529:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2520,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2503,
															"src": "54535:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2521,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2506,
															"src": "54539:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2522,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2509,
															"src": "54544:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2523,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2511,
															"src": "54553:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2515,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "54492:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_ERC1155Pausable_$2535",
																"typeString": "contract super ERC1155Pausable"
															}
														},
														"id": 2517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2174,
														"src": "54492:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54492:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2525,
												"nodeType": "ExpressionStatement",
												"src": "54492:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "54577:9:0",
															"subExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2527,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2436,
																	"src": "54578:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54578:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135355061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564",
															"id": 2530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "54588:46:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_382791644f51336ed3667770955aa8eb4efb839029c48708cadb22e92d271435",
																"typeString": "literal_string \"ERC1155Pausable: token transfer while paused\""
															},
															"value": "ERC1155Pausable: token transfer while paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_382791644f51336ed3667770955aa8eb4efb839029c48708cadb22e92d271435",
																"typeString": "literal_string \"ERC1155Pausable: token transfer while paused\""
															}
														],
														"id": 2526,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "54569:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54569:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2532,
												"nodeType": "ExpressionStatement",
												"src": "54569:66:0"
											}
										]
									},
									"documentation": {
										"id": 2497,
										"nodeType": "StructuredDocumentation",
										"src": "54108:136:0",
										"text": " @dev See {ERC1155-_beforeTokenTransfer}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 2534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2513,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "54469:8:0"
									},
									"parameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2534,
												"src": "54288:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54288:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2534,
												"src": "54314:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2503,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2534,
												"src": "54336:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2534,
												"src": "54356:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2504,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "54356:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2505,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "54356:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2509,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2534,
												"src": "54386:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2507,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "54386:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2508,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "54386:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2534,
												"src": "54420:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2510,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "54420:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "54278:165:0"
									},
									"returnParameters": {
										"id": 2514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54482:0:0"
									},
									"scope": 2535,
									"src": "54249:393:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2711,
							"src": "54047:597:0"
						},
						{
							"id": 2536,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "54716:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2538,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 610,
										"src": "55353:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$610",
											"typeString": "contract Context"
										}
									},
									"id": 2539,
									"nodeType": "InheritanceSpecifier",
									"src": "55353:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2540,
										"name": "AccessControl",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 889,
										"src": "55362:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AccessControl_$889",
											"typeString": "contract AccessControl"
										}
									},
									"id": 2541,
									"nodeType": "InheritanceSpecifier",
									"src": "55362:13:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2542,
										"name": "ERC1155Burnable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2402,
										"src": "55377:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC1155Burnable_$2402",
											"typeString": "contract ERC1155Burnable"
										}
									},
									"id": 2543,
									"nodeType": "InheritanceSpecifier",
									"src": "55377:15:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2544,
										"name": "ERC1155Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2535,
										"src": "55394:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC1155Pausable_$2535",
											"typeString": "contract ERC1155Pausable"
										}
									},
									"id": 2545,
									"nodeType": "InheritanceSpecifier",
									"src": "55394:15:0"
								}
							],
							"contractDependencies": [
								610,
								889,
								900,
								1020,
								1033,
								1127,
								2335,
								2402,
								2490,
								2535
							],
							"contractKind": "contract",
							"documentation": {
								"id": 2537,
								"nodeType": "StructuredDocumentation",
								"src": "54746:568:0",
								"text": " @dev {ERC1155} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts."
							},
							"fullyImplemented": true,
							"id": 2710,
							"linearizedBaseContracts": [
								2710,
								2535,
								2490,
								2402,
								2335,
								1033,
								1020,
								1127,
								900,
								889,
								610
							],
							"name": "ERC1155PresetMinterPauser",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 2550,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2710,
									"src": "55416:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2546,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "55416:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "4d494e5445525f524f4c45",
												"id": 2548,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "55464:13:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 2547,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "55454:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2549,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "55454:24:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 2555,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2710,
									"src": "55484:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2551,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "55484:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"arguments": [
											{
												"argumentTypes": null,
												"hexValue": "5041555345525f524f4c45",
												"id": 2553,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "55532:13:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 2552,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": -8,
											"src": "55522:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2554,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "55522:24:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2582,
										"nodeType": "Block",
										"src": "55743:156:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2565,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "55764:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2566,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "55784:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "55784:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2564,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "55753:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55753:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2569,
												"nodeType": "ExpressionStatement",
												"src": "55753:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2571,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2550,
															"src": "55819:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2572,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "55832:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "55832:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2570,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "55808:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55808:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2575,
												"nodeType": "ExpressionStatement",
												"src": "55808:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2577,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2555,
															"src": "55866:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2578,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "55879:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "55879:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2576,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "55855:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55855:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2581,
												"nodeType": "ExpressionStatement",
												"src": "55855:37:0"
											}
										]
									},
									"documentation": {
										"id": 2556,
										"nodeType": "StructuredDocumentation",
										"src": "55553:134:0",
										"text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE`, and `PAUSER_ROLE` to the account that\n deploys the contract."
									},
									"id": 2583,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 2561,
													"name": "uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2558,
													"src": "55738:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2562,
											"modifierName": {
												"argumentTypes": null,
												"id": 2560,
												"name": "ERC1155",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2335,
												"src": "55730:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC1155_$2335_$",
													"typeString": "type(contract ERC1155)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "55730:12:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2558,
												"mutability": "mutable",
												"name": "uri",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2583,
												"src": "55704:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2557,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "55704:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "55703:19:0"
									},
									"returnParameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55743:0:0"
									},
									"scope": 2710,
									"src": "55692:207:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2611,
										"nodeType": "Block",
										"src": "56198:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2597,
																	"name": "MINTER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2550,
																	"src": "56224:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2598,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 598,
																		"src": "56237:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 2599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "56237:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 2596,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "56216:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56216:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135355072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
															"id": 2601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56252:58:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8955910be8371dda281e80fa38d092164791ccbd984aaa07b76276bef2682e9c",
																"typeString": "literal_string \"ERC1155PresetMinterPauser: must have minter role to mint\""
															},
															"value": "ERC1155PresetMinterPauser: must have minter role to mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8955910be8371dda281e80fa38d092164791ccbd984aaa07b76276bef2682e9c",
																"typeString": "literal_string \"ERC1155PresetMinterPauser: must have minter role to mint\""
															}
														],
														"id": 2595,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "56208:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56208:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2603,
												"nodeType": "ExpressionStatement",
												"src": "56208:103:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2605,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2586,
															"src": "56328:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2606,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "56332:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2607,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2590,
															"src": "56336:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2608,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2592,
															"src": "56344:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2604,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1883,
														"src": "56322:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56322:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2610,
												"nodeType": "ExpressionStatement",
												"src": "56322:27:0"
											}
										]
									},
									"documentation": {
										"id": 2584,
										"nodeType": "StructuredDocumentation",
										"src": "55905:200:0",
										"text": " @dev Creates `amount` new tokens for `to`, of token type `id`.\n See {ERC1155-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
									},
									"functionSelector": "731133e9",
									"id": 2612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2612,
												"src": "56124:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56124:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2612,
												"src": "56136:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2612,
												"src": "56148:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56148:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2612,
												"src": "56164:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2591,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "56164:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "56123:59:0"
									},
									"returnParameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56198:0:0"
									},
									"scope": 2710,
									"src": "56110:246:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2642,
										"nodeType": "Block",
										"src": "56571:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2628,
																	"name": "MINTER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2550,
																	"src": "56597:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2629,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 598,
																		"src": "56610:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 2630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "56610:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 2627,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "56589:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56589:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135355072657365744d696e7465725061757365723a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
															"id": 2632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56625:58:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8955910be8371dda281e80fa38d092164791ccbd984aaa07b76276bef2682e9c",
																"typeString": "literal_string \"ERC1155PresetMinterPauser: must have minter role to mint\""
															},
															"value": "ERC1155PresetMinterPauser: must have minter role to mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8955910be8371dda281e80fa38d092164791ccbd984aaa07b76276bef2682e9c",
																"typeString": "literal_string \"ERC1155PresetMinterPauser: must have minter role to mint\""
															}
														],
														"id": 2626,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "56581:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56581:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2634,
												"nodeType": "ExpressionStatement",
												"src": "56581:103:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2636,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2615,
															"src": "56706:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2637,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2618,
															"src": "56710:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2638,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2621,
															"src": "56715:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2639,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2623,
															"src": "56724:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2635,
														"name": "_mintBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1991,
														"src": "56695:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56695:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2641,
												"nodeType": "ExpressionStatement",
												"src": "56695:34:0"
											}
										]
									},
									"documentation": {
										"id": 2613,
										"nodeType": "StructuredDocumentation",
										"src": "56362:91:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] variant of {mint}."
									},
									"functionSelector": "1f7fdffa",
									"id": 2643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintBatch",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2643,
												"src": "56477:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56477:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2643,
												"src": "56489:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2616,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "56489:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2617,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "56489:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2643,
												"src": "56511:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2619,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "56511:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2620,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "56511:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2643,
												"src": "56537:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "56537:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "56476:79:0"
									},
									"returnParameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56571:0:0"
									},
									"scope": 2710,
									"src": "56458:278:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2659,
										"nodeType": "Block",
										"src": "56973:139:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2649,
																	"name": "PAUSER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2555,
																	"src": "56999:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2650,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 598,
																		"src": "57012:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 2651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "57012:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 2648,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "56991:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56991:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135355072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f207061757365",
															"id": 2653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57027:59:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d5053a301adec69bf5c7c3782556a354b14090e41fa7ca93c4de3863fd6a98b9",
																"typeString": "literal_string \"ERC1155PresetMinterPauser: must have pauser role to pause\""
															},
															"value": "ERC1155PresetMinterPauser: must have pauser role to pause"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d5053a301adec69bf5c7c3782556a354b14090e41fa7ca93c4de3863fd6a98b9",
																"typeString": "literal_string \"ERC1155PresetMinterPauser: must have pauser role to pause\""
															}
														],
														"id": 2647,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "56983:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56983:104:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2655,
												"nodeType": "ExpressionStatement",
												"src": "56983:104:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2656,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2473,
														"src": "57097:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57097:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2658,
												"nodeType": "ExpressionStatement",
												"src": "57097:8:0"
											}
										]
									},
									"documentation": {
										"id": 2644,
										"nodeType": "StructuredDocumentation",
										"src": "56742:194:0",
										"text": " @dev Pauses all token transfers.\n See {ERC1155Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
									},
									"functionSelector": "8456cb59",
									"id": 2660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56955:2:0"
									},
									"returnParameters": {
										"id": 2646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56973:0:0"
									},
									"scope": 2710,
									"src": "56941:171:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2676,
										"nodeType": "Block",
										"src": "57355:143:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2666,
																	"name": "PAUSER_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2555,
																	"src": "57381:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2667,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 598,
																		"src": "57394:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 2668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "57394:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 2665,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "57373:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57373:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "455243313135355072657365744d696e7465725061757365723a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
															"id": 2670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57409:61:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_be510562063387b7714478be5eff01a8c39efbb1b76d9be224d34aac440c9e31",
																"typeString": "literal_string \"ERC1155PresetMinterPauser: must have pauser role to unpause\""
															},
															"value": "ERC1155PresetMinterPauser: must have pauser role to unpause"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_be510562063387b7714478be5eff01a8c39efbb1b76d9be224d34aac440c9e31",
																"typeString": "literal_string \"ERC1155PresetMinterPauser: must have pauser role to unpause\""
															}
														],
														"id": 2664,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "57365:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57365:106:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2672,
												"nodeType": "ExpressionStatement",
												"src": "57365:106:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2673,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2489,
														"src": "57481:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57481:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2675,
												"nodeType": "ExpressionStatement",
												"src": "57481:10:0"
											}
										]
									},
									"documentation": {
										"id": 2661,
										"nodeType": "StructuredDocumentation",
										"src": "57118:198:0",
										"text": " @dev Unpauses all token transfers.\n See {ERC1155Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
									},
									"functionSelector": "3f4ba83a",
									"id": 2677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57337:2:0"
									},
									"returnParameters": {
										"id": 2663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57355:0:0"
									},
									"scope": 2710,
									"src": "57321:177:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2174,
										2534
									],
									"body": {
										"id": 2708,
										"nodeType": "Block",
										"src": "57763:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2700,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2679,
															"src": "57800:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2701,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2681,
															"src": "57810:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2702,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2683,
															"src": "57816:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2703,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2686,
															"src": "57820:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2704,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2689,
															"src": "57825:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 2705,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2691,
															"src": "57834:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2697,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "57773:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_ERC1155PresetMinterPauser_$2710",
																"typeString": "contract super ERC1155PresetMinterPauser"
															}
														},
														"id": 2699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2534,
														"src": "57773:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57773:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2707,
												"nodeType": "ExpressionStatement",
												"src": "57773:66:0"
											}
										]
									},
									"documentation": null,
									"id": 2709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2695,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"contractScope": null,
												"id": 2693,
												"name": "ERC1155",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 2335,
												"src": "57733:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC1155_$2335",
													"typeString": "contract ERC1155"
												}
											},
											{
												"contractScope": null,
												"id": 2694,
												"name": "ERC1155Pausable",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 2535,
												"src": "57742:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC1155Pausable_$2535",
													"typeString": "contract ERC1155Pausable"
												}
											}
										],
										"src": "57724:34:0"
									},
									"parameters": {
										"id": 2692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2709,
												"src": "57543:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2681,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2709,
												"src": "57569:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57569:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2709,
												"src": "57591:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57591:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "ids",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2709,
												"src": "57611:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2684,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "57611:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2685,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "57611:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2709,
												"src": "57641:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2687,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "57641:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2688,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "57641:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2709,
												"src": "57675:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2690,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "57675:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "57533:165:0"
									},
									"returnParameters": {
										"id": 2696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57763:0:0"
									},
									"scope": 2710,
									"src": "57504:342:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2711,
							"src": "55315:2533:0"
						}
					],
					"src": "57:57792:0"
				},
				"id": 0
			}
		}
	}
}